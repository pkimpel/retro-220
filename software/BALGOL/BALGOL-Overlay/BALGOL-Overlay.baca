    01 0                  ASMBL 2
    02 0                  REORD 100.0
 01 00 0     0000   BUF   DEFN  0002            TAPE OUTPUT BUFFER
 01 01 0     0000   OT    DEFN  1               OUTPUT TAPE
 01 02 0     0000   T     DEFN  2               COMPILER TAPE UNIT
 01 03 0     0000   PNTR  DEFN  2               PRINTER UNIT
001 04 0     0000   PREV  DEFN  101             ADDRESS OF PREVIOUS INSTRUCTION IN BUF
001 05 0     0000   CNTRI DEFN  180             COUNTER FOR INSTRUCTIONS IN BUFFER
001 06 0     0000   CNTRF DEFN  181             COUNTER FOR FIX-UPS IN BUFFER
001 07 0     0000   WRTF  DEFN  183             RTF CONSTANT FOR WRITE SUBROUTINE
 01 08 0     0000   DESCR DEFN  184             INSTRUCTION IN OUTPUT BUFFER
 01 09 0     0000   EXPLN DEFN  185             SYMBOLIC EXPLANATION
001 10 0     0000   LCMAX DEFN  202             HIGHEST LOCATION USED IN SEGMENTS
001 11 0     0000   LRTF  DEFN  207             LOCATION OF LAST RTF IN OUTPUT BUFFER
001 12 0     0000   HALT1 DEFN  208             ERROR FLAG(SIGN IS 8 IF NO ERRORS)
001 13 0     0000   VARB  DEFN  251             LAST LOCATION USED FOR VARIABLES, ECT
 01 14 0     0000   EPSLN DEFN  258             NUMBER OF EXTERNAL PROGRAMS
 01 15 0     0000   AVAIL DEFN  273             FREED-UP LOCATIONS
 01 16 0     0000   OP    DEFN  275             OPERATOR STACK
 01 17 0     0000   DUMBS DEFN  292             DUMP STACK
 01 18 0     0000   SX    DEFN  400             MAG TAPE BUFFER
 01 19 0     0000   IMAGE DEFN  1632            CARD INPUT BUFFER
001 20 0     0000   XZERO DEFN  4095            START OF FIXED POINT CONSTANT LIST
001 21 0     0000   FZERO DEFN  4097            START OF FLOATING POINT CONSTANT LIST
 01 22 0     0000   XONE  DEFN  4099            FIXED POINT CONSTANT 1
001 23 0     0000   LALE  DEFN  4107            POINTS TO LABEL PROCESSING SUBROUTINE
001 24 0     0000   SCRTB DEFN  4116            SCRAMBLE TABLE FOR IDENTIFIERS
001 25 0     0000   SSC   DEFN  4216            POINTS TO WHATS LEFT OF MEMORY
001 26 0     0000   LOCN  DEFN  4217            LOCATION COUNTER FOR INSTRUCTIONS
001 27 0     0000   MAMAX DEFN  4227            END OF ASSOCIATIVE MEMORY
 01 28 0     0000   MSIZE DEFN  4999            MEMORY SIZE


 01 31 0     0000         LOCN  0000
001 32 0     0000   MDUMP HLT   0               SYMBOLIC MEMORY DUMP IS ON ODD LANE
001 33 0     0001         SOH                   SET INDICATOR FOR ENTIRE DUMP
 01 34 0     0002         BOF   *+2
 01 35 0     0003         IFL   T+,51,3
 01 36 0     0004         MRW 4 OT+10
 01 37 0     0005         STA   A
 01 38 0     0006         STB   B
 01 39 0     0007         LBC   *+1
 01 40 0     0008         NOP   LOD1-100
 01 41 0     0009         MOW 4 0,OT,4
 01 42 0     0010         MRD 4 100,OT,3,BMOD
 01 43 0     0011         BUN   100
 01 44 0     0012   A     HLT
 01 45 0     0013   B     HLT   MSIZE+1


 01 48 0     0014   MLOAD LDB   0
 01 49 0     0015         STB   B+,04           GET EXIT LINE
 01 50 0     0016         MLS 4 OT              POSITION TAPE SO THAT
 01 51 0     0017         MPF 4 OT,1            SEGMENTATION WILL WORK
 01 52 0     0018         LDB   B
 01 53 0     0019         SOR
 01 54 0     0020         FDV   *
 01 55 0     0021         CAD   A
 01 56 0     0022   *T    NOP   *+1
 01 57 0     0023         STB   T-,51
 01 58 0     0024   *B    BUN   *               RETURN TO PROGRAM


 01 61 0     0025         LDB   *+2
 01 62 0     0026         RTF   A,1
 01 63 0     0027   ZERO  RTF   199,100         ZERO MEMORY
 01 64 0     0028         STB   A               BEFORE LOADING PROGRAM
 01 65 0     0029         CFR   A,04
 01 66 0     0030         BCU   ZERO
 01 67 0     0031   LOADP MRD 4 100,OT,1
 01 68 0     0032         LDR   X+
 01 69 0     0033         STR   M+
 01 70 0     0034         LBC   *+1
 01 71 0     0035         CLA   100
 01 72 0     0036   *A    ADD - 200
 01 73 0     0037         ADD - 201
 01 74 0     0038         ADD - 202
 01 75 0     0039         ADD - 203
 01 76 0     0040         ADD - 204             SUM CHECK THE BLOCK
 01 77 0     0041         IBB   A-,5
 01 78 0     0042         BOF   *+1
 01 79 0     0043         BZA   M+
 01 80 0     0044         SPO   Q1+,4           IF IT DOES NOT
 01 81 0     0045         F424  9669,0,9669     SAY SO AND HALT
 01 82 0     0046         MPB 4 OT,1            TRY AGAIN
 01 83 0     0047         BUN   LOADP


 01 86 0     0048   *M    CAD   101             GET BUFFER ENTRY
 01 87 0     0049         LDB   M-
001 88 0     0050         BSA   C+,4            IS IT A RTF(IF NOT, ALL INSTRUCTIONS

001 90 0     0051         CLL   Z+              ARE LOADED SO PROCESS FIX-UPS
 01 91 0     0052         IFL   Z+,02,99
 01 92 0     0053   *A    DLB   Z+,04,1
001 93 0     0054         LDR - 100             IF FIX-UP HAS A SIGN OF 8 IT INDICATES
 01 94 0     0055         BFR   B+,12,80        END OF SOME SEGMENT
 01 95 0     0056         BZR   LOADP
 01 96 0     0057         DLB - 100,64,0        DO FIX-UP
 01 97 0     0058         STR - 0,04
 01 98 0     0059         BUN   A-


 02 01 0     0060   *C    STA   R+,66
002 02 0     0061         DBB   0,9999          INSTRUCTIONS ARE TRANSFERED TO
 02 03 0     0062         STB   R+,04           MEMORY WITH A RTF
 02 04 0     0063         LDB - 9999
 02 05 0     0064   *R    RTF   0,100
 02 06 0     0065         SRT   7
 02 07 0     0066         ADD   O+              GO GET NEXT RTF
 02 08 0     0067         ADL   M-
 02 09 0     0068         BUN   M-
 02 10 0     0069   *X    CAD   101
 02 11 0     0070   *O    HLT   1
 02 12 0     0071   *Z    HLT   99              FIX-UP COUNTER


 02 15 0     0072   *B    CFR   SECT,67         HAVE WE LOADED ALL OF THE
 02 16 0     0073         BCU   A-              SEGMENT INDICATED BY SECT
 02 17 0     0074   LODOX BUN   200


 02 20 0     0075   *V    HLT   1111
 02 21 0     0076   LODOV LDB   LODOX
 02 22 0     0077         CAD - 0
 02 23 0     0078         EXT   V-
 02 24 0     0079         SLA   4
 02 25 0     0080         STA   SECT,00         GET SEGMENT NUMBER
 02 26 0     0081         IFL   LODOX,04,1      ADVANCE EXIT LINE BY ONE
 02 27 0     0082         CLB
 02 28 0     0083   *B    MTS 4 SECT,OT         SEARCH FOR SEGMENT
 02 29 0     0084         MRD 4 100,OT,1
 02 30 0     0085         CAD   100
 02 31 0     0086         CFA   SECT,00         DID THE MACHINE WORK
 02 32 0     0087         BCE   LOADP+1         IF YES,LOAD THE SEGMENT
 02 33 0     0088         SPO   Q2+,3           IF NOT PRINT THE MESSAGE
 02 34 0     0089         F424  9669,0,9669         SEGMENT ERROR
 02 35 0     0090         BUN   B-              TRY AGAIN

 02 37 0     0091   SECT  HLT 8 0               SEGMENT NUMBER

 02 39 0     0092   *Q1   CNST  21602020202
 02 40 0     0093         CNST  24348454352
 02 41 0     0094         CNST  20062645400
 02 42 0     0095         CNST  24559595659
 02 43 0     0096   *Q2   CNST  21662454754
 02 44 0     0097         CNST  24555630045
 02 45 0     0098         CNST  25959565902


 02 48 0     0099         LOCN  100
 02 49 0     0100         HLT   0
 02 50 0     0101   FMT1  FBGR  INPUT,16(P5A),P10Z
002 51 0     0130   FMT3  FBGR  PRINT,49B,T5A,T1A1B2A4Z,T10N,T8Z1A,XB6Z2A,48B MONITOR
002 52 0     0159   FMT4  FBGR  PRINT,32B,11(T5A),33B        ERROR MESSAGE FORMAT BAND
 02 53 0     0188   TAB   DEFN  *
 02 54 0     0188         LOCN  200
 02 55 0     0200         HLT   0
002 56 0     0201   FMT5  FBGR  PRINT,24(T5A)                PRINTER-PUNCH FORMAT BAND

 02 58 0     0230   LOADL CRI 4 *+2,1           LOADER ENTRANCE
 02 59 0     0231         BUN   LOADC
002 60 0     0232         CRF 4 FMT1+28,51      LOAD INPUT FORMAT IF READY
 02 61 0     0233   LOADC STB   200,55
 02 62 0     0234   *A    IFL   200,54,1
 02 63 0     0235         BOF   A+
 02 64 0     0236         CWI 4 A+,2
 02 65 0     0237         BUN   A-
 02 66 0     0238   *A    CWI 4 *+2,2
 02 67 0     0239         BUN   *+4
002 68 0     0240         CWF 4 FMT3+28,32      LOAD PRINTER FORMATS IF PRINTER READY
 02 69 0     0241         CWF 4 FMT4+28,42
 02 70 0     0242         CWF 4 FMT5+28,52
 02 71 0     0243         CWI 4 *+2,1
 02 72 0     0244         BUN   *+2
002 73 0     0245         CWF 4 FMT5+28,51      LOAD PUNCH FORMAT IF PUNCH IS READY
 02 74 0     0246         LDR   B
 02 75 0     0247         BUN   ZERO-2


 02 78 0     0248         LOCN  700

 02 80 0     0700         BCS   *+3,4
 02 81 0     0701         STP 4 9898,1642
 02 82 0     0702         BUN 4 9898,IMAGE
 02 83 0     0703         MRD 4 0900,T,7
 02 84 0     0704         MRD 4 1600,T,0
 02 85 0     0705         MRD 4 2600,T,0
 02 86 0     0706         CLA   3200
 02 87 0     0707         LBC   *-1
 02 88 0     0708         ADD - 3600
 02 89 0     0709         ADD - 3601
 02 90 0     0710         ADD - 3602
 02 91 0     0711         ADD - 3603
 02 92 0     0712         ADD - 3604
 02 93 0     0713         ADD - 3605
 02 94 0     0714         ADD - 3606
 02 95 0     0715         ADD - 3607
 02 96 0     0716         ADD - 3608
 02 97 0     0717         ADD - 3609
 02 98 0     0718         IBB   *-10,10
 02 99 0     0719         BOF   *+1
 03 00 0     0720         BZA   A+              IF IT DOES NOT      PRINT
 03 01 0     0721         SPO   CSERR,4         CHECK SUM ERROR
 03 02 0     0722         F424  9669,0,9669
 03 03 0     0723         MPB 4 T,2
 03 04 0     0724         MPB 4 T,10
 03 05 0     0725         MPB 4 T,10
 03 06 0     0726         MPB 4 T,10
 03 07 0     0727         MRD 4 400,T,10        TRY AGAIN
 03 08 0     0728         MRD 4 1400,T,10
 03 09 0     0729         MRD 4 2400,T,10
 03 10 0     0730         MRD 4 3400,T,2
 03 11 0     0731         BUN   707


 03 14 0     0732   *A    CWF 4 ERFRM+28,42
 03 15 0     0733         LDB   DUMBS
 03 16 0     0734         IBB   A+,9999
 03 17 0     0735         LDB   +SCRTB+117
 03 18 0     0736         STP   LIBRX
 03 19 0     0737         BUN   LIBRF
 03 20 0     0738   *A    CAD   HALT1           SET THE X X UP IF AN ERROR
 03 21 0     0739         BSA   *+3,8             OCCURRED DURING COMPILATION
 03 22 0     0740         LDR   +525005250
 03 23 0     0741         STR   HALT
 03 24 0     0742         LDB   OP
 03 25 0     0743   *A    STB   C+,04           TEST FOR OP STACK EMPTY
 03 26 0     0744         IBB   A+,9999         IT SHOULD BE
 03 27 0     0745         STP   WEMX
 03 28 0     0746         BUN   WEM
 03 29 0     0747         CNST  30102030000     EXTRA LEFT PARENTHESIS
 03 30 0     0748         LDB   C+
 03 31 0     0749         LDB - 0
 03 32 0     0750         BUN   A-
 03 33 0     0751   *C    HLT   0


003 36 0     0752   *A    CAD   BUF             DUMP BUFFER IF SEGMENTATION WAS USED
 03 37 0     0753         BFA   A+,64,0         AND BUFFER IS NOT EMPTY
 03 38 0     0754         CAD   BUF+99
 03 39 0     0755         ADD   BUF+98
 03 40 0     0756         BZA   *+3
 03 41 0     0757         STP   WRITX
 03 42 0     0758         BUN   WRIT5
 03 43 0     0759         CAD   BUF             INCREASE SEGMENT NUMBER
 03 44 0     0760         CLL   BUF
 03 45 0     0761         STA   BUF,64
 03 46 0     0762         IFL   BUF,64,1
 03 47 0     0763         BUN   C+
 03 48 0     0764   *A    LDR   +9669009669     GENERATE BIG X X HALT
 03 49 0     0765         STR   INSTR
 03 50 0     0766         STP   WRITX
 03 51 0     0767         BUN   WRIT2
 03 52 0     0768         LDR   +1000600000     FOLLOWED BY A CARD READ
 03 53 0     0769         STR   INSTR           IF NOT USING SEGMENTATION
 03 54 0     0770         STP   WRITX
 03 55 0     0771         BUN   WRIT2


 03 58 0     0772   *C    LDR   $POOL$
 03 59 0     0773         STR   EXPLN
 03 60 0     0774   *C    LDB   *+1
 03 61 0     0775         CAD   XZERO
 03 62 0     0776   *A    STA   HOLD
 03 63 0     0777         BFA   B+,64,0
 03 64 0     0778         SRA   4
 03 65 0     0779         LDR - 1
 03 66 0     0780         STP   WRITX           OUTPUT ALL CONSTANTS USED BY
 03 67 0     0781         BUN   WRIT3           OBJECT PROGRAM
 03 68 0     0782         CAD   HOLD
 03 69 0     0783   *B    BFA   C+,04,0         XXXX  2R YYYY LINK  R=0 FLOATING
 03 70 0     0784         LDB   HOLD            XXXX+1  (CONSTANT)  R=1 INTEGER
 03 71 0     0785         CAD - 0               YYY  IS THE ASIGNMENT
 03 72 0     0786         BUN   A-              LINK=0 INDICATES END OF LIST
 03 73 0     0787   *C    LDB   *+1
 03 74 0     0788         CAD   FZERO           PROCESS FLOATING LIST
 03 75 0     0789         STP   B-
 03 76 0     0790         BUN   A-


 03 79 0     0791         CLL   EXPLN
 03 80 0     0792         MLS 4 T
 03 81 0     0793         MIB 4 *+2,T
 03 82 0     0794         BUN   *-1
 03 83 0     0795         MRD 4 LBRT,T,3        READ LIBRARY TABLE
003 84 0     0796         DFL   WRT10,11,9      CHANGE CONTROL SWITCH FOR EXTERNAL
 03 85 0     0797         DFL   FXUPY,11,9
 03 86 0     0798         LDB   EPSLN              PROGRAMS
003 87 0     0799         STP   EXTEX           PROCESS EXTERNAL PROGRAMS IF EPSLN
 03 88 0     0800         DBB   EXTP,1             IS NON-ZERO
003 89 0     0801         DFL   WRT10,11,2      CHANGE CONTROL SWITCH FOR LIBRARY
 03 90 0     0802         DFL   FXUPY,11,2
003 91 0     0803         CAD   +545600         MODIFY ERROR MESSAGE FOR LIBRARY
003 92 0     0804         STA   CNST9,06        TO READ  UNDEFINED EQUIVALENCE LIBRARY
                                                                  INCORRECT


 03 96 0     0805   *F    CLL   TST
 03 97 0     0806         CLB
 03 98 0     0807         CAD   LOCN
 03 99 0     0808         STA   LCHOD
 04 00 0     0809         DBB   *+1,9999-LBRT   START AT LBRT+1
 04 01 0     0810   *E    STB   I
 04 02 0     0811         CAD - 0
004 03 0     0812         BSA   A+,1                                                            ORIGINALLY: 00X 0X 0   08/V
004 04 0     0813         BZA   B+              END OF THIS PASS ON THE TABLE                   ORIGINALLY: 00X 0X 0   0(/X
004 05 0     0814         STA   J,00                                                            ORIGINALLY: 00X 0X 0   0(/X
 04 06 0     0815         DLB   J,64,0
 04 07 0     0816         CAD - 0
 04 08 0     0817         BFA   A+,11,3         IS THE ROUTINE ASSIGNED
 04 09 0     0818         LDB   I                     IF YES
 04 10 0     0819         IFL - 0,12,10         MARK IT WITH A SIGN OF 1
 04 11 0     0820         BUN   C+
 04 12 0     0821   *D    DLB   J,64,0
 04 13 0     0822         CAD - 0
 04 14 0     0823         BFA   C+,11,4
 04 15 0     0824         IFL   TST,00,1        ASSIGN SUBROUTINE IF IT HAS NOT
004 16 0     0825         STP   LIBRX           ALREADY ASSIGNED,  TST COUNTS NUMBER
004 17 0     0826         BUN   LIBRF           OF SUBROUTINES ASSIGNED ON THIS PASS
 04 18 0     0827   *C    LDB   J               THRU TABLE
 04 19 0     0828         IBB   A+,9999         SEQUENCE DOWN LIST OF REQUIRED
 04 20 0     0829         CAD - 1                    SUBROUTINES
 04 21 0     0830         STA   J
 04 22 0     0831         BUN   D-
 04 23 0     0832   *A    LDB   I               ADVANCE TO NEXT TABLE ENTRY
 04 24 0     0833         IBB   E-,1
004 25 0     0834   *B    LDB   TST             IF 1 ADDITIONAL SUBROUTINE WAS ASSIGNED
004 26 0     0835         DBB   F-,1            ANOTHER PASS THRU TABLE IS NECESSARY


 04 29 0     0836   *E    DEFN  *
 04 30 0     0836   *F    DLB   II,44,0
 04 31 0     0837         CAD - LBRT
 04 32 0     0838         BFA   A+,00,0         END OF LIBRARY TABLE
004 33 0     0839         BSA   B+,1            IF ENTRY WAS MARKED PROCESS THIS
 04 34 0     0840   *C    IFL   II,44,1         ROUTINE
 04 35 0     0841         BUN   F-
 04 36 0     0842   *B    DLB - LBRT,64,0
004 37 0     0843         CAD - 0               GET OPERAND OF ROUTINE TO BE PROCESSED
004 38 0     0844         DLB   *,44,0          POSITION TAPE TO BEGINNING OF ROUTINE
 04 39 0     0845         MFS   II,T
 04 40 0     0846         STA   LOCN,64         SETUP LOCATION COUNTER
 04 41 0     0847         SLA   2
004 42 0     0848         STA   MSK,44          AND MASK FOR RELOCATION OF INSTRUCTIONS
 04 43 0     0849         SRA   6
 04 44 0     0850         STA   MSK,04
 04 45 0     0851         CLL   EQTAB-1         CLEAR EQUIVALENCE TABLE
 04 46 0     0852         LDB   +EQTAB
 04 47 0     0853         RTF   EQTAB-1,100
 04 48 0     0854         CLL   JJ
 04 49 0     0855         IFL   JJ,02,2
 04 50 0     0856         MLS 4 T
 04 51 0     0857         MIB 4 *+2,T
 04 52 0     0858         BUN   *-1
 04 53 0     0859         MRD 4 BUFR,T,1
 04 54 0     0860         CAD   BUFR            DID WE FIND THE RIGHT BLOCK
 04 55 0     0861         CFA   II
 04 56 0     0862         BCE   E+
 04 57 0     0863         SPO   SRERR,3
 04 58 0     0864         F424  9669,0,9669
 04 59 0     0865         BUN   B-
 04 60 0     0866   *G    CLL   JJ
 04 61 0     0867         IFL   JJ,02,2
 04 62 0     0868         MLS 4 T
 04 63 0     0869         MIB 4 *+2,T
 04 64 0     0870         BUN   *-1
 04 65 0     0871         MRD 4 BUFR,T,1
 04 66 0     0872   *E    LDB   *+1
 04 67 0     0873         CLA   98
 04 68 0     0874         ADD - BUFR+1
 04 69 0     0875         DBB   *-1,1           CHECK SUM
 04 70 0     0876         BOF   *+1
 04 71 0     0877         BZA   D+
 04 72 0     0878         SPO   CSERR,4
 04 73 0     0879         F424  9669,0,9669
 04 74 0     0880         MPB 4 T,1
 04 75 0     0881         BUN   G-


 04 78 0     0882   *D    LDB   JJ
 04 79 0     0883         CAD - BUFR-1
 04 80 0     0884         STA   INSTR
 04 81 0     0885         STP   LBSBX           PROCESS INSTRUCTION IN BUFFER
 04 82 0     0886         BUN   LBSB
 04 83 0     0887         BUN   C-              END OF LIBRARY PROCEDURE
 04 84 0     0888         IFL   JJ,02,1
 04 85 0     0889         BOF   G-              END OF TAPE BLOCK
 04 86 0     0890         BUN   D-


 04 89 0     0891   *A    MIB 4 *+2,T
 04 90 0     0892         BUN   *-1
 04 91 0     0893         MRW 4 T
 04 92 0     0894         CLA                   EMIT AN END OF
004 93 0     0895         LSA   8               PROGRAM SIGNAL FOR LOADER
 04 94 0     0896         STP   FXUPX
 04 95 0     0897         BUN   FXUP
 04 96 0     0898         CAD   BUF+98
 04 97 0     0899         BSA   *+2,8
 04 98 0     0900         BZA   *+3
 04 99 0     0901         STP   WRITX           DUMP BUFFER IF NOT EMPTY
 05 00 0     0902         BUN   WRIT5
 05 01 0     0903         CAD   +9999999999
 05 02 0     0904         STA   BUF             OUTPUT A SENTINEL BLOCK
 05 03 0     0905         STP   WRITX
 05 04 0     0906         BUN   WRIT5
 05 05 0     0907         MIB 4 *+2,OT
 05 06 0     0908         BUN   *-1
 05 07 0     0909         MRW 4 OT


                                COMMENT
                                SEARCH FOR UNDEFINED LABELS AND EXTERNAL PROGRAMS
                                WORD= T LL SSSS LINK    LL= LENGTH OF IDENTIFIER
                                               T=2  FOR A NUMERIC LABLE
                                      SSSS  =     V TR ASIGN 0000
                                      SSSS+1=     (FIRST FIVE CHARACTERS OF IDENTIFIER)
                                      SSSS+2=     (NEXT FIVE CHARACTERS)
                                WE ARE LOOKING FOR THE CASES
                                (T=9, ASIGN=0) OR (V=9, T=8,9, ASIGN=0)

 05 20 0     0910   *E    LDB   Z+
 05 21 0     0911         CAD - SCRTB           GET HEAD OF STACK
 05 22 0     0912   *D    STA   Y+
 05 23 0     0913         DLB   Y+,64,0
 05 24 0     0914         IBB   A+,9999         STACK HAS NO ENTRIES
 05 25 0     0915         BOF   *+1
 05 26 0     0916         IFL   Y+,12,90        SET OVERFLOW IF
 05 27 0     0917         CAD - 1               OPERAND IS A NUMERIC LABEL
 05 28 0     0918         BSA   E+,8            EXTERNAL PROGRAM
 05 29 0     0919         BFA   B+,11,9         IS IT A LABEL
 05 30 0     0920   *C    LDB   Y+              SEQUENCE DOWN STACK
 05 31 0     0921         LDR   +34353600
 05 32 0     0922         STR   CNST8,08
 05 33 0     0923         CAD - 0
 05 34 0     0924         DBB   D-,1000         IF LINK IS LESS THAN 1000
 05 35 0     0925   *A    DFL   Z+,02,1         SKIP TO NEXT STACK
 05 36 0     0926         BRP   E-
 05 37 0     0927         BUN   OUT             END OF SCRAMBLE TABLE
 05 38 0     0928   *B    BFA   *+2,64,0        HAS LABEL BEEN ASSIGNED
 05 39 0     0929         BUN   C-
 05 40 0     0930         DFL   Y+,22,11        SET REPEAT IF IDENTIFIER
 05 41 0     0931         CAD - 2               IS LONGER THAN 5 CHARACTERS
 05 42 0     0932         LDR - 3
  5 43 0     0933         LSA   3
 05 44 0     0934         BRP   *+2
 05 45 0     0935         CLR
 05 46 0     0936         BOF   NMBRL           NUMERIC LABEL
 05 47 0     0937         STA   DICT+35
 05 48 0     0938         STR   DICT+36
 05 49 0     0939   PRNT  STP   WEMX
 05 50 0     0940         BUN   WEM
 05 51 0     0941   CNST8 CNST  33234353600     UNDIFENED LABEL (EXT PROGRAM) L
 05 52 0     0942         BUN   C-
 05 53 0     0943   *E    BOF   *+1
 05 54 0     0944         BFA   *+3,11,8
 05 55 0     0945         BFA   B-+2,12,89
 05 56 0     0946         BUN   C-
 05 57 0     0947         LDR   +10123536
 05 58 0     0948         STR   CNST8,08
 05 59 0     0949         BUN   B-


 05 62 0     0950   NMBRL LSA   0               CONVERT INTEGER
 05 63 0     0951         SRT   10              TO ALFANUMERIC CODE
 05 64 0     0952   *B    SLT   1
 05 65 0     0953         ADD   +80
 05 66 0     0954         BFA   A+,11,8
 05 67 0     0955         SLA   1
 05 68 0     0956         BUN   B-
 05 69 0     0957   *A    STA   DICT+35
 05 70 0     0958         IFL   DICT+35,12,30
 05 71 0     0959         CLA
 05 72 0     0960   *B    SLT   1
 05 73 0     0961         ADD   +80
 05 74 0     0962         BFA   A+,11,8
 05 75 0     0963         SLA   1
 05 76 0     0964         BUN   B-
 05 77 0     0965   *A    STA   DICT+36
 05 78 0     0966         BUN   PRNT
 05 79 0     0967   *Y    HLT   0               PRESENT OPERAND
 05 80 0     0968   *Z    HLT   99              STACK COUNT


 05 83 0     0969   OUT   CAD   LCHOD
 05 84 0     0970         CFA   LCMAX,64
 05 85 0     0971         BCH   *+2
 05 86 0     0972         CAD   LCMAX
 05 87 0     0973         SUB   +10000
 05 88 0     0974         SRT   8
 05 89 0     0975         BOF   *+1
 05 90 0     0976   *B    CLA   300
 05 91 0     0977   *C    ADD   +8
 05 92 0     0978         SLT   1
 05 93 0     0979         SLA   1
 05 94 0     0980         DFL   B-,81,1
 05 95 0     0981         BRP   C-
 05 96 0     0982         SLA   1
 05 97 0     0983         STA   DICT+35
 05 98 0     0984         CAD   VARB            SET UP CONSTANTS
 05 99 0     0985         ADD   +1              IN ALFANUMERIC FORMAT
 06 00 0     0986         BPA   *+2
 06 01 0     0987         CLA
 06 02 0     0988         SRT   4
 06 03 0     0989   *C    CLA   3
  6 04 0     0990   *B    ADD   +8
 06 05 0     0991         SLT   1
 06 06 0     0992         SLA   1
 06 07 0     0993         DFL   C-,01,1
 06 08 0     0994         BRP   B-
 06 09 0     0995         SLA   1               IF NOT PCS(4)
 06 10 0     0996         STA   DICT+36         PRINT MESSAGES
 06 11 0     0997         BCS   A+,4
 06 12 0     0998         CAD   DICT+36
 06 13 0     0999         CFA   DICT+35,88
 06 14 0     1000         BCH   *+4
 06 15 0     1001         STP   WEMX
 06 16 0     1002         BUN   WEM
 06 17 0     1003         CNST  36866707147
 06 18 0     1004         STP   WEMX
 06 19 0     1005         BUN   WEM+2
 06 20 0     1006         CNST  34547495036     COMPILED PROGRAM ENDS AT XXXX
 06 21 0     1007         STP   WEMX
 06 22 0     1008         BUN   WEM+2
 06 23 0     1009         CNST  34751535037     PROGRAM VARIABLES START AT XXXX
 06 24 0     1010   *A    LDB   DUMBS
 06 25 0     1011         DBB   MONST,1         GO GENERATE SYMBOLIC DUMP



 06 29 0     1012   LDBG  CAD   HALT
 06 30 0     1013         BFA   *+4,31,5
 06 31 0     1014         STP 4 9898,0916
 06 32 0     1015         BUN 4 9898,IFERR
 06 33 0     1016         BUN   *+4
 06 34 0     1017         BCS   *+3,4
 06 35 0     1018         STP 4 9898,0916
006 36 0     1019         BUN 4 9898,ZERSS

 06 38 0     1020   AGAIN DLB   FIXUP,44,0      THE FIXUP STACK CONTAINS THE
 06 39 0     1021         STP   REMX            FIX-UPS FOR CALLS OF EXTERNAL PROGRAMS
 06 40 0     1022         BUN   REM             FROM WITHIN SEGMENTS
 06 41 0     1023   XT001 BUN   S+              STACK EMPTY
 06 42 0     1024         LDR   +POST           A REWIND
 06 43 0     1025         STR   XT001,04        WILL BE NECESSARY
 06 44 0     1026         STA   HOLD
 06 45 0     1027         DLB   HOLD,64,0
 06 46 0     1028         CAD - 0
 06 47 0     1029         STA   HOLD
 06 48 0     1030         SRA   8
 06 49 0     1031         SLA   4
 06 50 0     1032         STA   THROW
 06 51 0     1033         CLB
 06 52 0     1034   MTS   MTS 4 THROW,OT        SEARCH FOR PROPER SEGMENT
 06 53 0     1035         MRD 4 100,OT,1
 06 54 0     1036         CFA   100,00
 06 55 0     1037         BCE   RDT+1
 06 56 0     1038         SPO   SRERR,3
 06 57 0     1039         F424  9669,0,9669
 06 58 0     1040         BUN   MTS             TRY AGAIN

 06 60 0     1041   RDT   MRD 4 100,OT,1
 06 61 0     1042         CLA   100
 06 62 0     1043         LBC   *-1
 06 63 0     1044   *A    ADD - 200
 06 64 0     1045         ADD - 201
 06 65 0     1046         ADD - 202
 06 66 0     1047         ADD - 203
 06 67 0     1048         ADD - 204
 06 68 0     1049         IBB   A-,5            CHECK SUM BLOCK
 06 69 0     1050         BOF   *+1
 06 70 0     1051         BZA   A+
 06 71 0     1052         SPO   CSERR,4
 06 72 0     1053         F424  9669,0,9669
 06 73 0     1054         BUN   *-1

 06 75 0     1055   *A    CAD   101
 06 76 0     1056         BSA   B+,4            IN CASE IT IS NOT
 06 77 0     1057         LDR   +1              GET NEXT BLOCK
 06 78 0     1058         STR   A-,02
 06 79 0     1059         BUN   RDT


 06 82 0     1060   *B    STA   T+              CAN THE FIX-UP BE
 06 83 0     1061         SLA   4               IN THIS GROUP OF INSTRUCTIONS
 06 84 0     1062         CFA   HOLD,64
 06 85 0     1063         BCL   Y+              YES
 06 86 0     1064         BCE   Y+
 06 87 0     1065   *W    CAD   T+              NO - TRY NEXT GROUP
 06 88 0     1066         SRA   1
 06 89 0     1067         STA   *+1,42
 06 90 0     1068         IFL   A-,02,0
 06 91 0     1069         IFL   A-,02,1         GET NEXT RTF
 06 92 0     1070         BUN   A-

 06 94 0     1071   *Y    CAD   T+
 06 95 0     1072         SRA   7
 06 96 0     1073         ADD   T+
 06 97 0     1074         SLA   4
 06 98 0     1075         CFA   HOLD,64         IS THE FIX-UP IN THIS GROUP
 06 99 0     1076         BCH   F+
 07 00 0     1077         BUN   W-              NO

 07 02 0     1078   *F    MPB 4 OT,1
 07 03 0     1079         CSU   HOLD
 07 04 0     1080         SRA   4
 07 05 0     1081         EXT   -1111
 07 06 0     1082         ADL   T+              DO ACTUAL FIX-UP IN
 07 07 0     1083         CAD   A-              THE BUFFER
 07 08 0     1084         LBC   T+
 07 09 0     1085         STA   A+,04
 07 10 0     1086         DBB   *+1,9999
 07 11 0     1087         LDR   HOLD
 07 12 0     1088   *A    STR - 0,04
 07 13 0     1089         CLA   100
 07 14 0     1090         LBC   *-1
 07 15 0     1091         CLL   199
 07 16 0     1092   *A    SUB - 200
 07 17 0     1093         SUB - 201
 07 18 0     1094         SUB - 202
 07 19 0     1095         SUB - 203
 07 20 0     1096         SUB - 204
 07 21 0     1097         IBB   A-,5
 07 22 0     1098         BOF   *+1
 07 23 0     1099         STA   199
 07 24 0     1100         MOW 4 100,OT,1
 07 25 0     1101         BUN   AGAIN
 07 26 0     1102   *T    HLT   0

 07 28 0     1103   POST  MIB 4 *+2,OT
 07 29 0     1104         BUN   *-1
 07 30 0     1105         MRW 4 OT
 07 31 0     1106   *S    CLB
 07 32 0     1107         RTF   SX,100
 07 33 0     1108         RTF   SX+100,100
 07 34 0     1109         RTF   SX+200,100
 07 35 0     1110         MIB 4 *+2,OT
 07 36 0     1111         BUN   *-1
 07 37 0     1112         MOW 4 0,OT,3
 07 38 0     1113         CAD   HALT
 07 39 0     1114         BCS   A+,4            IF NOT PCS(4)
 07 40 0     1115   *B    STA   *+1             HALT WITH OK OR XX IN A
 07 41 0     1116         HLT   0
 07 42 0     1117         BUN   LOADC
 07 43 0     1118   *A    BFA   B-,31,2         IF PCS(4) HALT ONLY IF XX
 07 44 0     1119         BUN   LOADC
 07 45 0     1120   II    CNST  1000000         LIBRARY INDEX NUMBER
 07 46 0     1121   JJ    HLT   0               TEMP
 07 47 0     1122   MSK   HLT   0               RELOCATION MASK FOR INSTRUCTIONS

                                PROCESS EXTERNAL PROGRAMS


 07 52 0     1123   EXTP  CAD   LOCN
 07 53 0     1124         CFA   LCMAX
 07 54 0     1125         BCH   *+2
 07 55 0     1126         CAD   LCMAX
 07 56 0     1127         STA   LOCN            LOCN=MAX(LCMAX,LOCN)
 07 57 0     1128   NAME  CLL   EQTAB-1
 07 58 0     1129         LDB   +EQTAB          CLEAR EQUIVALENCE TABLE
 07 59 0     1130         RTF   EQTAB-1,100
 07 60 0     1131         CLL   LEVEL
007 61 0     1132   *Z    STP   READX           READ NAME CARD OF EXTERNAL PROGRAM
 07 62 0     1133         BUN   READ
 07 63 0     1134         CAD   LOCN
 07 64 0     1135         STA   CRD-1
 07 65 0     1136         CAD   CRD
 07 66 0     1137         BSA   A+,2
 07 67 0     1138         STP   WEMX
 07 68 0     1139         BUN   WEM
 07 69 0     1140         CNST  3060809000      MISSING NAME CARD
 07 70 0     1141         BUN   Z-
 07 71 0     1142   *A    BCS   *+2,3
 07 72 0     1143         BCS   *+3,4
 07 73 0     1144         STP 4 9898,1602
 07 74 0     1145         BUN 4 9898,CRD
 07 75 0     1146   *A    STP   SCANX
 07 76 0     1147         BUN   SCAN
 07 77 0     1148         CAD   SYMBL
 07 78 0     1149         CFA   $FINIS$,00
 07 79 0     1150         BCU   *+5
 07 80 0     1151         CAD   SYMBL+1
 07 81 0     1152         CFA   $H$,00
 07 82 0     1153   EXTEX BCE   *
 07 83 0     1154         CAD   SYMBL
 07 84 0     1155         BSA   B+,2            IS THIS A PREFIX
 07 85 0     1156         SRT   10
 07 86 0     1157         DIV   +99
 07 87 0     1158         STR   LL0
 07 88 0     1159         CAD   LEVEL
 07 89 0     1160         STP   SRCHX           SEARCH FOR SYMBOL
 07 90 0     1161         BUN   SRCH
 07 91 0     1162         BUN   Y+              COULD NOT FIND IT
 07 92 0     1163         CAD   L
 07 93 0     1164         SLA   2
007 94 0     1165         STA   EQTAB-1,44      PUT LOCATION OF OPERAND OF THE EXTERNAL
 07 95 0     1166         CAD   LOCN            PROGRAM INTO EQTAB-1
 07 96 0     1167         SRA   4
 07 97 0     1168         STA   EQTAB-1,04      ALSO THE ASSIGNMENT
 07 98 0     1169         STA   MSK,04
 07 99 0     1170         SLA   6
 08 00 0     1171         STA   MSK,44          SET UP A MASK FOR RELOCATION
 08 01 0     1172         DLB   L,64,0          OF INSTRUCTIONS
 08 02 0     1173         CAD - 0
 08 03 0     1174         BFA   C+,11,9         EXTERNAL STATEMENT
 08 04 0     1175         BFA   E+,11,8         EXTERNAL PROCEDURE
 08 05 0     1176   *Y    STP   WEMX
 08 06 0     1177         BUN   WEM
 08 07 0     1178         CNST  31047141500     EXTERNAL PROGRAM NOT DECLARED
 08 08 0     1179         BUN   A+
 08 09 0     1180   *B    SRT   10
 08 10 0     1181         DIV   +99
 08 11 0     1182         STR   LL0
 08 12 0     1183         CLA
008 13 0     1184         STP   SRCHX           SEARCH FOR OPERAND OF PREFIX PROCEDURE
 08 14 0     1185         BUN   SRCH
 08 15 0     1186         BUN   F+
 08 16 0     1187         DLB   L,64,0
 08 17 0     1188         CAD - 0
 08 18 0     1189         BFA   B+,11,8         DID WE GET A PROCEDURE
 08 19 0     1190   *F    STP   WEMX
 08 20 0     1191         BUN   WEM
 08 21 0     1192         CNST  31712141500     PREFIX PROCEDURE NOT DECLARED
 08 22 0     1193         BUN   A-
 08 23 0     1194   *B    STA   LEVEL,02
 08 24 0     1195         BUN   A-


 08 27 0     1196   *C    DLB   L,64,0
 08 28 0     1197         CAD - 0
 08 29 0     1198         STA   HOLD
 08 30 0     1199         SLA   2
 08 31 0     1200         STA   EQTAB-1,44
 08 32 0     1201         STP   REMX
 08 33 0     1202         BUN   REM
 08 34 0     1203         HLT
 08 35 0     1204         SLA   4
 08 36 0     1205         STA   HOLD,22
 08 37 0     1206         CAD   HOLD
 08 38 0     1207         BFA   S+,22,00
 08 39 0     1208         EXT   +1111110000
008 40 0     1209         SLA   4               IT WAS - SO ENTER INTO THE FIXUP STACK
 08 41 0     1210         ADD   LOCN
 08 42 0     1211         SLA   6               LL XXXX YYYY
 08 43 0     1212         STA   HOLD
008 44 0     1213         LDB   AVALE           WHERE      LL= SEGMENT NUMBER
008 45 0     1214         STP   INSX                 XXXX= LOCATION TO BE FIXED UP
 08 46 0     1215         BUN   INS                  YYYY= FIX-UP
 08 47 0     1216         CAD   HOLD
 08 48 0     1217         STA - 0
 08 49 0     1218         STB   HOLD
 08 50 0     1219         CAD   HOLD
 08 51 0     1220         SLA   4
 08 52 0     1221         DLB   FIXUP,44,0
 08 53 0     1222         STP   INSX
 08 54 0     1223         BUN   INS
 08 55 0     1224         BUN   *+4
 08 56 0     1225   *S    LSA   0
 08 57 0     1226         STP   FXUPX           GENERATE FIX-UP FOR EXTERNAL
 08 58 0     1227         BUN   FXUP                     STATEMENT
 08 59 0     1228         DLB   L,64,00


 08 62 0     1229   *E    STP   REMX            REMOVE NEXT FIX-UP FROM LIST OF
008 63 0     1230         BUN   REM             ALL CALLS OF THE DECLARED PROCEDURE
 08 64 0     1231         BUN   D+                     LIST IS EXHAUSTED
 08 65 0     1232         BSA   T+,8
008 66 0     1233         BFA   S+,22,0         IS FIX-UP FOR CALL WITHIN A SEGMENT
 08 67 0     1234         EXT   +1111110000
 08 68 0     1235         SLA   4               IT WAS -- SO ENTER
 08 69 0     1236         ADD   LOCN            LL XXXX YYYY
 08 70 0     1237         SLA   6               WHERE     LL= SEGMENT NUMBER
008 71 0     1238         STA   HOLD                  XXXX= LOCATION TO BE FIXED UP
 08 72 0     1239         LDB   AVALE                 YYYY= FIX-UP
 08 73 0     1240         STP   INSX
 08 74 0     1241         BUN   INS
 08 75 0     1242         CAD   HOLD
 08 76 0     1243         STA - 0
 08 77 0     1244         STB   HOLD
 08 78 0     1245         CAD   HOLD
 08 79 0     1246         SLA   4
 08 80 0     1247         DLB   FIXUP,44,0
 08 81 0     1248         STP   INSX
 08 82 0     1249         BUN   INS
 08 83 0     1250         DLB   L,64,0
 08 84 0     1251         BUN   E-
 08 85 0     1252   *S    STP   FXUPX           GENERATE FIX-UP FOR EXTERNAL
 08 86 0     1253         BUN   FXUP                     PROCEDURE
 08 87 0     1254         DLB   L,64,0
 08 88 0     1255         BUN   E-
 08 89 0     1256   *T    STA   HOLD
 08 90 0     1257         DLB   L,64,0
 08 91 0     1258         STP   REMX
 08 92 0     1259         BUN   REM
 08 93 0     1260         HLT
 08 94 0     1261         EXT   +11110000
 08 95 0     1262         LDR   LOCN
 08 96 0     1263         ADL   LOCN
 08 97 0     1264         CSA   HOLD
 08 98 0     1265         STR   HOLD
 08 99 0     1266         STP   FXUPX
 09 00 0     1267         BUN   FXUP
 09 01 0     1268         DLB   L,64,0
 09 02 0     1269         LDR   HOLD
 09 03 0     1270         STR   LOCN
 09 04 0     1271         BUN   E-
 09 05 0     1272   *D    DLB   L,64,0
 09 06 0     1273         CAD - 0               SET SIGN TO 8 TO INDICATE
 09 07 0     1274         LSA   0             THAT EXTERNAL PROGRAM HAS BEEN
 09 08 0     1275         STA - 0               GIVEN AN ASSIGNMENT
009 09 0     1276         CAD   LOCN            GIVE ASSIGNMENT TO THE EXTERNAL PROGRAM
 09 10 0     1277         STA - 0,64
 09 11 0     1278   *A    STP   READX           READ ANOTHER CARD
 09 12 0     1279         BUN   READ
 09 13 0     1280         CLL   LEVEL
 09 14 0     1281         CAD   CRD
 09 15 0     1282         BSA   NUMB,0          IS THIS AN EQUIVALENCE CARD
 09 16 0     1283         BCS   *+2,3
 09 17 0     1284         BCS   *+3,4
 09 18 0     1285         STP 4 9898,1602
 09 19 0     1286         BUN 4 9898,CRD
 09 20 0     1287   *B    STP   SCANX           IF YES SCAN FOR THE IDENTIFIER
 09 21 0     1288         BUN   SCAN
 09 22 0     1289         CAD   SYMBL
 09 23 0     1290         BSA   Z+,2            IS THE IDENTIFIER A PREFIX
 09 24 0     1291         SRT   10              NO IT IS NOT
 09 25 0     1292         DIV   +99
 09 26 0     1293         STR   LL0
 09 27 0     1294         CAD   LEVEL
 09 28 0     1295         STP   SRCHX
 09 29 0     1296         BUN   SRCHP           SEARCH FOR OPERAND
 09 30 0     1297         BUN   Y+              IT WAS NOT DEFINED
 09 31 0     1298         STP   LIBRX
 09 32 0     1299         DLB   L,64,0
 09 33 0     1300         CAD - 0
 09 34 0     1301         BSA   *+2,8
 09 35 0     1302         LSA   0
 09 36 0     1303         SRA   4
 09 37 0     1304         STA   TEMP            GET THE ASSIGNMENT OF THE
 09 38 0     1305         STB   TEMP,66         REFERENCED IDENTIFIER
 09 39 0     1306         IFL   TEMP,62,12
 09 40 0     1307         BFA   LIBRF,51,3      IF IT WAS AN UNASSIGNED LIBRARY
                                                PROCEDURE- GIVE IT AN ASSIGNMENT
 09 42 0     1308         CAD   L
 09 43 0     1309         SLA   2
009 44 0     1310         STA   TEMP,44         ALSO SAVE THE SREF OF THE IDENTIFIER
 09 45 0     1311         STP   SCANX
 09 46 0     1312         BUN   SCAN
 09 47 0     1313         LDB   SYMBL           GET EQUIVALENCE NUMBER
 09 48 0     1314         DBB   Y+,100          IS IT GREATED THEN 100
 09 49 0     1315         CAD   TEMP
 09 50 0     1316         STA - EQTAB+100       PUT ENTRY INTO EQUIVALENCE TABLE
 09 51 0     1317         BUN   A-
 09 52 0     1318   *Y    STP   WEMX
 09 53 0     1319         BUN   WEM
 09 54 0     1320         CNST  31921090000     IMPROPER EQUIVALENCE CARD
 09 55 0     1321         BUN   A-
 09 56 0     1322   *Z    SRT   10
 09 57 0     1323         DIV   +99
 09 58 0     1324         STR   LL0
 09 59 0     1325         CLA
 09 60 0     1326         STP   SRCHX           GET OPERAND OF PREFIX PROCEDURE
 09 61 0     1327         BUN   SRCH
 09 62 0     1328         BUN   Y-              IT WAS NOT THERE
 09 63 0     1329         DLB   L,64,0
 09 64 0     1330         CAD - 0
 09 65 0     1331         STA   LEVEL,02        SET UP LEVEL FOR SEARCH OF PROCEDURE
009 66 0     1332         BFA   B-,11,8
 09 67 0     1333         BUN   Y-


 09 70 0     1334   NUMB  DFL   CRD+8,01,1      DECREASE WORD COUNT
 09 71 0     1335   *A    LDB   CRD
 09 72 0     1336         CAD - CRD+10
 09 73 0     1337         STA   INSTR           GET INSTRUCTION
 09 74 0     1338         STP   LBSBX
 09 75 0     1339         BUN   LBSB            GO DECODE INSTRUCTION
009 76 0     1340         BUN   NAME            ALL THROUGH WITH THIS EXTERNAL PROGRAM
 09 77 0     1341         IFL   CRD,04,1
 09 78 0     1342         DFL   CRD+8,01,1      DECREASE WORD COUNT
 09 79 0     1343         BRP   A-
 09 80 0     1344         STP   READX           READ ANOTHER CARD
 09 81 0     1345         BUN   READ
 09 82 0     1346         CAD   CRD
 09 83 0     1347         BSA   NUMB,0          IS THIS A INSTRUCTION CARD
 09 84 0     1348         STP   WEMX            IF NOT PRINT ERROR MESSAGE
 09 85 0     1349         BUN   WEM
 09 86 0     1350         CNST  30624260000     MISSING FINISH PSEUDO-OP


 09 89 0     1351   READ  CLL   CRD
 09 90 0     1352         LDB   +CRD+1
 09 91 0     1353         RTF   CRD,15          ZERO INPUT AREA
 09 92 0     1354         CLL   SCNCT           SET SCAN TO COLUMN 2
 09 93 0     1355         IFL   SCNCT,04,2      AND
 09 94 0     1356         STP 4 9999
 09 95 0     1357         BUN 4 9999,CRD
 09 96 0     1358   READX BUN   *


 09 99 0     1359   SCAN  CLL   K
010 00 0     1360         CLL   SYMBL           ZERO SYMBOL STORAGE AREA
010 01 0     1361         LDB   +SYMBL+1
010 02 0     1362         RTF   SYMBL,9
010 03 0     1363   *A    DLB   SCNCT,94,0
010 04 0     1364         CAD - CRD
010 05 0     1365         LDB   SCNCT
010 06 0     1366         SLA - 0               GET A CHARACTER
010 07 0     1367         SRA   8               ADVANCE COLUMN COUNT
010 08 0     1368         IFL   SCNCT,05,2
010 09 0     1369         STA   CHAR
010 10 0     1370         BFA   B+,02,00        IGNORE LEADING BLANKS
010 11 0     1371         BFA   C+,02,24        INDICATES THAT A PREFIX FOLLOWS
010 12 0     1372         BFA   N+,91,8         FIRST CHARACTER NUMERIC, DO NUMBER SCAN
010 13 0     1373         BFA   R+,91,4         FIRST CHARACTER ALFA, BUILD IDENTIFIER
010 14 0     1374         BFA   R+,91,5
010 15 0     1375         BFA   R+,91,6
010 16 0     1376         BUN   B+              IGNORE ALL OTHER CHARACTERS
010 17 0     1377   *C    IFL   SYMBL,12,20
010 18 0     1378   *B    IBB   A-,9840         DID WE FINISH THE CARD
010 19 0     1379   *D    STP   WEMX
010 20 0     1380         BUN   WEM
010 21 0     1381         CNST  30628295809     MISSING FIELD ON SYMBOLIC CARD
010 22 0     1382         BUN   SCNXX


010 25 0     1383   *R    LBC   K               ENTER CHARACTER
010 26 0     1384         SLA - 8               INTO SYMBOL STORAGE AREA
010 27 0     1385         DLB   K,94,0
010 28 0     1386         DBB   *+4,10          TRUNCATE IDENTIFIER TO 50 CHARACTERS
010 29 0     1387         ADD - SYMBL+10
010 30 0     1388         STA - SYMBL+10,00
010 31 0     1389         IFL   K,05,2
010 32 0     1390         DLB   SCNCT,94,0
010 33 0     1391         CAD - CRD
010 34 0     1392         LDB   SCNCT
010 35 0     1393         SLA - 0
010 36 0     1394         SRA   8               GET NEXT CHARACTER
010 37 0     1395         STA   CHAR
010 38 0     1396         IFL   SCNCT,05,2
010 39 0     1397         DBB   D-,162          DID WE FINISH THE CAR(IF SO-ERROR)
010 40 0     1398         CFA   +40,02          IS THE NEW CHARACTER
010 41 0     1399         BCH   R-              AN ALFANUMERIC
010 42 0     1400         BFA   R-,02,14
010 43 0     1401         CAD   SYMBL
010 44 0     1402         BSA   SCNXX,0         TERMINATE IF OTHER CHARACTER IS FOUND
010 45 0     1403         CAD   CHAR            AND WE ARE NOT SCANING A PREFIX
010 46 0     1404   *E    BFA   SCNXX,02,04     TERMINATE A PREFIX SOON AS WE GET A )
010 47 0     1405         DLB   SCNCT,94,0
010 48 0     1406         CAD - CRD
010 49 0     1407         LDB   SCNCT
010 50 0     1408         SLA - 0
010 51 0     1409         SRA   8
010 52 0     1410         IFL   SCNCT,05,02     CONTINUE LOOKING FOR A )
010 53 0     1411         IBB   E-,9838
010 54 0     1412         BUN   D-              IF WE DO NOT FIND IT  ERROR


010 57 0     1413   *N    SRT   1
010 58 0     1414         CAD   SYMBL
010 59 0     1415         SLT   1
010 60 0     1416         STA   SYMBL           NUMBER BUILDER
010 61 0     1417         DLB   SCNCT,94,0
010 62 0     1418         CAD - CRD
010 63 0     1419         LDB   SCNCT
010 64 0     1420         IFL   SCNCT,04,2
010 65 0     1421         SLA - 0
010 66 0     1422         SRA   8
010 67 0     1423         BFA   N-,91,8
010 68 0     1424         CAD   NTAG            SET LENGTH COUNT TO 10
010 69 0     1425         STA   K               AND MARK AS A NUMERIC LABEL
010 70 0     1426   SCNXX CAD   K
010 71 0     1427         SLA   8
010 72 0     1428         STA   D2D3            SET UP LENGTH
010 73 0     1429   SCANX BUN   *
010 74 0     1430   NTAG  CNST  20000000010


010 77 0     1431   SRCHP BFA   A+,02,00        IF AN EQUIVALENCE CARD ENTRY IS
010 78 0     1432         BUN   SRCH            AT LEVEL ZERO AND HAS LENGTH
010 79 0     1433   *A    LDR   K               LESS THAN 10 -- IT MAY BE
010 80 0     1434         CFR   +10,03          IN THE LIST OF SPECIAL LIBRARY
010 81 0     1435         BCH   SRCH            SUBROUTINES
010 82 0     1436         LDB   I
010 83 0     1437         CAD   SYMBL
010 84 0     1438   *C    CFA - EXLBT,00
010 85 0     1439         BCE   B+
010 86 0     1440         DBB   C-,2
010 87 0     1441   I     CLA   24
010 88 0     1442         BUN   SRCH            IT IS NOT SO DO NORMAL SEARCH
010 89 0     1443   *B    CAD - EXLBT+1         I FOUND IT
010 90 0     1444         STA   L,64            SET UP L TO POINT TO THE OPERAND
010 91 0     1445         LDB   SRCHX
010 92 0     1446         BUN - 1               INCREMENTED EXIT

                                PROCESSING SUBROUTINE FOR INSTRUCTINS
                                IN THE LIBRARY AND EXTERNAL PROGRAMS

010 97 0     1447   *A    F4247 0,0,0
010 98 0     1448   LBSB  NOP   *               NOP-BUN SWITCH (SEE WHY BELOW)
010 99 0     1449         CFA   A-
011 00 0     1450         BCL   Z+              INSTRUCTION IS ABSOLUTE
011 01 0     1451         BFA   Y+,62,90        PARTIAL FIELD SCAN INSTRUCTION
011 02 0     1452         BFA   Y+,62,91        PARTIAL FIELD SEARCH INSTRUCTION
011 03 0     1453         BSA   A+,8            ADDRESS PROGRAM RELATIVE
011 04 0     1454         BSA   A+,9            ADDRESS PROGRAM RELATIVE - B MOD
011 05 0     1455         BSA   B+,7            CONTROL FIELD PROGRAM RELATIVE
011 06 0     1456         BSA   C+,6            ADDRESS IDENTIFIER RELATIVE
011 07 0     1457         BSA   D+,5            ADDRESS IDENTIFIER RELATIVE - B MOD
011 08 0     1458   LBSBX BFA   *,62,99         EXIT IF FINISH PSEUDO-OP IS FOUND
011 09 0     1459         BFA   E+,62,30        RETURN FOR AN EXTERNAL STATEMENT
011 10 0     1460         BFA   F+,62,00        ADVANCE LOCATION COUNTER
011 11 0     1461         BFA   G+,62,12        EQUIVALENCE DEFINITION FOR LIBRARY
011 12 0     1462         BFA   X2+,62,01       NEXT INSTRUCTION IS A 11 DIGIT CONSTANT
011 13 0     1463         BFA   X1+,62,02       MARKS NEXT INSTRUCTION AS I-O COMMAND
011 14 0     1464         BFA   X3+,62,03
011 15 0     1465         BFA   X4+,62,04     RELOCATE CONTROL FIELD OF NEXT INSTR
011 16 0     1466         STP   WEMX
011 17 0     1467         BUN   WEM
011 18 0     1468         CNST  31926000000     IMPROPER PSEUDO-OP
011 19 0     1469         BUN   X+


011 22 0     1470   BIGCN DFL   LBSB,62,29
011 23 0     1471         BUN   Z+


011 26 0     1472   I1    CNST  41000600000     CARD READER CONSTANT
011 27 0     1473   O1    CNST  41000610000     CARD PUNCH CONSTANT
011 28 0     1474   O2    CNST  42000610000     PRINTER CONSTANT
011 29 0     1475   CHNG  BFA   I+,62,60
011 30 0     1476         BFA   I+,62,62
011 31 0     1477         BFA   I+,62,64
011 32 0     1478         LDR   O1
011 33 0     1479         BFA   *+4,11,1
011 34 0     1480         LDR   O2
011 35 0     1481         BFA   *+2,11,2
011 36 0     1482         BUN   IOERR
011 37 0     1483   *S    BFA   *+4,62,61
011 38 0     1484         BFA   S+,62,63
011 39 0     1485         BFA   S+,62,65
011 40 0     1486         BUN   IOERR
011 41 0     1487   *S    STR   INSTR,11
011 42 0     1488         CAD   INSTR
011 43 0     1489         DFL   LBSB,62,29
011 44 0     1490         BUN   LBSB
011 45 0     1491   *I    LDR   I1
011 46 0     1492         BFA   S-,11,1
011 47 0     1493   IOERR STP   WEMX
011 48 0     1494         BUN   WEM
011 49 0     1495         CNST  31960380000     IMPROPER CARDATRON INSTRUCTION
011 50 0     1496         LDR   INSTR
011 51 0     1497         BUN   S-


011 54 0     1498   *A    DFL   INSTR,12,80     ADJUST SIGN
011 55 0     1499   *L    CAA   MSK
011 56 0     1500         ADA   INSTR           RELOCATE ADDRESS FIELD
011 57 0     1501         BOF   *+1
011 58 0     1502         STA   INSTR,04
011 59 0     1503         BUN   Z+

011 61 0     1504   *B    DFL   INSTR,12,70     ADJUST SIGN
011 62 0     1505         SUA   MSK             RELOCATE CONTROL FIELD
011 63 0     1506         STA   INSTR,44
011 64 0     1507         BOF   *+1
011 65 0     1508         BUN   Z+

011 67 0     1509   *H    HLT   0
011 68 0     1510   *C    DFL   INSTR,12,20     ADJUST SIGN
011 69 0     1511   *D    DFL   INSTR,12,40
011 70 0     1512   *K    STA   H-,82
011 71 0     1513         DLB   H-,84,0         GET EQUIVALENCE TABLE ENTRY
011 72 0     1514         CAD - EQTAB
011 73 0     1515         BZA   L+              IMPROPER ENTRY
011 74 0     1516         BSA   J+,8         SIGN OF 9 MEANS FORWARD REFERENCE TO
011 75 0     1517         ADA   INSTR           AN EXTERNAL PROCEDURE
011 76 0     1518   *N    SUB   H-              RELOCATE ADDRESS
011 77 0     1519         STA   INSTR,04        FIELD RELATIVE TO
011 78 0     1520         DLB - EQTAB,44,0      THE EQUIVALENCE TABLE ENTRY
011 79 0     1521         STP   EXPLX
011 80 0     1522         BUN   EXPL
011 81 0     1523         BUN   Z+

011 83 0     1524   *J    DLB - EQTAB,44,0      INSERT 9 KK XXXX 0000  KK=INCREMENT
011 84 0     1525         STP   EXPLX                       XXXX= LOCATION FIXED UP
011 85 0     1526         BUN   EXPL
011 86 0     1527         CAD - 0
011 87 0     1528         BFA   *+2,11,8
011 88 0     1529         LDB - 0
011 89 0     1530         STB   H-
011 90 0     1531         CAA   INSTR
011 91 0     1532         EXT   +11
011 92 0     1533         ADA   ADDIT
011 93 0     1534         CLL   ADDIT
011 94 0     1535         SLA   4
011 95 0     1536         STP   INSX
011 96 0     1537         BUN   INS
011 97 0     1538         CAA   LOCN
011 98 0     1539         LSA   8
011 99 0     1540         LDB   H-
012 00 0     1541         CLL   H-
012 01 0     1542         STP   INSX
012 02 0     1543         BUN   INS
012 03 0     1544         CAD   INSTR
012 04 0     1545         CLL   INSTR
012 05 0     1546         STA   INSTR,67
012 06 0     1547         BUN   Z+

012 08 0     1548   *Y    DFL   INSTR,62,40
012 09 0     1549         BSA   Z+,4            SPECIAL CONVENTIONS FOR PARTIAL FIELD
012 10 0     1550         BSA   Z+,5            SCAN AND SCEARCH(90,91 SPECIAL OPS)
012 11 0     1551         DFL   INSTR,12,20     S=4,5    ADDRESS ABSOLUTE
012 12 0     1552         BSA   K-,6            S=6,7    ADDRESS RELATIVE TO IDENTIFIER
012 13 0     1553         BSA   K-,7            S=8,9    ADDRESS RELATIVE TO PROGRAM
012 14 0     1554         DFL   INSTR,12,20
012 15 0     1555         BUN   L-

012 17 0     1556   *F2   BUN   BIGCN
012 18 0     1557   *X2   LDR   F2-             SET UP FOR AN 11 DIGIT
012 19 0     1558         STR   LBSB            WHICH FOLLOWS
012 20 0     1559         BUN   X+

012 22 0     1560   *F1   BUN   CHNG
012 23 0     1561   *X1   LDR   F1-             SET UP FOR THE CARDATRON
012 24 0     1562         STR   LBSB            INSTRUCTION WHICH FOLLOWS
012 25 0     1563         BUN   X+

012 27 0     1564   *X3   LDR   INSTR
012 28 0     1565         STR   ADDIT,04
012 29 0     1566         BUN   X+
012 30 0     1567   *X4   LDR   MSK
012 31 0     1568         STR   MADIT,44
012 32 0     1569         BUN   X+

012 34 0     1570   *Z    CAA   INSTR
012 35 0     1571         ADA   ADDIT
012 36 0     1572         CLL   ADDIT
012 37 0     1573         STA   INSTR,04
012 38 0     1574         CAA   INSTR
012 39 0     1575         ADA   MADIT
012 40 0     1576         STA   INSTR,44
012 41 0     1577         CLL   MADIT
012 42 0     1578         STP   WRITX         OUTPUT PROCESSED INSTRUCTION
012 43 0     1579         BUN   WRIT2
012 44 0     1580   *X    LDB   LBSBX           INCREMENTED EXIT
012 45 0     1581         BUN - 1               INDICATES NO FINISH PSEUDO-OP WAS HERE

012 47 0     1582   *E    DLB   EQTAB-1,44,0    RETURN PSEUDO-OP FOR EXTERNAL STATEMENT
012 48 0     1583         DBB   *+1,9999
012 49 0     1584         STB   INSTR,04
012 50 0     1585         BUN   Z-

012 52 0     1586   *F    CAA   INSTR
012 53 0     1587         SLA   4
012 54 0     1588         ADA   LOCN
012 55 0     1589         STA   LOCN,64
012 56 0     1590         BUN   X-              LOCN=LOCN+NNNN

012 58 0     1591   *G    DLB   INSTR,44,0      EQUIVALENCE DEFINITION FOR LIBRARY
012 59 0     1592         LDR - 0               GET OPERAND FOR EQUIVALENCE DEFINITION
012 60 0     1593         LDB   INSTR
012 61 0     1594         STA - EQTAB,66
012 62 0     1595         SRT   4               ENTER THE OPERAND INTO EQUIVALENCE
012 63 0     1596         STR - EQTAB,04        TABLE ALONG WITH ITS ASSIGNMENT
012 64 0     1597         BUN   X-
012 65 0     1598   *L    STP   WEMX
012 66 0     1599         BUN   WEM
012 67 0     1600   CNST9 CNST  33221000000     IMPROPER EQUIVALENCE  LIBRARY INCORRECT
012 68 0     1601         BUN   N-


012 71 0     1602   EXPL  STB   HOLD
012 72 0     1603         CAD   HOLD
012 73 0     1604         SLA   4
012 74 0     1605         LDB   +23
012 75 0     1606   *A    CFA - EXLBT,64        OF THE THING REFERENCED
012 76 0     1607         BCE   A+              BY USE OF AN EQUIVALENCE
012 77 0     1608         DBB   A-,2
012 78 0     1609         LDB   HOLD
012 79 0     1610         LDR - 1
012 80 0     1611         BFR   *+2,11,0
012 81 0     1612         STR   EXPLN
012 82 0     1613   EXPLX BUN   *
012 83 0     1614   *A    LDR - EXLBT-1
012 84 0     1615         STR   EXPLN
012 85 0     1616         LDB   HOLD
012 86 0     1617         BUN   EXPLX


                                DICTIONARY OF WORDS FOR ERROR MESSAGES IN THE OVERLAY

012 91 0     1618   DICT  CNST  $EXTRA$         01 EXTRA
012 92 0     1619         CNST  $LEFT$          02 LEFT
012 93 0     1620         CNST  35741594555     03 PARENTHESIS
012 94 0     1621         CNST  36348456249
012 95 0     1622         CNST  $S$
012 96 0     1623         CNST  35449626249     06 MISSING
012 97 0     1624         CNST  $NG$
012 98 0     1625         CNST  $NAME$          08 NAME
012 99 0     1626         CNST  $CARD$          09 CARD
013 00 0     1627         CNST  34567634559     10 EXTERNAL
013 01 0     1628         CNST  $NAL$
013 02 0     1629         CNST  35759564345     12 PROCEDURE
013 03 0     1630         CNST  $DURE$
013 04 0     1631         CNST  $NOT$           14 NOT
013 05 0     1632         CNST  34445435341     15 DECLARED
013 06 0     1633         CNST  $RED$
013 07 0     1634         CNST  35759454649     17 PREFIX
013 08 0     1635         CNST  $X$
013 09 0     1636         CNST  34954575956     19 IMPROPER
013 10 0     1637         CNST  $PER$
013 11 0     1638         CNST  34558644965     21 EQUIVALENCE
013 12 0     1639         CNST  34153455543
013 13 0     1640         CNST  $E$
013 14 0     1641         CNST  34649554962     24 FINISH
013 15 0     1642         CNST  $H$
013 16 0     1643         CNST  35762456444     26 PSEUDO-OP
013 17 0     1644         CNST  $O-OP$
013 18 0     1645         CNST  $FIELD$         28 FIELD
013 19 0     1646         CNST  $ON$            29 ON
013 20 0     1647         CNST  34845414445     30 HEADER
013 21 0     1648         CNST  $R$
013 22 0     1649         CNST  36455444546     32 UNDEFINED
013 23 0     1650         CNST  $INED$
013 24 0     1651         CNST  $LABEL$         34 LABEL
013 25 0     1652         CNST  $-$             35 -
013 26 0     1653         CNST  $NAME$          35 (STORAGE FOR PROGRAMMED MESSAGES)
013 27 0     1654         CNST  $NAME$          37 (STORAGE FOR PROGRAMMED MESSAGES)
013 28 0     1655         CNST  34955626359     38 INSTRUCTION
013 29 0     1656         CNST  36443634956
013 30 0     1657         CNST  $N$
013 31 0     1658         CNST  $,$             41 ,
013 32 0     1659         CNST  $TOTAL$         42 TOTAL
013 33 0     1660         CNST  $CHECK$         43 CHECK
013 34 0     1661         CNST  $SUM$           44 SUM
013 35 0     1662         CNST  34356545749     45 COMPILED
013 36 0     1663         CNST  $LED$
013 37 0     1664         CNST  35759564759     47 PROGRAM
013 38 0     1665         CNST  $AM$
013 39 0     1666         CNST  $ENDS$          49 ENDS
013 40 0     1667         CNST  $AT$            50 AT
013 41 0     1668         CNST  36541594941     51 VARIABLES
013 42 0     1669         CNST  $BLES$
013 43 0     1670         CNST  $BEGIN$         53 BEGIN
013 44 0     1671         CNST  35349425941     54 LIBRARY
013 45 0     1672         CNST  $RY$
013 46 0     1673         CNST  34955435659     56 INCORRECT
013 47 0     1674         CNST  $RECT$
013 48 0     1675         CNST  36268544256     58 SYMBOLIC
013 49 0     1676         CNST  $LIC$
013 50 0     1677         CNST  34341594441     60 CARDATRON
013 51 0     1678         CNST  $TRON$
013 52 0     1679         CNST  34356545749     62 COMPILER
013 53 0     1680         CNST  $LER$
013 54 0     1681         CNST  34341574143     64 CAPACITY
013 55 0     1682         CNST  $ITY$
013 56 0     1683         CNST  34567434545     66 EXCEEDED
013 57 0     1684         CNST  $DED$
013 58 0     1685         CNST  35445545659     68 MEMORY
013 59 0     1686         CNST  $Y$
013 60 0     1687         CNST  $FOR$           70 FOR
013 61 0     1688         CNST  35642514543     71 OBJECT
013 62 0     1689         CNST  $T$


013 65 0     1690   LIBRF CAD - 0             PUT LIBRARY SUBROUTINE INTO TARGET
013 66 0     1691   LIBRX BFA   LIBRX,11,4    PROGRAM IF IT HASNT BEEN PUT THERE
013 67 0     1692         SRA   4             ALREADY.
013 68 0     1693         EXT   +1111
013 69 0     1694         SUB   VARB
013 70 0     1695         STA   VARB,04
013 71 0     1696         SLT   4
013 72 0     1697         STA - 0,64
013 73 0     1698         IFL - 0,64,1
013 74 0     1699         IFL - 0,11,1
013 75 0     1700         BUN   LIBRF


013 78 0     1701   FXUP  LDR   LOCN     COMPILE TO SET A PREV FRW REF TO PRES LOC
013 79 0     1702         STA   DESCR
013 80 0     1703         SRT   4
013 81 0     1704         STR   DESCR,04
013 82 0     1705         STA   WRTF,04
013 83 0     1706         BSA   *+2,7
013 84 0     1707         BUN   *+2
013 85 0     1708         IFL   DESCR,00,1    IF SIGN IS SEVEN, WE MEAN THE
013 86 0     1709   FXUPY BCS   *+2,2
013 87 0     1710         BUN   *+4
013 88 0     1711         BSA   *+3,8
013 89 0     1712         STP 4 9898,0208
013 90 0     1713         BUN 4 9898,WRTF
013 91 0     1714         LDR   DESCR         PRESENT LOCATION PLUS 1
013 92 0     1715         LDB   LRTF
013 93 0     1716         CAD   WRTF
013 94 0     1717         CFA   PREV,04
013 95 0     1718         BCH   A+            IF WE CAN FIX UP THE INSTRUCTION WHILE
013 96 0     1719         CAD - BUF+1         IT SITS IN THE OUTPUT BUFFER, WE WILL
013 97 0     1720         BFA   A+,04,0       DO IT DIRECTLY
013 98 0     1721         CFA   WRTF,04
013 99 0     1722         BCH   A+
014 00 0     1723         SUB   WRTF
014 01 0     1724         SLA   6
014 02 0     1725         STA   *+1,44
014 03 0     1726         DBB   *+1,0
014 04 0     1727         STR - BUF+2,04
014 05 0     1728         BUN   FXUPX
014 06 0     1729   *A    DFL   CNTRF,00,1    OTHERWISE WE PUT OUT A FIX UP
014 07 0     1730         LDB   CNTRF         CODE FOR THE LOADING ROUTINE
014 08 0     1731         STR - BUF+3
014 09 0     1732         BUN   WRIT6
014 10 0     1733   FXUPX BUN   FXUPX



014 14 0     1734   WRIT2 CAD   LOCN          WRITE SUBROUTINE - PUTS INSTRUCTION
014 15 0     1735         SRA   4              INTO OUTPUT BUFFER.
014 16 0     1736         IFL   LOCN,64,1     WRIT2 ENTRY - PUT INSTRUCTION OUT FOR
014 17 0     1737         BOF   *+1
014 18 0     1738         LDR   INSTR          LOCATION LOCN AND INCREMENT LOCN
014 19 0     1739   WRIT3 STA   WRTF,04       WRIT3 ENTRY - LOCATION IS IN RA(04)
014 20 0     1740         SUB   PREV          AND INSTRUCTION IS IN REGISTER R
014 21 0     1741         LDB   CNTRI
014 22 0     1742         BFA   E+,04,0
014 23 0     1743         SUB   XONE+1        DOES THIS LOCATION EQUAL THE PREVIOUS ONE
014 24 0     1744         BFA   F+,04,0       (IF SO WE WILL ERASE THE PREVIOUS ONE)
014 25 0     1745         STB   LRTF,04       OR IS IT ONE HIGHER
014 26 0     1746         CAD   WRTF          IF NOT,WE WILL PUT OUT A NEW RECORD TRANS
014 27 0     1747         STA - BUF+1
014 28 0     1748         IFL   CNTRI,00,1
014 29 0     1749   *F    LDB   LRTF
014 30 0     1750         IFL - BUF+1,32,1    THE 32-FIELD CONTAINS THE NUMBER OF
014 31 0     1751   WRIT7 IFL   CNTRI,00,1    SEQUENTIAL WORDS TO LOAD
014 32 0     1752         LDB   CNTRI
014 33 0     1753   *E    STR - BUF
014 34 0     1754         STR   DESCR
014 35 0     1755   WRT10 BCS   *+2,2
014 36 0     1756         BUN   *+3
014 37 0     1757         STP 4 9898,0300
014 38 0     1758         BUN 4 9898,WRTF
014 39 0     1759         CLL   EXPLN
014 40 0     1760         LDR   WRTF
014 41 0     1761         STR   PREV,04
014 42 0     1762   WRIT6 LDR   CNTRI         IS THE BUFFER FULL NOW
014 43 0     1763         CFR   CNTRF
014 44 0     1764         BCL   WRITX         IF NOT,EXIT
014 45 0     1765   WRIT5 LBC   NN            IF SO, CALCULATE CHECK SUM
014 46 0     1766   *C    CLA   BUF+2
014 47 0     1767         SUB - BUF+99
014 48 0     1768         IBB   *-1,1
014 49 0     1769         BOF   *+1
014 50 0     1770         STA   BUF+99
014 51 0     1771         MIB 4 *+2,OT
014 52 0     1772         BUN   *-1
014 53 0     1773         MLS 4 OT
014 54 0     1774         MIB 4 *+2,OT
014 55 0     1775         BUN   *-1
014 56 0     1776         MOW 4 BUF,OT,1      WRITE ONE BLOCK
014 57 0     1777         IFL   BUF,00,1
014 58 0     1778         CLL   CNTRI
014 59 0     1779         CLL   CNTRF         INITIALIZE FOR NEXT BLOCK
014 60 0     1780         IFL   CNTRF,00,96
014 61 0     1781   WRIT4 CLL   BUF+1
014 62 0     1782         LDB   C-
014 63 0     1783         RTF   BUF+1,98
014 64 0     1784         BUN   FXUPX
014 65 0     1785   WRITX DEFN  FXUPX


014 68 0     1785   SRCH  ADD   LL0
014 69 0     1786         EXT   +11             LOOK FOR SYMBOL IN TABLE
014 70 0     1787         ADD   +SCRTB
014 71 0     1788         STA   L
014 72 0     1789         LDB   L
014 73 0     1790         DBB   C+,1
014 74 0     1791   *B    LDB   L
014 75 0     1792         IBB   SRCHX,9999
014 76 0     1793   *C    CAD - 1
014 77 0     1794         CFA   D2D3,23         FIRST COMPARE LENGTHS
014 78 0     1795         STA   L               (AND WHETHER OR NOT A NUMERIC LABEL)
014 79 0     1796         SRA   4
014 80 0     1797         BCU   B-
014 81 0     1798         STA   TEMP
014 82 0     1799         IFL   TEMP,63,9
014 83 0     1800         STA   A+,04
014 84 0     1801         IFL   A+,04,1
014 85 0     1802         DLB   TEMP,54,1
014 86 0     1803         BRP   A+
014 87 0     1804         LDB   +9
014 88 0     1805   *A    CAD - *               IF LENGTHS AGREE, COMPARE THE SYMBOLS
014 89 0     1806         CFA - SYMBL,00
014 90 0     1807         BCU   B-
014 91 0     1808         DBB   A-,1
014 92 0     1809         IFL   SRCHX,04,1      INCREMENTED EXIT
014 93 0     1810         DLB   L,64,0          IF SYMBOL IS FOUND
014 94 0     1811   SRCHX BUN   *


014 97 0     1812   WEM   LDR   +0525005250     WRITE ERROR MESSAGE
014 98 0     1813         STR   HALT
014 99 0     1814         CLL   MSG
015 00 0     1815         IFL   MSG,12,20
015 01 0     1816         LDB   C+
015 02 0     1817         RTF   MSG,8           CLEAR MESSAGE BUFFER
015 03 0     1818         CLL   TEMP
015 04 0     1819   *G    LDB   WEMX
015 05 0     1820         CAD - 0
015 06 0     1821   *E    CLR   0000
015 07 0     1822         SRT   8
015 08 0     1823         BFA   A+,00,00
015 09 0     1824         STA   E-,04
015 10 0     1825         STR   TEMP3
015 11 0     1826   *H    IFL   E-,04,1
015 12 0     1827         LDB   E-
015 13 0     1828         LDR - DICT-2          GET DICTIONARY ENTRY
015 14 0     1829   *C    CLA   MSG+1
015 15 0     1830         LBC   TEMP
015 16 0     1831         SLT   2               TRANSFER CHARACTERS
015 17 0     1832         BFA   B+,00,00        ONE AT A TIME INTO
015 18 0     1833         SLA - 8               BUFFER AREA
015 19 0     1834         DLB   TEMP,94,00
015 20 0     1835         LSA   0
015 21 0     1836         ADD - MSG
015 22 0     1837         STA - MSG,00
015 23 0     1838         IFL   TEMP,05,02
015 24 0     1839         BUN   C-
015 25 0     1840   *B    BSA   H-,3            PUT SPACE BETWEEN WORDS
015 26 0     1841         IFL   TEMP,05,02
015 27 0     1842         CAD   TEMP3
015 28 0     1843         BUN   E-
015 29 0     1844   *A    IFL   WEMX,04,01
015 30 0     1845         STP 4 9898,0906
015 31 0     1846         BUN 4 9898,MSG
015 32 0     1847   WEMX  BUN   0000            RETURN AND ATTEMPT TO CONTINUE
015 33 0     1848   MSG   LOCN  *+9



015 37 0     1857   LBRT  LOCN  *+300           LIBRARY TABLE
015 38 0     2157   L     CNST  0               LAST OPERAND
015 39 0     2158   K     CNST  0               RUNNING COUNT OF LENGTH FOR SYMBOL
015 40 0     2159   D2D3  HLT   0               STORAGE FOR LENGTH OF SYMBOL
015 41 0     2160   INSTR HLT   0               CURRENT INSTRUCTION
015 42 0     2161   LL0   HLT   0               STACK TO SEARCH AT LEVEL 0
015 43 0     2162   SCNCT HLT   0               COLUMN COUNT
015 44 0     2163   CHAR  HLT   0               CURRENT CHARACTER BEING SCANED
015 45 0     2164   ZERSS HLT 2 0
015 46 0     2165         HLT 2 0
015 47 0     2166         HLT 2 0
015 48 0     2167         HLT 2 0
015 49 0     2168         HLT 2 0
015 50 0     2169         HLT 2 0
015 51 0     2170         HLT 2 0
015 52 0     2171         HLT 2 0
015 53 0     2172         HLT 2 0
015 54 0     2173   TEMP3 HLT   0               SHORT TERM STORAGE LOCATION
015 55 0     2174   TEMP  HLT   0               DITTO
015 56 0     2175   EXLBT CNST  $FIX$           TABLE FOR SPECIAL LIBRARY ROUTINES
015 57 0     2176         F244  0,SCRTB+106,0
015 58 0     2177         CNST  $FLOAT$
015 59 0     2178         F244  0,SCRTB+108,0
015 60 0     2179         CNST  $FX*FX$
015 61 0     2180         F244  0,SCRTB+102,0
015 62 0     2181         CNST  $FX*FL$
015 63 0     2182         F244  0,SCRTB+103,0
015 64 0     2183         CNST  $FL*FX$
015 65 0     2184         F244  0,SCRTB+104,0
015 66 0     2185         CNST  $FL*FL$
015 67 0     2186         F244  0,SCRTB+105,0
015 68 0     2187         CNST  $LABLE$
015 69 0     2188         F244  0,SCRTB-9,0
015 70 0     2189         CNST  $MONIT$
015 71 0     2190         F244  0,SCRTB+110,0
015 72 0     2191         CNST  $ERROR$
015 73 0     2192         F244  0,SCRTB+113,0
015 74 0     2193         CNST  $TRACE$
015 75 0     2194         F244  0,SCRTB+114,0
015 76 0     2195         CNST  $RITE$
015 77 0     2196         F244  0,SCRTB+116,0
015 78 0     2197         CNST  $REED$
015 79 0     2198         F244  0,SCRTB+117,0
015 80 0     2199   FUNS  F424  FUNS,0,0        ALL PURPOSE STACK
015 81 0     2200         CNST  20000000000
015 82 0     2201   CRD   LOCN  *+16            INPUT AREA
015 83 0     2217         HLT 2 0
015 84 0     2218   EQTAB LOCN  *+100           EQUIVALENCE TABLE
015 85 0     2318   BUFR  LOCN  *+100           INPUT BUFFER FOR LIBRARY PROCEDURES
015 86 0     2418   IFERR CNST  $-----ERROR(S) WERE FOUND-----$
015 87 0     2424         HLT 2 0
015 88 0     2425         HLT 2 0
015 89 0     2426         HLT 2 0
015 90 0     2427   SYMBL CNST  0,0,0,0,0,0,0,0,0,0       SYMBOL STORAGE AREA
015 91 0     2437   LEVEL HLT   0               LEVEL FOR SEARCHING


015 94 0     2438   INS   STB   A+,04
015 95 0     2439   AVALE LDR   AVAIL           INSERT RA(67) INTO ASSOCIATIVE MEMORY
015 96 0     2440         BFR   B+,04,00
015 97 0     2441   *C    LDR - 0
015 98 0     2442         LDB   AVAIL           NORMALLY THIS MEANS ON TOP OF THE
015 99 0     2443         STA - 0,67            STACK NAMED BY THE B REGISTER
016 00 0     2444         CAD - 0
016 01 0     2445         STR - 0,04
016 02 0     2446   *A    STB   *,04
016 03 0     2447         STA   AVAIL,04
016 04 0     2448   INSX  BUN   *
016 05 0     2449   *B    LDR   MAMAX           IF AVAIL STACK IS EMPTY, TRY TO
016 06 0     2450         CFR   SSC,04          INCREASE THE SIZE OF
016 07 0     2451         STR   AVAIL,04        ASSOCIATIVE MEMORY
016 08 0     2452         STR   D+,04
016 09 0     2453         DFL   MAMAX,00,1
016 10 0     2454   *D    CLL   *
016 11 0     2455         BCH   C-
016 12 0     2456   FULL  STP   WEMX            IF NO ROOM IS LEFT, GIVE UP
016 13 0     2457         BUN   WEM
016 14 0     2458         CNST  36264660000     COMPILER CAPACITY EXCEEDED
016 15 0     2459         F424  6200,00,7777


016 18 0     2460   REM   STB   A+,04           REMOVE INFORMATION FROM
016 19 0     2461         LDB - 0               ASSOCIATIVE MEMORY LOCATION IN
016 20 0     2462         CAD - 0               THE STACK NAMED IN RB
016 21 0     2463   REMX  IBB   *,9999          IF THE STACK IS EMPTY, EXIT
016 22 0     2464         IBB   *+1,1
016 23 0     2465         LDR   AVAIL           OTHERWISE MARK LOCATION AVAILABLE
016 24 0     2466         STB   AVAIL,04        FOR FUTURE USE
016 25 0     2467         STR - 0,04
016 26 0     2468   *A    STA   *,04            INCREMENTED EXIT WITH THE REMOVED
016 27 0     2469         LDB   REMX            QUANTITY IN RA
016 28 0     2470         BUN - 1

                                THE SYMBOLIC MEMORY DUMP GENERATOR

016 32 0     2471   KOUNT HLT   0               STACK COUNTER
016 33 0     2472   COUT  HLT   0               PRESENT LEVEL COUNTER
016 34 0     2473   *T    NOP   SCRTB           LINK TO NEXT ITEM
016 35 0     2474   MONST LDB   +TBL+1
016 36 0     2475         RTF   TBL,100         SET UP HEADS FOR 301 STACKS
016 37 0     2476         RTF   TBL+100,100
016 38 0     2477         RTF   TBL+200,100
016 39 0     2478         CAD   SCRTB+113
016 40 0     2479         SRA   4
016 41 0     2480         BFA   J+,51,3
016 42 0     2481         STA   ASSGZ,04        FIX DUMP SO IT CAN FIND
016 43 0     2482         IFL   ASSGZ,04,44
016 44 0     2483         DFL   ASSGZ,12,80
016 45 0     2484         CAD   SCRTB+117
016 46 0     2485         SRA   4
016 47 0     2486         STA   Z1+,04
016 48 0     2487         STA   Z2+,04
016 49 0     2488         STA   Z3+,04
016 50 0     2489         STA   Z4+,04
016 51 0     2490         STA   Z5+,04
016 52 0     2491         STA   Z6+,04
016 53 0     2492         STA   Z7+,04
016 54 0     2493         STA   Z8+,04
016 55 0     2494         STA   Z9+,04
016 56 0     2495         STA   Z10+,04
016 57 0     2496         STA   Z11+,04
016 58 0     2497         STA   Z12+,04
016 59 0     2498         STA   Z13+,04
016 60 0     2499         STA   Z14+,04
016 61 0     2500         STA   Z15+,04
016 62 0     2501         STA   Z16+,04
016 63 0     2502         STA   Z17+,04
016 64 0     2503         STA   Z18+,04
016 65 0     2504         STA   Z19+,04
016 66 0     2505         STA   Z20+,04
016 67 0     2506         STA   Z21+,04
016 68 0     2507         STA   Z22+,04
016 69 0     2508         STA   Z23+,04
016 70 0     2509         STA   Z24+,04
016 71 0     2510         STA   Z25+,04
016 72 0     2511         STA   Z26+,04
016 73 0     2512   *J    NOP   SCRTB           LAST ENTRY FROM SCRAMBLE TABLE
016 74 0     2513         LDR   KOUNT
016 75 0     2514         STR   COUT
016 76 0     2515         CFR   +100,00
016 77 0     2516         BCE   END1            IF EQUAL ALL STACKS IN SCRAMBLE TABLE
016 78 0     2517         LDB   J-              HAVE BEEN PROCESSED
016 79 0     2518         CAD - 0               GET NEXT ENTRY FROM SCRTB
016 80 0     2519         LDB - 0
016 81 0     2520         STB   J-,04           SAVE LINK TO NEXT ENTRY
016 82 0     2521         DBB   A+,2000         IF LINK IS LESS THAN 2000 END STACK NOW
016 83 0     2522         IFL   KOUNT,00,1      INCREASE STACK COUNT
016 84 0     2523         IFL   T-,04,1
016 85 0     2524         LDR   T-
016 86 0     2525         STR   J-,04           SET UP FOR NEXT STACK
016 87 0     2526         IBB   J-,2000         IF LINK WAS NON-ZERO START NEW STACK
016 88 0     2527         BZA   J-              SKIP TO NEXT STACK IF ZERO
016 89 0     2528   *A    SRA   4               GET SREF IN 04 FIELD
016 90 0     2529         CFA   +2000,04
016 91 0     2530         BCL   J-              IF SREF IS LESS THAN 2000 GET NEXT ONE
016 92 0     2531         STA   SREF,04
016 93 0     2532         SRT   4
016 94 0     2533         LSA   0
016 95 0     2534         ADD   +8
016 96 0     2535         SRA   1
016 97 0     2536         STA   SL              SAVE SYMBOL LENGTH
016 98 0     2537         SLT   19
016 99 0     2538         BPA   *+2
017 00 0     2539         FDV   *               SET OVERFLOW IF A NUMERIC LABEL
017 01 0     2540         LDB   SREF
017 02 0     2541         LDR - 1               GET ACTUAL SYMBOL
017 03 0     2542         CLA
017 04 0     2543         DIV   +99             SCRAMBLE IT
017 05 0     2544         SLT   10
017 06 0     2545         SUB   COUT            COMPUTE LEVEL
017 07 0     2546         STA   LEVEL,00
017 08 0     2547         CAD - 0
017 09 0     2548         BSA   J-,1            SKIP
017 10 0     2549         BSA   J-,3            CALL
017 11 0     2550         BSA   J-,5            BY NAME
017 12 0     2551         BSA   J-,7            THINGS
017 13 0     2552         BSA   J-,9            AND INPUT,OUTPUT,FORMAT   LABELS
017 14 0     2553         BSA   J-,8            AND EXTERNAL PROGRAMS
017 15 0     2554         BFA   B+,11,1         SIMPLE VARIABLES(FIRST 100 STACKS)
017 16 0     2555         IFL   LEVEL,81,1
017 17 0     2556         BFA   B+,11,5         ARRAYS(NEXT 100)
017 18 0     2557         IFL   LEVEL,81,1
017 19 0     2558         BFA   A+,11,9         LABELS(NEXT 100)
017 20 0     2559         IFL   LEVEL,81,1
017 21 0     2560         BFA   B+,11,8         PROCEDURES(ONLY ONE STACK)
017 22 0     2561         BUN   J-              GET NEXT ITEM IF IT IS NONE OF ABOVE


017 25 0     2562   *A    CFA   +2000000,64
017 26 0     2563         BCL   J-              SKIP SEGMENT NAMES
017 27 0     2564   *B    STB   VL,33           VECTOR LENGTH
017 28 0     2565         IFL   VL,32,04        FOUR IS NORMAL(ARRAYS REQUIRE 6)
017 29 0     2566         STA   VECTR+3         SAVE OPERAND
017 30 0     2567         CAA - 1
017 31 0     2568         LDR - 2               GET SYMBOL
017 32 0     2569         LDB   SL
017 33 0     2570         DBB   *+2,2
017 34 0     2571         CLR                   SYMBOL LENGTH LEQ 5 CHARACTERS
017 35 0     2572         BOF   NUMLB           NUMERIC LABEL
017 36 0     2573         STA   VECTR+1
017 37 0     2574         STR   VECTR+2         SAVE FIRST 10 CHARACTERS OF SYMBOL


017 40 0     2575   RETRN LDR   VECTR+3
017 41 0     2576         CLA
017 42 0     2577         BFR   P+,11,1
017 43 0     2578         BFR   P+,11,9
017 44 0     2579         BFR   *+3,11,5
017 45 0     2580         STA   VECTR+3,89      PROCEDURE  02 FIELD IS LEVEL
017 46 0     2581         BUN   P+
017 47 0     2582         LDB   VECTR+3
017 48 0     2583         IFL   VL,32,2         NEED TWO MORE FOR ARRAYS
017 49 0     2584         LDR - 0
017 50 0     2585         STR   HOLD            SAVE LINK
017 51 0     2586         SRT   4
017 52 0     2587         CAD   VECTR+3
017 53 0     2588         CLL   VECTR+3
017 54 0     2589         CLL   VECTR+4
017 55 0     2590         CLL   VECTR+5
017 56 0     2591         STR   VECTR+3,04      LENGTH
017 57 0     2592         STA   VECTR+5,67      SAVE OPERAND OF ARRAY
017 58 0     2593         CLL   DIM
017 59 0     2594         LDB   HOLD
017 60 0     2595         IBB   C+,9999         LINK ZERO INDICATES WE HAVE LINEAR
017 61 0     2596         BUN   D+                           ARRAY
017 62 0     2597   *A    LDB   HOLD            END OF DIMENSION LIST OF CONSTANTS
017 63 0     2598         IBB   A+,9999         IF LINK IS ZERO
017 64 0     2599   *D    LDR - 1
017 65 0     2600         DLB - 1,64,0
017 66 0     2601         STR   HOLD            SAVE OPERAND OF CONSTANT
017 67 0     2602         CAD - 1
017 68 0     2603         LDB   DIM
017 69 0     2604         STA - DIMS            PUT CONSTANT INTO DIMENSION LIST
017 70 0     2605         IFL   DIM,00,1        INCREASE DIMENSION COUNT
017 71 0     2606         BUN   A-
017 72 0     2607   *A    LDR   DIMS
017 73 0     2608         STR   VECTR+4         SAVE LENGTH OF A ROW
017 74 0     2609   *B    LDB   DIM
017 75 0     2610         CAD - DIMS-1
017 76 0     2611         ADD   +1
017 77 0     2612         MUL - DIMS-2          CALCULATE ADDRESS OF FIRST
017 78 0     2613         STR - DIMS-2          ELEMENT OF THE ARRAY
017 79 0     2614         DFL   DIM,00,1
017 80 0     2615         DBB   B-,3
017 81 0     2616         CAA   DIMS
017 82 0     2617         ADD   +1
017 83 0     2618         SLA   4
017 84 0     2619         ADA   VECTR+5
017 85 0     2620   *F    STA   VECTR+5,64      STORE ACTUAL ADDRESS
017 86 0     2621         BUN   P+
017 87 0     2622   *C    LDR   VECTR+3         LINEAR ARRAY
017 88 0     2623         STR   VECTR+4         LENGTH OF ROW IS LENGTH OF ARRAY
017 89 0     2624         CAD   VECTR+5
017 90 0     2625         ADD   +10000          ACTUAL ADDRESS IS ONLY 1 GREATER
017 91 0     2626         BUN   F-


017 94 0     2627   *P    CAD   +TBL
017 95 0     2628         ADD   LEVEL
017 96 0     2629         STA   LEVEL           SET UP SEARCH OF PROPER STACK
017 97 0     2630         STA   THROW           (NOTICE EVERY STACK IS INITIALIZED
017 98 0     2631   TLU   LDB   LEVEL           WITH THE SYMBOL 9999999999)
017 99 0     2632         CAD - 0
018 00 0     2633         STA   HOLD            SAVE LINK TO NEXT ITEM
018 01 0     2634         DLB   HOLD,64,0
018 02 0     2635         LDR   VECTR+1
018 03 0     2636         CFR - 0,00            COMPARE FIRST FIVE CHARACTERS
018 04 0     2637         BCL   YES             YES, INSERT IT
018 05 0     2638         BCE   MAYBE           COMPARISON ON NEXT 5 NEEDED
018 06 0     2639   *C    LDR   LEVEL
018 07 0     2640         STR   THROW           LAST OPERAND USED LINKS TO
018 08 0     2641         LDR   HOLD            THE OPERAND TO BE USED
018 09 0     2642         STR   LEVEL
018 10 0     2643         BUN   TLU


018 13 0     2644   YES   LDR   LEVEL
018 14 0     2645         CFR   THROW           IF THEY ARE EQUAL THEN THE SPECIAL
018 15 0     2646         BCE   EH              CASE WHERE THE HEAD OF THE STACK
018 16 0     2647         CAD   LEVEL           IS CHANGED
018 17 0     2648         STA   VECTR,04
018 18 0     2649         STP   GETX            GET NEXT FREE CELLS
018 19 0     2650         BUN   GET
018 20 0     2651         LDB   THROW
018 21 0     2652         STA - 0,04            INSERT NEW OPERAND WITH
018 22 0     2653         ADD   +1              ITS NICE INFORMATIN INTO STACK
018 23 0     2654         SLA   4
018 24 0     2655         STA   VECTR,64
018 25 0     2656         LDB   MEM
018 26 0     2657   VL    RTF   VECTR,4         ENTER THE VECTOR INTO THE STACK
018 27 0     2658         STB   MEM
018 28 0     2659         BUN   J-
018 29 0     2660   EH    STP   GETX            GET NEXT FREE CELLS
018 30 0     2661         BUN   GET
018 31 0     2662         ADD   +1
018 32 0     2663         SLA   4
018 33 0     2664         ADD   MEM
018 34 0     2665         LDB   THROW           DO AN INSERT FOR THIS SPECIAL CASE
018 35 0     2666         LDR - 0
018 36 0     2667         STA - 0
018 37 0     2668         STR   VECTR
018 38 0     2669         BUN   VL-1


018 41 0     2670   MAYBE LDR   VECTR+2         COMPARE WITH
018 42 0     2671         CFR - 1,00            NEXT FIVE CHARACTERS
018 43 0     2672         BCH   C-
018 44 0     2673         BUN   YES


018 47 0     2674   NUMLB BZA   A+              CONVERT NUMERIC LABELS
018 48 0     2675         SRT   10              TO ALFANUMERIC FORM
018 49 0     2676         CLL   VECTR+1         WITH LEADING ZEROES
018 50 0     2677         BFR   B+,55,0         SUPPRESSED
018 51 0     2678         STP   SUPX
018 52 0     2679         BUN   SUP
018 53 0     2680         STA   VECTR+1
018 54 0     2681         STP   NSUPX
018 55 0     2682         BUN   NSUP
018 56 0     2683         STA   VECTR+2
018 57 0     2684         BUN   RETRN
018 58 0     2685   *B    SLT   5
018 59 0     2686         STP   SUPX
018 60 0     2687         BUN   SUP
018 61 0     2688         STA   VECTR+2
018 62 0     2689         BUN   RETRN
018 63 0     2690   *A    LDR   +80
018 64 0     2691         BUN   RETRN-2


018 67 0     2692   SUP   SLT   1               CONVERT A 5 DIGIT NUMERIC
018 68 0     2693         BZA   *+2             TO ALFA WITH SUPPRESSION
018 69 0     2694         ADD   +80             OF LEADING ZEROES
018 70 0     2695         IFL   *-1,11,2
018 71 0     2696   SUPX  BOF   *
018 72 0     2697         SLA   1
018 73 0     2698         BUN   SUP


018 76 0     2699   NSUP  SLT   1               CONVERT A 5 DIGIT NUMERIC
018 77 0     2700         ADD   +80             TO ALFA - DO NOT SUPPRESS
018 78 0     2701   NSUPX BFA   *,11,8          LEADING ZEROES
018 79 0     2702         SLA   1
018 80 0     2703         BUN   NSUP


018 83 0     2704   END1  MLS 4 OT+10           MEMORY DUMP GOES ON ODD LANE
018 84 0     2705         MPF 4 OT,4
018 85 0     2706   *A    LDB   +DUMBS
018 86 0     2707         STP   REMX            ENTRY IN DUMP STACK IS N NNNN LL LINK
018 87 0     2708         BUN   REM             WHERE  NNNN= NUMBER OF ITEMS IN LIST
018 88 0     2709         BUN   ACTUA                  LL= LEVEL NUMBER FOR THE
018 89 0     2710         LDB   +SBMUD                     PROCEDURE WHICH CONTAINS
018 90 0     2711         STP   INSX                       THE DUMP LIST
018 91 0     2712         BUN   INS
018 92 0     2713         BUN   A-              INVERT STACK OF NECESSARY DUMPS
018 93 0     2714   ACTUA LDB   +SBMUD
018 94 0     2715         STP   REMX
018 95 0     2716         BUN   REM
018 96 0     2717         BUN   FIN             END OF DUMPS
018 97 0     2718         CLL   IDEX
018 98 0     2719         STA   HOLD            SAVE DUMP ENTRY
018 99 0     2720         BFA   C+,62,0         IF ZERO - DUMP FOR PROGRAM
019 00 0     2721         SRA   4               IF NON-ZERO
019 01 0     2722         STA   IDEX,02         SAVE LEVEL AND GET ASSOCIATED
019 02 0     2723         CAD   TBL+300         PROCEDURE NAME
019 03 0     2724   *B    STA   DIM
019 04 0     2725         DLB   DIM,64,0
019 05 0     2726         CAD - 2
019 06 0     2727         CFA   IDEX,02
019 07 0     2728         BCE   A+              PROCEDURE NAME FOUND
019 08 0     2729         LDB   DIM             GET NEXT ITEM FROM PROCEDURE STACK
019 09 0     2730         CAD - 0
019 10 0     2731         BUN   B-
019 11 0     2732   *A    CAD - 0
019 12 0     2733         LDR - 1
019 13 0     2734         STA   J++4,00
019 14 0     2735         STR   J++5,00
019 15 0     2736         LDR   +EN
019 16 0     2737         STR   EM,04
019 17 0     2738         MOW 4 Q+,OT,3
019 18 0     2739   *C    STB   PRSW1,62
019 19 0     2740         STB   PRSW2,62
019 20 0     2741         CAD   HOLD
019 21 0     2742         BFA   *+3,45,0        IF THE DUMP LIST WAS NULL
019 22 0     2743         IFL   PRSW1,62,29     SET SOME SWITCHES SO THAT
019 23 0     2744         IFL   PRSW2,62,29     EVERY TABLE ITEM OUTPUT TO TAPE
019 24 0     2745         IFL   PRSW1,62,1      WILL HAVE A SIGN OF 4
019 25 0     2746         IFL   PRSW2,62,1
019 26 0     2747         DLB   SCRTB+114,64,0
019 27 0     2748         STB   TRCE,04
019 28 0     2749         BUN   END15


019 31 0     2750   LOD3  DEFN  *
019 32 0     2750   *Q    BCS   V+-LOD3+100,9
019 33 0     2751   *Z1   STP   *,2438
019 34 0     2752   *Z2   BUN   *,J+-LOD3+100
019 35 0     2753   *V    NOP   LOD1-100
019 36 0     2754         NOP   1
019 37 0     2755         LDB   *-1-LOD3+100
019 38 0     2756         RTF   *+2-LOD3+100,3
019 39 0     2757         BUN   1
019 40 0     2758         LBC   V--LOD3+100
019 41 0     2759         MRD 4 100,OT,3,BMOD
019 42 0     2760         BUN   100
019 43 0     2761   *J    CNST  $         PROCEDURE
019 44 0     2771
019 45 0     2782                          $
019 46 0     2785         LOCN  *+10


019 49 0     2795   END15 MOW 4 Q+,OT,3
019 50 0     2796         LDB   IDEX                          DUMP
019 51 0     2797         CAD - TBL+200
019 52 0     2798   *C    STA   HOLD
019 53 0     2799         LDB   HOLD
019 54 0     2800         IBB   END2,9999       END OF THIS LABEL STACK
019 55 0     2801         DLB   HOLD,64,0
019 56 0     2802         CAD - 2               GET OPERAND OF THE LABEL
019 57 0     2803         STB   STOX1,62
019 58 0     2804         BPA   PRSW1           SIGN OF 0 MEANS NOT BEING DUMPED
019 59 0     2805         IFL   STOX1,62,1
019 60 0     2806         BUN   B+
019 61 0     2807   PRSW1 BUN   D+              DUMP HAD A NULL LIST
019 62 0     2808         IFL   STOX1,62,1      SET UP TO MARK ITEM WITH A SIGN OF 4
019 63 0     2809         BUN   B+
019 64 0     2810   *D    IFL   STOX1,62,30     DO NOT MARK FOR DUMPING
019 65 0     2811   *B    CAD - 0
019 66 0     2812         STP   STOXX
019 67 0     2813         BUN   STOX1
019 68 0     2814         CAD - 1
019 69 0     2815         STP   STOXX           ENTER ITEM INTO OUTPUT BUFFER
019 70 0     2816         BUN   STOX1
019 71 0     2817         CAD - 2
019 72 0     2818         STP   STOXX
019 73 0     2819         BUN   STOX1
019 74 0     2820         LDB   HOLD
019 75 0     2821         CAD - 0
019 76 0     2822         BUN   C-


019 79 0     2823   END2  LSA   9               OUTPUT END FLAG
019 80 0     2824         STP   STOXX
019 81 0     2825         BUN   STOX
019 82 0     2826         IFL   *-1,11,5
019 83 0     2827         BOF   END3
019 84 0     2828         LDB   IDEX
019 85 0     2829         CAD - TBL
019 86 0     2830         BUN   C-              PROCESS SIMPLE VARIABLES




019 91 0     2831   STOX1 BUN   STOX
019 92 0     2832         LSA   4               MARK ITEM FOR DUMPING
019 93 0     2833   STOX  STA   0               ENTER ITEM INTO BUFFER
019 94 0     2834         IFL   STOX,02,1
019 95 0     2835         BOF   *+2
019 96 0     2836   STOXX BUN   *               EXIT LINE
019 97 0     2837         MOW 4 0,OT,1          BUFFER FULL
019 98 0     2838         BUN   STOXX

020 00 0     2839   LOD1  DEFN  *               THIS PROGRAM IS RELOCATED TO
020 01 0     2839   *Q    NOP 8 J++1            LOCATION 0100 AT OBJECT TIME
020 02 0     2840   *R    CLB 8 I+              AND CUASES THE PRINTING OF
020 03 0     2841         BUN 8 *+3             THE FOLLOWING LIST
020 04 0     2842   *A    LDB 8 B+
020 05 0     2843         IBB 8 C+,1
020 06 0     2844         MRD 4 0,OT,1
020 07 0     2845         DBB 8 *+1,100         LAST LABEL PASSED WAS L(N)
020 08 0     2846   *C    CAD - 100
020 09 0     2847         STB 8 B+,04
020 10 0     2848         BSA 8 EM,9            LABEL IN PROGRAM  NUMBER OF TIMES
020 11 0     2849         BCS 8 A-,9
020 12 0     2850         IOM 8 EM                                   EXECUTED
020 13 0     2851         BSA 8 EM,4
020 14 0     2852         BUN 8 A-
020 15 0     2853   EM    DEFN  *                      L                N
020 16 0     2853   *D    BUN 8 *+1
020 17 0     2854         NOP 8 I++6                   -                -
020 18 0     2855         LDB 8 *-1
020 19 0     2856   ASSGZ RTF 8 NONE,4          VARIABLE IN PROGRAM           VALUE
020 20 0     2857         CAA 8 I++6
020 21 0     2858         ADA 8 I++7                     V                      N
020 22 0     2859         BOF 8 *+1                      -                      -
020 23 0     2860         BZA 8 *+2                      -                      -
020 24 0     2861         BUN 8 EN-2
020 25 0     2862         NOP 8 NONE
020 26 0     2863         LDB 8 *-1
020 27 0     2864         STB 8 ASSGZ,04
020 28 0     2865         BUN 8 D-
020 29 0     2866   *Z3   STP   *,2438
020 30 0     2867   *Z4   BUN   *,I+-LOD1+100
020 31 0     2868   EN    LDB 8 R-              WITH A PROCEDURE THE FIRST
020 32 0     2869         CLL 8 I+-1          MESSAGE IS NOT PRINTED
020 33 0     2870         IFL 8 I+-1,12,20
020 34 0     2871         RTF 8 I+-1,24
020 35 0     2872         DFL 8 B+,04,1
020 36 0     2873         STP 8 D-
020 37 0     2874         BUN 8 A-
020 38 0     2875         BSA 8 V+,9
020 39 0     2876   *Z5   STP   *,2468
020 40 0     2877   *Z6   BUN   *,J+-LOD1+100
020 41 0     2878         DFL 8 B+,04,1
020 42 0     2879         STP 8 D-
020 43 0     2880         BUN 8 A-
020 44 0     2881   *E    STA 8 I++2,00
020 45 0     2882         BSA 8 V+,9
020 46 0     2883         STP 8 D-
020 47 0     2884         BUN 8 A-
020 48 0     2885         STA 8 I++3,00
020 49 0     2886         STP 8 D-
020 50 0     2887         BUN 8 A-
020 51 0     2888         DLB - 100,64,0
020 52 0     2889         CSA - 0
020 53 0     2890         BFA 8 *+2,62,44
020 54 0     2891         CSA - 1
020 55 0     2892         CFA 8 TRCE,04
020 56 0     2893         BCU 8 *+2
020 57 0     2894         IBB 8 *-5,2
020 58 0     2895         SRA   6
020 59 0     2896         ADD 8 D1
020 60 0     2897         STP 8 D-
020 61 0     2898         BUN 8 A1+
020 62 0     2899         STA 8 I++8,08
020 63 0     2900   *Z7   STP   *,2408
020 64 0     2901   *Z8   BUN   *,I+-LOD1+100
020 65 0     2902         STP 8 D-
020 66 0     2903         BUN 8 A-
020 67 0     2904         BUN 8 E-
020 68 0     2905   *V    LDB 8 A9+
020 69 0     2906         CLL 8 J+-1
020 70 0     2907         IFL 8 J+-1,12,20
020 71 0     2908         RTF 8 J+-1,35
020 72 0     2909         STP 8 D-
020 73 0     2910         BUN 8 A-
020 74 0     2911         BSA 8 V+,9
020 75 0     2912   *Z9   STP   *,2468
020 76 0     2913   *Z10  BUN   *,K+-LOD1+100
020 77 0     2914   *Z11  STP   *,2448
020 78 0     2915   *Z12  BUN   *,J+-LOD1+100
020 79 0     2916         DFL 8 B+,04,1
020 80 0     2917   *C    STP 8 D-
020 81 0     2918         BUN 8 A-
020 82 0     2919         BSA 8 V+,9
020 83 0     2920         STA 8 J++2,00
020 84 0     2921         STP 8 D-
020 85 0     2922         BUN 8 A-
020 86 0     2923         STA 8 J++3,00
020 87 0     2924         STP 8 D-
020 88 0     2925         BUN 8 A-
020 89 0     2926         SRT   10
020 90 0     2927         DLB - 100,64,0
020 91 0     2928   *A9   CLA 8 J+
020 92 0     2929         ADD - 0
020 93 0     2930         BFR 8 F+,21,0
020 94 0     2931         STP 8 D-
020 95 0     2932         BUN 8 A1+
020 96 0     2933         LDB 8 Q-
020 97 0     2934         DBB 8 *+1,9993
020 98 0     2935         RTF 8 S+,3
020 99 0     2936         CLL 8 J++11
021 00 0     2937         IFL 8 J++11,12,20
021 01 0     2938   *Z13  STP   *,2408
021 02 0     2939   *Z14  BUN   *,J+-LOD1+100
021 03 0     2940         BUN 8 C-
021 04 0     2941   *F    SLA   2
021 05 0     2942         STA 8 S++5,02
021 06 0     2943         SRA   2
021 07 0     2944         SLA   2
021 08 0     2945         STP 8 D-
021 09 0     2946         BUN 8 A1+
021 10 0     2947         LDB 8 Q-
021 11 0     2948         DBB 8 *+1,9993
021 12 0     2949         RTF 8 S+,3
021 13 0     2950         IFL 8 J++8,02,03
021 14 0     2951         CAD 8 S++5
021 15 0     2952         LDR 8 S++1
021 16 0     2953         BFR 8 *+2,21,0
021 17 0     2954         SUB 8 S++4
021 18 0     2955         STP 8 D-
021 19 0     2956         BUN 8 A1+
021 20 0     2957         SLT   16
021 21 0     2958         STR 8 J++11,44
021 22 0     2959         CAD 8 S+
021 23 0     2960         SRA   2
021 24 0     2961         STA 8 J++10,04
021 25 0     2962         IFL 8 J++10,82,23
021 26 0     2963         BUN 8 F--3
021 27 0     2964   *A1   CLL 8 S+
021 28 0     2965         IFL 8 S+,12,20
021 29 0     2966         BPA 8 *+3
021 30 0     2967         IFL 8 S+,82,20
021 31 0     2968         LSA   0
021 32 0     2969         SRT   10
021 33 0     2970   TRCE  CLB
021 34 0     2971   *B    CLA
021 35 0     2972   *Y    SLA   1
021 36 0     2973         ADD 8 S++3
021 37 0     2974         SLT   1
021 38 0     2975         IBB 8 Y-,2000
021 39 0     2976         STA 9 S++1,00
021 40 0     2977         IFL 8 Y-,11,5
021 41 0     2978         BOF 8 D-
021 42 0     2979         IBB 8 B-,1
021 43 0     2980   D1    CNST  10000
021 44 0     2981   *S    CNST  20000000000
021 45 0     2982         CNST  20000000000
021 46 0     2983         CNST  20000000000
021 47 0     2984         CNST  8
021 48 0     2985         CNST  50
021 49 0     2986         CNST  0
021 50 0     2987   *K    CNST  $        VARIABLE IN PROGRAM                    VALUE $
021 51 0     2998         CNST  20000000000
021 52 0     2999   *J    CNST  $        LABEL IN PROGRAM       NUMBER OF TIMES EXECUTE
021 53 0     3009               D$
021 54 0     3010         CNST  20000000000
021 55 0     3011   *I    CNST  $        LAST LABEL PASSED WAS
021 56 0     3021
021 57 0     3032                          $


021 60 0     3035   *V    NOP   Q+-100          THIS PROGRAM READS IN THE
021 61 0     3036         LDB 8 *+2           ARRAY DUMP ROUTINE
021 62 0     3037         RTF 8 *+2,3
021 63 0     3038         BUN   98
021 64 0     3039         LBC 8 *-4
021 65 0     3040         MRD 4 100,1,3,BMOD
021 66 0     3041   NONE  CNST  $(NONE)              $
021 67 0     3045         LOCN  LOD1+240



021 71 0     3079   END3  CAD   STOX            DUMP BUFFER(LABELS AND VARIABLES)
021 72 0     3080         BFA   *+2,04,0        IF IT IS NOT EMPTY
021 73 0     3081         MOW 4 0,OT,1
021 74 0     3082         CLR
021 75 0     3083         STR   STOX,04         INITIALIZE STORE ROUTINE
021 76 0     3084         MOW 4 Q+,OT,3
021 77 0     3085         LDB   IDEX
021 78 0     3086         CAD - TBL+100
021 79 0     3087   *C    STA   HOLD
021 80 0     3088         LDB   HOLD
021 81 0     3089         IBB   END4,9999       END OF LIST OF ARRAYS
021 82 0     3090         DLB   HOLD,64,0
021 83 0     3091         CAD - 4
021 84 0     3092         STB   STOX1,62
021 85 0     3093         BPA   PRSW2           ITEM UNMARKES - MARK IT IF PRSW2 IS ON
021 86 0     3094         IFL   STOX1,62,1
021 87 0     3095         BUN   A+
021 88 0     3096   PRSW2 BUN   D+
021 89 0     3097         IFL   STOX1,62,1
021 90 0     3098         BUN   A+
021 91 0     3099   *D    IFL   STOX1,62,30
021 92 0     3100   *A    CAD - 0
021 93 0     3101         STP   STOXX
021 94 0     3102         BUN   STOX1
021 95 0     3103         CAD - 1
021 96 0     3104         STP   STOXX
021 97 0     3105         BUN   STOX1
021 98 0     3106         CAD - 2
021 99 0     3107         STP   STOXX
022 00 0     3108         BUN   STOX1
022 01 0     3109         CAD - 3               OUTPUT ARRAY ITEM TO TAPE
022 02 0     3110         STP   STOXX
022 03 0     3111         BUN   STOX1
022 04 0     3112         CAD - 4
022 05 0     3113         STP   STOXX
022 06 0     3114         BUN   STOX1
022 07 0     3115         LDB   HOLD
022 08 0     3116         CAD - 0
022 09 0     3117         BUN   C-


022 12 0     3118   END4  LSA   9
022 13 0     3119         STP   STOXX           PUT A END FLAG OUT TO BUFFER
022 14 0     3120         BUN   STOX
022 15 0     3121         CAD   STOX
022 16 0     3122         BFA   *+2,04,0
022 17 0     3123         MOW 4 0,OT,1          DUMP BUFFER IF NOT EMPTY
022 18 0     3124         CLR
022 19 0     3125         STR   STOX,04         INITIALIZE STORE SUBROUTINE
022 20 0     3126         BUN   ACTUA           GET NEXTITEM FOR SBMUD STACK


022 23 0     3127   LOD2  DEFN  *               THIS PROGRAM IS RELOCATED TO
022 24 0     3127   *Q    CLB 8 J++1            LOCATION 0100 AT OBJECT TIME
022 25 0     3128         BUN 8 *+3             AND CAUSES THE PRINTING OF
022 26 0     3129   *A    LDB 8 B+              THE FOLLOWING LIST
022 27 0     3130         IBB 8 C+,1
022 28 0     3131         MRD 4 0,1,1
022 29 0     3132         DBB 8 *+1,100
022 30 0     3133   *C    CAD - 100
022 31 0     3134         STB 8 B+,04
022 32 0     3135         BSA 8 D+,9            ARRAY A
022 33 0     3136         BCS 8 A-,9
022 34 0     3137         IOM 8 D+
022 35 0     3138         BSA 8 D+,4            (ELEMENTS OF THE ARRAY PRINTED BY ROW)
022 36 0     3139         BUN 8 A-
022 37 0     3140   *D    BUN 8 *+2
022 38 0     3141         BUN 8 *-1
022 39 0     3142         BSA 8 V+,9
022 40 0     3143         STA 8 I++3,00
022 41 0     3144         STP 8 D-
022 42 0     3145         BUN 8 A-              NOTE THAT A ROW HAS AS MANY ELEMENTS
022 43 0     3146         STA 8 I++4,00       IN IT AS THE LAST INTEGER IN THE
022 44 0     3147   *Z15  STP   *,2468
022 45 0     3148   *Z16  BUN   *,I+-LOD2+100
022 46 0     3149   *Z17  STP   *,2448
022 47 0     3150   *Z18  BUN   *,J+-LOD2+100
022 48 0     3151         STP 8 D-
022 49 0     3152         BUN 8 A-
022 50 0     3153         STA 8 L+
022 51 0     3154         STP 8 D-
022 52 0     3155         BUN 8 A-
022 53 0     3156         CFA 8 S+,00
022 54 0     3157         BCU 8 *+2
022 55 0     3158         CAD 8 S++1
022 56 0     3159         STA 8 L++1
022 57 0     3160         STA 8 L++2
022 58 0     3161         STP 8 D-
022 59 0     3162         BUN 8 A-
022 60 0     3163         CFA 8 S+,21
022 61 0     3164         SRA   4
022 62 0     3165         STA 8 G+,04
022 63 0     3166   *H    CLL 8 N+
022 64 0     3167         IFL 8 N+,00,21
022 65 0     3168         CAR
022 66 0     3169   *G    ADD   *
022 67 0     3170         CLL 8 J+-1
022 68 0     3171         CLL 8 T+
022 69 0     3172         IFL 8 T+,12,20
022 70 0     3173         BPA 8 *+3
022 71 0     3174         IFL 8 T+,82,20
022 72 0     3175         LSA   0
022 73 0     3176         BCU 8 *+3
022 74 0     3177         SLT   2
022 75 0     3178         STR 8 S++2,02
022 76 0     3179         SRT   10
022 77 0     3180         CLB
022 78 0     3181   *B    CLA
022 79 0     3182   *Y    SLA   1
022 80 0     3183         ADD 8 S++3
022 81 0     3184         SLT   1
022 82 0     3185         IBB 8 Y-,2000
022 83 0     3186         STA 9 T++1,00
022 84 0     3187         IFL 8 Y-,11,5
022 85 0     3188         BOF 8 *+2
022 86 0     3189         IBB 8 B-,1
022 87 0     3190         BCE 8 P+
022 88 0     3191         CLL 8 T++3
022 89 0     3192   *M    LBC 8 N+
022 90 0     3193         LDR 8 T+
022 91 0     3194         STR 9 J++22,04
022 92 0     3195         LDR 8 T++1
022 93 0     3196         STR 9 J++23
022 94 0     3197         LDR 8 T++2
022 95 0     3198         STR 9 J++24
022 96 0     3199         LDR 8 T++3
022 97 0     3200         STR 9 J++25,66
022 98 0     3201         DLB 8 L++1,04,1
022 99 0     3202         IBB 8 W+,9999
023 00 0     3203         DLB 8 N+,04,3
023 01 0     3204         IBB 8 Y+,9999
023 02 0     3205   *H    DLB 8 L+,04,1
023 03 0     3206         DBB 8 X+,1
023 04 0     3207         LDR 8 O+
023 05 0     3208         BZR 8 E+
023 06 0     3209   *F    STP 8 D-
023 07 0     3210         BUN 8 A-
023 08 0     3211         BUN 8 D-+2
023 09 0     3212   *Z19  DEFN  *
023 10 0     3212   *E    STP   *,2428
023 11 0     3213   *Z20  BUN   *,J+-LOD2+100
023 12 0     3214         LDB 8 Q-
023 13 0     3215         RTF 8 J+,23
023 14 0     3216         BUN 8 F-
023 15 0     3217   *X    CLL 8 O+
023 16 0     3218         IFL 8 G-,04,1
023 17 0     3219         CLA
023 18 0     3220         BUN 8 G-
023 19 0     3221   *Y    DEFN  *
023 20 0     3221   *Z21  STP   *,2408
023 21 0     3222   *Z22  BUN   *,J+-LOD2+100
023 22 0     3223         CLL 8 N+
023 23 0     3224         IFL 8 N+,04,21
023 24 0     3225         LDB 8 Q-
023 25 0     3226         RTF 8 J+,23
023 26 0     3227         STP 8 O+
023 27 0     3228         BUN 8 H-
023 28 0     3229   *Z23  DEFN  *
023 29 0     3229   *W    STP   *,2428
023 30 0     3230   *Z24  BUN   *,J+-LOD2+100
023 31 0     3231         LDR 8 L++2
023 32 0     3232         STR 8 L++1
023 33 0     3233         BUN 8 Y-+2
023 34 0     3234   *P    IFL 8 T+,02,03
023 35 0     3235         STR 8 T++2,04
023 36 0     3236         IFL 8 T++2,82,23
023 37 0     3237         CAD 8 S++2
023 38 0     3238         LDR 8 T++1                                                            ORIGINALLY: 0V3 38 0   3V38
023 39 0     3239         BFR 8 *+2,21,0                                                        ORIGINALLY: 0VK X( 0   XVX(
023 40 0     3240         SUB 8 S++4                                                            ORIGINALLY: 05X 70 0   75X0
023 41 0     3241         BPA 8 *+3
023 42 0     3242         IFL 8 T++2,02,20
023 43 0     3243         LSA   0
023 44 0     3244         CLR
023 45 0     3245         SRT   1
023 46 0     3246         SLA   1
023 47 0     3247         SLT   7
023 48 0     3248         ADD 8 S++5
023 49 0     3249         STA 8 T++3,00
023 50 0     3250         BUN 8 M-
023 51 0     3251   *O    CNST  0
023 52 0     3252   *T    CNST  20000000000
023 53 0     3253         CNST  20000000000
023 54 0     3254         CNST  20000000000
023 55 0     3255         CNST  20000000000
023 56 0     3256   *S    CNST  1
023 57 0     3257         CNST  9999
023 58 0     3258         CNST  0
023 59 0     3259         CNST  8
023 60 0     3260         CNST  50
023 61 0     3261         CNST  8080000000
023 62 0     3262   *L    CNST  0
023 63 0     3263         CNST  0
023 64 0     3264         CNST  0
023 65 0     3265   *N    CNST  0
023 66 0     3266   *I    CNST  $       ARRAY
023 67 0     3276
023 68 0     3287                         $
023 69 0     3290   *J    CNST  $
023 70 0     3300
023 71 0     3311                         $


023 74 0     3314   *V    NOP   LOD3-100        GET EITHER A PROCEDURE
023 75 0     3315         LDB 8 S-              HEADER OR END OF DUMP
023 76 0     3316         RTF 8 *+2,3           PROGRAM
023 77 0     3317         BUN   1
023 78 0     3318         LBC 8 *-4
023 79 0     3319         MRD 4 100,1,3,BMOD
023 80 0     3320         BUN   100
023 81 0     3321         LOCN  LOD2+240


023 84 0     3367   FIN   MOW 4 Q+,OT,1         OUTPUT END OF DUMP PROGRAM
023 85 0     3368         MRW 4 OT
023 86 0     3369         CAD   MEM
023 87 0     3370         CFA   +LDBG-1
023 88 0     3371         BCH   A+
023 89 0     3372         BUN   LDBG
023 90 0     3373   *A    CFA   +MEM+302
023 91 0     3374         BCL   A+
023 92 0     3375         BUN   LDBG
023 93 0     3376   *A    MIB 4 *+2,T
023 94 0     3377         BUN   *-1
023 95 0     3378         MRW 4 T
023 96 0     3379         DLB   *,44,0
023 97 0     3380         MPF 4 T,10
023 98 0     3381         DBB   *-1,1100
023 99 0     3382         MPF 4 T,2
024 00 0     3383         LDB   *+1
024 01 0     3384   POSCT NOP   0
024 02 0     3385         IBB   *+3,9999
024 03 0     3386         MPF 4 T,1
024 04 0     3387         BUN   *-2
024 05 0     3388         MRD 4 400,T,10
024 06 0     3389         MRD 4 1400,T,10
024 07 0     3390         MRW 4 T
024 08 0     3391         MIB 4 *+2,T
024 09 0     3392         BUN   *-1
024 10 0     3393         MLS 4 OT
024 11 0     3394         BUN   LDBG


024 14 0     3395   LOD4  DEFN  *
024 15 0     3395   *Q    MRW 4 OT+10
024 16 0     3396         BCS   *+3-LOD4+100,9
024 17 0     3397   *Z25  STP   *,2418
024 18 0     3398   *Z26  BUN   *,J+-LOD4+100
024 19 0     3399         LDR   A+-LOD4+100
024 20 0     3400         STR   MLOAD-1
024 21 0     3401         BUN   MLOAD-1
024 22 0     3402   *A    MNC 4 0,OT,4
024 23 0     3403   *J    CNST  $
024 24 0     3413
024 25 0     3424                          $
024 26 0     3427         LOCN  *+10          SPACE FOR PATCHES


024 29 0     3437   GET   CAD   MEM
024 30 0     3438         ADD   +7
024 31 0     3439         CFA   +XZERO-1,04
024 32 0     3440         BCH   A+              IS THERE ENOUGH ROOM
024 33 0     3441         CAD   MEM             YES-  USE PRESENT SETTING OF MEM
024 34 0     3442   GETX  BUN   *
024 35 0     3443   *A    CAD   +700            IF NOT SET IT TO 0800
024 36 0     3444         STA   MEM             AND DONT BOTHER CHECKING ANY MORE
024 37 0     3445         BUN   GETX


024 40 0     3446   SBMUD F244  0,SBMUD,0       INVERTED DUMP STACK
024 41 0     3447   FIXUP F424  FIXUP,0,0       FIX-UPS FOR CALLS OF EXT PROGRAMS FROM
                                                WITHIN SEGMENTS
024 43 0     3448   NN    CNST  99              CONSTANT 99
024 44 0     3449   LCHOD CNST  0
024 45 0     3450   HALT  F424  757,0,7250      O K  HALT
024 46 0     3451   VECTR CNST  0,0,0,0,0,0     STORAGE VECTOR USED BY THE MONSTER
024 47 0     3457   SRERR CNST  21662454159     SEARCH ERROR
024 48 0     3458         CNST  24348004559
024 49 0     3459         CNST  25956590202
024 50 0     3460   CSERR CNST  21643484543     CHECK SUM ERROR
024 51 0     3461         CNST  25200626454
024 52 0     3462         CNST  20045595956
024 53 0     3463         CNST  25902020202
024 54 0     3464   ERFRM FBGR  PRINT,9(T5A),75B
024 55 0     3493   SREF  CNST  0               SYMBOL REFERENCE ADDRESS - PRESENT ITEM
024 56 0     3494   SL    CNST  0               SYMBOL LENGTH
024 57 0     3495   HOLD  CNST  0               SHORT TERM STORAGE LOCATION
024 58 0     3496   THROW CNST  0               DITTO
024 59 0     3497   NINES CNST  9999999999,9999999999   LARGEST POSSIBLE SYMBOL
                                ALL 301 STACKS USED BY THE MONSTER ARE INITIALIZED WITH
                                THIS SYMBOL SO SORTING CAN BE DONE
024 62 0     3499   IDEX  CNST  0               LEVEL OF PROCEDURE
024 63 0     3500   DIM   CNST  0               NUMBER OF DIMENSIONS
024 64 0     3501   J     CNST  0               COUNTER USED IN CONNECTION WITH LBRT
024 65 0     3502   TST   CNST  0               COUNT OF ROUTINES ASSIGNED INDIREDTLY
024 66 0     3503   ADDIT CNST  0
024 67 0     3504   MADIT CNST  0
024 68 0     3505   DIMS  LOCN  *+20            DIMENSION LIST
024 69 0     3525   LX    LOCN  *+50
024 70 0     3575   MEM   HLT   *+302           NEXT FREE LOCATION
024 71 0     3576   TBL   F244  0,NINES,0       SORTED STACKS SET UP BY THE MONSTER
024 72 0     3577         LOCN  4000
024 73 0     4000         MRW   2,4
024 74 0     4001   *A    MPF   2,0
024 75 0     4002         DFL   A--1,01,1
024 76 0     4003         BRP   A-
024 77 0     4004         MPF   2,5
024 78 0     4005         MOW   0000,2,3
024 79 0     4006         MOW   700,2,9
024 80 0     4007         MOW   1600,2,0
024 81 0     4008         MOW   2600,2,0
024 82 0     4009         MRW   2
024 83 0     4010         F424  2222,00,2222
024 84 0     4011         LOCN  LX
024 85 0     3525         FINI  2
             3525               +0000010000
             3526               +0000000010
             3527               +0000000040
             3528               +0000000080
             3529               +0000000100
             3530               +0000000700
             3531               +0525005250
             3532               +0000000001
             3533               +0000000011
             3534               +0011110000
             3535               $FINIS
             3536               +1000600000
             3537               +0000002000
             3538               +0002000000
             3539               -0000001111
             3540               +0000001111
             3541               +1111110000
             3542               +0000000023
             3543               $H
             3544               +0000545600
             3545               +0000000007
             3546               +9669009669
             3547               $POOL
             3548               +0034353600
             3549               +0000000008
             3550               +9999999999
             3551               +0000000009
             3552               +0000000099
             3553               +0010123536
             3554               +0000004233
             3555               +0000002218
             3556               +0000001103
             3557               +0000002202
             3558               +0000002428
             3559               +0000004116
             3560               +0000003577
             3561               +0000003576
             3562               +0000000292
             3563               +0000003446
             3564               +0000002868
             3565               +0000001011
             3566               +0000003877
             3567               +0000004094
