    01 0                  ASMBL 1
    02 0                  REORD 1.00
    10 0
    11 0                                      THE BURROUGHS ALGEBRAIC COMPILER
    12 0                                  ERDWINN, MERNER, CROWDER, SPERONI, KNUTH
    13 0                                  DAHM, OLIPHINT, LOGEMANN, SCHUMAN
    14 0                                                FEBRUARY 1,1962
    15 0     0000   OT    DEFN  1              OUTPUT TAPE UNIT
    16 0     0000   T     DEFN  2              PROGRAM TAPE UNIT
    17 0     0000   PNTR  DEFN  2              PRINTER UNIT
    18 0     0000   LODOX DEFN  74
    19 0     0000   LODOV DEFN  76
    20 0     0000   MSIZE DEFN  4999           SIZE OF MEMORY
    21 0     0000         LOCN  0
    22 0     0000   BUF   DEFN  0002
    23 0     0000         BUN   LOD
    24 0     0001         BUN   STORE

    26 0     0002   LOD   MRW 4 T          TAPE LOADING ROUTINE
    27 0     0003         CLB                     FOR FIRST PHASE
    28 0     0004   *A    MNC 5 0,T,10
    29 0     0005         LDB   *+1
    30 0     0006         CLA   999
    31 0     0007   *B    ADD - 0
    32 0     0008         DBB   B-,1
    33 0     0009         BZA   C+
    34 0     0010         SPO   E+,4       SUM CHECK NONZERO
    35 0     0011         MPB 4 T,10        CAUSES TYPEOUT AND HALT
    36 0     0012         F424  9669,0,9669
    37 0     0013         LDB   B-         PRESS START TO TRY AGAIN
    38 0     0014         BUN   A-
    39 0     0015   *C    DFL   *+1,11,1   FIVE TIMES
    40 0     0016   *G    F424  4000,42,B- TEN BLOCKS
    41 0     0017         IBB   *+1,999    999 LOCATIONS PER BLOCK
    42 0     0018         STB   B-,04
    43 0     0019         BRP   A-
    44 0     0020         BUN   46
    45 0     0021   *E    CNST  $$CHECK SUM ERROR$$
    46 0     0025         LOCN  46
    47 0     0046   *D    LDB   Z+         READ LAST BLOCK INTO THE
    48 0     0047         MNC 5 0,T,2         END OF MEMORY
    49 0     0048         LDB   *+1        (THIS HOLDS PATCHES AND
    50 0     0049         CLA   199
    51 0     0050   *Z    ADD - MSIZE-199
    52 0     0051         DBB   *-1,1      SUM CHECK IT, TOO
    53 0     0052         BZA   D+
    54 0     0053         SPO   E-,4
    55 0     0054         MPB 4 T,2
    56 0     0055         F424  9669,00,9669
    57 0     0056         BUN   D-
    58 0     0057   *D    DFL   G-,11,5
    59 0     0058         STA   B-,04
    60 0     0059         BOF   STACK

                                           TAPE STORING ROUTINE.
    63 0     0060   STORE MRW 4 T
    64 0     0061   *B    LDB   *+1        REWRITES COMPILER FROM CORE
000 65 0     0062         CLA   998         IN THE FORM REQUIRED BY LOADING ROUTINE.
    66 0     0063   *A    ADD - 0
    67 0     0064         DBB   *-1,1
    68 0     0065         LDB   A-
    69 0     0066         LDR - 999
    70 0     0067         STA - 999
    71 0     0068         CSU - 999        COMPUTE CHECK SUM
    72 0     0069         STA - 999
    73 0     0070         MOW 5 0,T,10
    74 0     0071         STR - 999
    75 0     0072         IBB   *+1,999
    76 0     0073         STB   A-,04
    77 0     0074         DFL   G-,11,1
    78 0     0075         BRP   B-
    79 0     0076         DFL   G-,11,5
    80 0     0077   *C    CLA   199
    81 0     0078         STA   A-,04
    82 0     0079         LDB   Z-
    83 0     0080         CLL - 0
    84 0     0081         STB   *+2,04
    85 0     0082         LDB   C-
    86 0     0083   *D    ADD - 0
    87 0     0084         DBB   *-1,1
    88 0     0085         LDB   D-
    89 0     0086         STA - 0
    90 0     0087         CSU - 0
    91 0     0088         STA - 0
    92 0     0089         MOW 5 0,T,2
    93 0     0090         MRW 4 T
    94 0     0091         CLT
    95 0     0092         STA   D-,04
    96 0     0093         BOF   *+1
    97 0     0094         HLT   2222       STOP WHEN JOB IS COMPLETED
    98 0     0095         BUN   LOD

                                   SECTION A.  BIG TABLES.

001 02 0     0096         LOCN  102    DICTIONARY OF ALL WORDS USED IN ERROR MESSAGES
 01 03 0     0102   DICT  CNST  34954575956   01 IMPROPER
 01 04 0     0103         CNST  $PER$
 01 05 0     0104         CNST  34348415941   03 CHARACTER
 01 06 0     0105         CNST  $CTER$
 01 07 0     0106         CNST  $PAIR$        05 PAIR
 01 08 0     0107         CNST  34464575349   06 DUPLICATE
 01 09 0     0108         CNST  $CATE$
 01 10 0     0109         CNST  35759564345   08 PROCEDURE
 01 11 0     0110         CNST  $DURE$
 01 12 0     0111         CNST  $NAME$        10 NAME
 01 13 0     0112         CNST  34664554363   11 FUNCTION
 01 14 0     0113         CNST  $ION$
 01 15 0     0114         CNST  34159476454   13 ARGUMENT
 01 16 0     0115         CNST  $ENT$
 01 17 0     0116         CNST  35449625753   15 MISPLACED
 01 18 0     0117         CNST  $ACED$
 01 19 0     0118         CNST  $LABEL$       17 LABEL
 01 20 0     0119         CNST  34159496348   18 ARITHMETIC
 01 21 0     0120         CNST  $METIC$
 01 22 0     0121         CNST  35657455941   20 OPERATION
 01 23 0     0122         CNST  $TION$
 01 24 0     0123         CNST  36541594941   22 VARIABLE
 01 25 0     0124         CNST  $BLE$
 01 26 0     0125         CNST  36268544256   24 SYMBOL
 01 27 0     0126         CNST  $L$
 01 28 0     0127         CNST  34445434954   26 DECIMAL
 01 29 0     0128         CNST  $AL$
 01 30 0     0129         CNST  $POINT$       28 POINT
 01 31 0     0130         CNST  $SCALE$       29 SCALE
 01 32 0     0131         CNST  34641436356   30 FACTOR
 01 33 0     0132         CNST  $R$
 01 34 0     0133         CNST  36263416345   32 STATEMENT
 01 35 0     0134         CNST  $MENT$
 01 36 0     0135         CNST  34356556263   34 CONSTANT
 01 37 0     0136         CNST  $ANT$
 01 38 0     0137         CNST  $OUT$         36 OUT
 01 39 0     0138         CNST  $OF$          37 OF
 01 40 0     0139         CNST  $RANGE$       38 RANGE
 01 41 0     0140         CNST  34356545749   39 COMPILER
 01 42 0     0141         CNST  $LER$
 01 43 0     0142         CNST  34341574143   41 CAPACITY
 01 44 0     0143         CNST  $ITY$
 01 45 0     0144         CNST  34567434545   43 EXCEEDED
 01 46 0     0145         CNST  $DED$
 01 47 0     0146         CNST  $COMMA$       45 COMMA
 01 48 0     0147         CNST  $EXTRA$       46 EXTRA
 01 49 0     0148         CNST  36264426243   47 SUBSCRIPT
 01 50 0     0149         CNST  $RIPT$
 01 51 0     0150         CNST  $EMPTY$       49 EMPTY
 01 52 0     0151         CNST  35756624963   50 POSITION
 01 53 0     0152         CNST  $ION$
 01 54 0     0153         CNST  $RIGHT$       52 RIGHT
 01 55 0     0154   TEMP  CNST  $LEFT$          NOT USED
 01 56 0     0155         CNST  35741594555   54 PARENTHESIS
 01 57 0     0156         CNST  36348456249
 01 58 0     0157   EX0   CNST  26200007777
 01 59 0     0158         CNST  35945534163   57 RELATION
 01 60 0     0159         CNST  $ION$
 01 61 0     0160         CNST  34256565345   59 BOOLEAN
 01 62 0     0161         CNST  $AN$
 01 63 0     0162         CNST  35657455941   61 OPERAND
 01 64 0     0163         CNST  $ND$
 01 65 0     0164         CNST  $ARRAY$       63 ARRAY
 01 66 0     0165         CNST  34445435341   64 DECLARATION
 01 67 0     0166         CNST  35941634956
 01 68 0     0167         CNST  $N$
 01 69 0     0168         CNST  34162624947   67 ASSIGNMENT
 01 70 0     0169         CNST  $NMENT$
 01 71 0     0170         CNST  $MOD$         69 MOD
 01 72 0     0171         CNST  $INPUT$       70 INPUT
 01 73 0     0172         CNST  35449626249   71 MISSING
 01 74 0     0173         CNST  $NG$

                                         TEMPORARY STORAGE AND COUNTERS

 01 78 0     0174   ABASE CNST  100000 BEGINNING LOCATION OF LAST ARRAY DECLARED
 01 79 0     0175   ACCUM HLT   0      RESULT OF ARITHMETIC OPERATION
 01 80 0     0176   ARRI  HLT   0      PRODUCT OF ARRAY DIMENSIONS
 01 81 0     0177   ARRL  HLT   0      BASE DECREMENT IN ARRAY DECLARATION
 01 82 0     0178   ARTHM HLT   0      IJ-PAIRS FOR ARITHMETIC GENERATOR
 01 83 0     0179   CHAR  HLT   0      LAST CHARACTER READ FROM CARD
 01 84 0     0180   CNTRI HLT   0      COUNTER FOR INSTRUCTIONS IN TARGET BUFFER
 01 85 0     0181   CNTRF HLT   96     COUNTER FOR FIX-UPS IN BUFFER
 01 86 0     0182   D     HLT   0      EXPONENT OF NUMBER
 01 87 0     0183   WRTF  RTF 4 *,0    RECORD TRANSFER CONSTANT FOR WRITE SUBROUTINE
 01 88 0     0184   DESCR HLT   0      OUTPUT INSTRUCTION
 01 89 0     0185   EXPLN HLT   0      SYMBOLIC ADDRESSES OF INSTRUCTION
 01 90 0     0186   DEX   HLT   0      CURRENT CONTENTS OF B REGISTER
 01 91 0     0187   FP    HLT   0      FRACTIONAL PART OF CONSTANT
 01 92 0     0188   FRSTP HLT   0      1ST PARAMETER TO PROCEDURE DECLARATION
 01 93 0     0189   G     HLT   0      SIGN OF INSTRUCTION FOR ASSEMBLER
 01 94 0     0190   GP    HLT   0      TEMP STORAGE OF G
 01 95 0     0191   I     HLT   0      LEFTHAND DIGIT OF IJ-PAIR
 01 96 0     0192   INSTP HLT   0      TEMP STORAGE OF INSTR
 01 97 0     0193   INSTR HLT   0      INSTRUCTION BEING ASSEMBLED
 01 98 0     0194   IOPUS HLT   0      I-O DECLARATION COMMUNICATION LINE
 01 99 0     0195   IRSTP HLT   0      FRSTP IN 64-FIELD
 02 00 0     0196   J     HLT   0      RIGHTHAND DIGIT OF IJ-PAIR
 02 01 0     0197   K     HLT   0      TWICE NUMBER OF CHARACTERS IN IDENTIFIER
 02 02 0     0198   K1    HLT   3      LEFT CHARACTER TYPE -- INITIALLY LEFT PAREN
 02 03 0     0199   K2    HLT   3      RIGHT CHARACTER TYPE
 02 04 0     0200   KC    HLT   0      NUMBER OF PROCEDURE AND FUNCTION DECLARATIONS
 02 05 0     0201   L     HLT   0      CODE WORD FOR PRESENT IDENTIFIER
 02 06 0     0202   LCMAX HLT   0      HIGHEST LOCATION USED IN SEGMENTS
 02 07 0     0203   LEVEL HLT   0      KC LEVEL OF CURRENT PROCEDURE DECLARATION
 02 08 0     0204   LL0   HLT   0      SCRAMBLED STARTING VALUE FOR ALPHA LOOKUP
 02 09 0     0205   LOCNP HLT   0      TEMP STORAGE OF LOCN
 02 10 0     0206   LP    HLT   0      TEMP STORAGE OF L
 02 11 0     0207   LRTF  HLT   0      LOCATION OF LAST RTF IN OUTPUT BUFFER
 02 12 0     0208   MSG   HLT 8        STORAGE FOR ERROR MESSAGES
 02 13 0     0209         LOCN  *+6
 02 14 0     0215   HALT1 DEFN  MSG
 02 15 0     0215   OPRTM HLT   0      RELATIONAL OPERATION
 02 16 0     0216   OPRTN HLT   0      CURRENT OPERATION SENT TO GENERATORS
 02 17 0     0217   PAR   HLT   0      CURRENT DIMENSION OF ARRAY
 02 18 0     0218   PLOC  HLT   0      BEGINNING OF PROCEDURE DECLARATION CODE
 02 19 0     0219   RR1   HLT   0      OTHERWISE TYPE OF MAIN PROGRAM
 02 20 0     0220   RR2   HLT   0      TYPE OF CURRENT DECLARATION
 02 21 0     0221   RR3   HLT   0      OTHERWISE TYPE OF CURRENT PROGRAM
 02 22 0     0222   S1    HLT   24     LEFT CHARACTER (CARDATRON CODE) INITIALLY (
 02 23 0     0223   S2    HLT   24     RIGHT CHARACTER (CARDATRON CODE)
 02 24 0     0224   SAVOP HLT   0      TEMP STORAGE FOR OPERATOR
 02 25 0     0225   SCNCT HLT   2             CURRENT PLACE IN CARD IMAGE
 02 26 0     0226   SER   HLT   0      LOCATION OF A-REGISTER CONTENTS IN STACK
 02 27 0     0227   SMBL  HLT   0      TEMP STORAGE FOR SCANNED SYMBOL
 02 28 0     0228   STSV  HLT   0      CIRCLE J(INPUT) OR CIRCLE K(OUTPUT)
 02 29 0     0229   RR0   HLT   0      CONTROL CODE FOR SYMBL
 02 30 0     0230   SYMBL HLT   0
 02 31 0     0231         HLT   0      STORAGE FOR 50-CHARACTER IDENTIFIER
 02 32 0     0232         HLT   0
 02 33 0     0233         HLT   0
 02 34 0     0234         HLT   0
 02 35 0     0235         HLT   0
 02 36 0     0236         HLT   0
 02 37 0     0237         HLT   0
 02 38 0     0238         HLT   0
 02 39 0     0239         HLT   0
 02 40 0     0240   V1    HLT   0      V-OPERANDS ARE SET UP BY GENERATOR
 02 41 0     0241   V2    HLT   0       AND USED BY ASSEMBLER
 02 42 0     0242   V3    HLT   0
 02 43 0     0243   V4    F244  21,XONE,0        CONSTANT 1
 02 44 0     0244   V5    F244  20,FONE,0        CONSTANT 1.0
 02 45 0     0245   V6    F244  21,XZERO,0       CONSTANT 0
 02 46 0     0246   V7    F244  20,FZERO,0       CONSTANT 0.0
 02 47 0     0247   V8    F244  40,LALE,0
 02 48 0     0248   V9    HLT
 02 49 0     0249   V10   F244  21,XTWO,0        CONSTANT 2
 02 50 0     0250   V11   F244  20,FTWO,0        CONSTANT 2.0
 02 51 0     0251   VARB  HLT   MSIZE  LAST LOCATION USED FOR TARGET VARIABLES,ETC.
 02 52 0     0252   VIMAG HLT   0      CURRENT V-OPERAND
 02 53 0     0253   V     DEFN  V1-1

                                       SWITCHES SET BY TRANSLATOR
 02 56 0     0253   SW2   HLT   0      PROCESSING SCALE FACTOR
 02 57 0     0254   SW3   HLT   0      DECIMAL POINT SENSED IN CONSTANT
 02 58 0     0255   SW6   HLT   0      WE MIGHT WANT IMPLIED MULTIPLICATION
 02 59 0     0256   ALPHA HLT   1      CONTROL OF ITERATION LIST
 02 60 0     0257   DELTA HLT   0      CONTROLS WHAT TO DO AT NEXT SEMICOLON
 02 61 0     0258   EPSLN HLT   0      NUMBER OF EXTERNAL THINGS
 02 62 0     0259   KAPPA HLT   0      EMPTY SUBSCRIPTS HAVE APPEARED
 02 63 0     0260   PHI   HLT   0      IGNORE NEXT LEFT PARENTHESIS
 02 64 0     0261   PSI   HLT   0      NEXT FORWARD REFERENCE IS INCREMENTED
 02 65 0     0262   CHI   HLT   0      MONITOR LABELS IN CURRENT PROGRAM
 02 66 0     0263   CHI3  HLT   0      MONITOR LABELS OUTSIDE OF PROCEDURES
 02 67 0     0264   OMEGA HLT   0      FOR MODE IN ASSIGNMENT GENERATOR
 02 68 0     0265   FNSW  HLT   0      PROCESSING FUNCTION DECLARATION
 02 69 0     0266   PARSW HLT   0      PROCESSING PROCEDURE OR FUNCTION PARAMETERS
 02 70 0     0267   TAG   HLT   0      IDENTIFIER IS A LABEL
 02 71 0     0268   XI    HLT   0      LAST INSTRUCTION ASSEMBLED WAS SLT10
 02 72 0     0269   LAMDA HLT   0      OTHERWISE HAS APPEARED IN EITHER IF CASE
002 73 0     0270   PI    HLT   0      PUT FORWARD REFERENCE OPERATORS ON EXEC STACK
 02 74 0     0271   IOTA  HLT   0      ARRAY NOT YET DECLARED
 02 75 0     0272   OMCRN HLT   0      IGNORE NEXT SEMICOLON

                                       STACKS IN ASSOCIATIVE MEMORY
 02 78 0     0273   AVAIL F424  0000,0,0      FREED-UP LOCATIONS
 02 79 0     0274   FUNS  F424  FUNS,0,0      CONTROL OF PROCEDURE,FUNCTION CALLS
 02 80 0     0275   OP    F424  OP,0,0        OPERATORS WAITING TO BE USED
 02 81 0     0276   ARAS  F424  ARAS,0,0      INCREMENT WORDS FOR ARRAY
 02 82 0     0277   DIMS  F424  DIMS,0,0      ARRAY DIMENSIONS
 02 83 0     0278   EXEC  F424  EXEC,0,0      FORWARD REFERENCES TO FOR LOOP
 02 84 0     0279   FV    F424  FV,0,0        FOR VARIABLE
 02 85 0     0280   MULS  F424  MULS,0,0      DIMENSIONS
002 86 0     0281   MODE  F424  MODE,0,NRMMD  MODE TRANSLATOR IS IN (INITIALLY NORMAL)
 02 87 0     0282   MULT  F424  MULT,0,0      MULS STACK BACKWARDS
 02 88 0     0283   OPRND F424  OPRND,0,0     OPERANDS WAITING TO BE USED
 02 89 0     0284   PAREF F424  PAREF,0,0     REFERENCE TO PROCEDURE PARAMETERS
 02 90 0     0285   PR1   F424  PR3,0,0       PREFIXES OUTSIDE OF PROCEDURES
 02 91 0     0286   PR3   F424  PR3,0,0       CURRENT PREFIXES
 02 92 0     0287   RV    F424  RV,0,0        FOR VARIABLE (BACKWARDS)
 02 93 0     0288   SAVET F424  SAVET,0,0     TEMP STORAGE CELLS SAVED
 02 94 0     0289   SETUP F424  SETUP,0,0     REFERENCE TO A PROCEDURE PARAMETER
 02 95 0     0290   TEMPS F424  TEMPS,0,0     TEMP STORAGE CELLS AVAILABLE
 02 96 0     0291   XVP   F424  XVP,0,0       ARRAYS IN MULTIPLE INDEXING
 02 97 0     0292   DUMBS F424  DUMBS,0,0     LEVELS WHERE DUMP CARD APPEARS


 03 00 0     0293   OPTAB DEFN  *             TABLE OF OPERATION SYMBOLS
 03 01 0     0293   CRA   F2443 0,GCRA,1      00 INPUT OR OUTPUT
 03 02 0     0294   CRB   F2441 01,GCRB,1     01 EQUAL
 03 03 0     0295   CRC   F2442 00,GCRC,1     02 FUNCTION CALL COMMA
 03 04 0     0296   DOT   F2440 12,0048,1     03 . MULTIPLICATION
 03 05 0     0297   RPAR  F2440 00,0000,3     04 ) RIGHT PARENTHESIS
 03 06 0     0298   CRD   F2441 41,GCRD,1     05 MOD COMMA
 03 07 0     0299   CRE   F2443 00,GCRE,1     06 EITHER
 03 08 0     0300   CRF   F2441 00,GCRF,1     07 ARRAY DECLARATION
 03 09 0     0301   CRG   F2442 00,GCRG,1     08 ARRAY DECLARATION
 03 10 0     0302   CRH   F2442 00,GCRH,1     09 SWITCH
 03 11 0     0303   PLUS  F2440 10,0000,1     10 + ADDITION
 03 12 0     0304   CRI   F2443 00,GCRI,1     11 INPUT OR OUTPUT
 03 13 0     0305   CRJ   F2442 00,GCRJ,1     12 INPUT LABEL COMMA
 03 14 0     0306   SMCLN F2446 00,SEMI,5     13 $ SEMICOLON
 03 15 0     0307   EXPN  F2441 14,GEXPN,1    14 * EXPONENTIATION
 03 16 0     0308   CRK   F2443 00,GCRK,1     15 OUTPUT LABEL COMMA
 03 17 0     0309   TEMP1 CNST  0                NOT USED
 03 18 0     0310   CRM   F2443 00,GCRM,1     17 MONITOR
 03 19 0     0311   CRN   F2441 00,GCRN,1     18 PARAMETRIC ARRAY
 03 20 0     0312   CRO   F2441 41,GCRO,1     19 FUNCTION CALL
 03 21 0     0313   HYPH  F2443 14,GHYPH,1    20 - NEGATION
 03 22 0     0314   SOLD  F2440 11,0024,1     21 / DIVISION
 03 23 0     0315   CRP   F2443 00,GCRP,1     22 PROCEDURE
 03 24 0     0316   KOMA  F2446 00,COMMA,5    23 , COMMA
 03 25 0     0317   LPAR  F2440 00,0000,2     24 ( LEFT PARENTHESIS
 03 26 0     0318   CRQ   F2443 00,GCRQ,1     25 PROCEDURE
 03 27 0     0319   CRR   F2441 40,GCRR,1     26 ARRAY
 03 28 0     0320   CRS   F2443 00,GCRS,1     27 SUBROUTINE
 03 29 0     0321   CRT   F2442 00,GCRT,1     28 GO TO
 03 30 0     0322   CRU   F2442 00,GCRU,1     29 UNTIL
 03 31 0     0323   CRV   F2443 00,GCRV,1     30 SEGMENT
 03 32 0     0324   CRW   F2443 00,GCRW,1     31 OTHERWISE
 03 33 0     0325   CRX   F2443 00,GCRX,1     32 FOR
 03 34 0     0326   SBST  F2446 00,EQUL,5     33 = ASSIGNMENT
 03 35 0     0327   CRY   F2442 00,GCRY,1     34 FIX
 03 36 0     0328   CRZ   F2442 00,GCRZ,1     35 STOP
 03 37 0     0329   TEMP3 CNST  0                NOT USED
 03 38 0     0330   BREF  F2445 00,0000,1     37 BACKWARD REFERENCE
 03 39 0     0331   TOP   CNST  0                NOT USED
 03 40 0     0332   CWEND F2446 00,END,1      39 END
 03 41 0     0333   CWNDX F2446 00,NDXMD,4    40 ARRAY CALL
 03 42 0     0334   CWARD F2446 00,ARDEC,1    41 ARRAY DECLARATION
 03 43 0     0335   CWEMP F2446 00,EMPTY,5    42 EMPTY SUBSCRIPT
 03 44 0     0336   CWLAB F2446 00,LABMD,4    43 LABEL IN DECLARATION
 03 45 0     0337   CWAPM F2446 00,ARAPM,1    44 ARRAY PARAMETER
 03 46 0     0338   CWCLN F2446 00,FUNMD,4    45 FUNCTION,PROCEDURE CALL
 03 47 0     0339   BOR   F2440 22,0203,1     46 BOOLEAN OR
 03 48 0     0340   OPIF  F2442 00,GIF,1      47 IF
 03 49 0     0341   RGEQ  F2448 01,0024,1     48 GEQ
 03 50 0     0342   RLEQ  F2448 01,0012,1     49 LEQ
 03 51 0     0343   OPMAX F2440 00,0100,1     50 MAX
 03 52 0     0344   OPMIN F2440 00,0112,1     51 MIN
 03 53 0     0345   CROY  F2443 22,GCROY,1    52 TRACE

                                              VARIOUS MODES
 03 56 0     0346   ARAMD F244  0,ARACM,ARRAY ARRAY DECLARATION MODE
 03 57 0     0347   ARFMD F244  0,ARFCM,ARFCM ARRAY-FILL MODE
 03 58 0     0348   DCLMD DEFN  *             TYPE DECLARATION MODES
 03 59 0     0348   INTMD F244  0,DCLCM,INTG  INTEGER DECLARATION MODE
 03 60 0     0349   FLTMD F244  0,DCLCM,FLTG  FLOATING DECLARATION MODE
003 61 0     0350   FORMD F244  1,FORCM,FOR   FOR MODE (PROCESSING ITERATION LIST)
 03 62 0     0351   FRMMD F2449 0,FRMCM,FRMT  FORMAT DECLARATION MODE
003 63 0     0352   FUNMD F244  0,FUNCM,COLON FUNCTION MODE (SETTING UP PARAMETERS)
 03 64 0     0353   INNMD F2449 1,PUTCM,INPUT INPUT DECLARATION MODE
 03 65 0     0354   MAXMD F244  0,MAXCM,NORM  MAX MODE
 03 66 0     0355   MINMD F244  0,MINCM,NORM  MIN MODE
 03 67 0     0356   MODMD F244  0,MODCM,NORM  MOD MODE
003 68 0     0357   NDXMD F244  0,NDXCM,INDEX INDEX MODE (PROCESSING SUBSCRIPTS)
 03 69 0     0358   NRMMD F2441 10,0,0        NORMAL MODE
 03 70 0     0359   OUTMD F2449 1,PUTCM,OUTPT OUTPUT DECLARATION MODE
 03 71 0     0360   PRCMD F244  0,PRCCM,PROCD PROCEDURE DECLARATION MODE
 03 72 0     0361   SWMD  F244  0,SWCM,SWTCH  SWITCH MODE
 03 73 0     0362   FNCMD F244  0,PRCCM,FUNC  FUNCTION DECLARATION MODE
003 74 0     0363   LABMD F2442 0,LABCM,LABEL LABEL MODE (OUTSIDE OF I-O,FORMAT MODES)
 03 75 0     0364   EXTMD F2448 1,FRMCM,EXTRN EXTERNAL MODE
 03 76 0     0365   MEMMD F2447 1,ARACM,MEMST TRACE MODE

                                              RESERVED WORDS
 03 79 0     0366   SUBGN F4246 7001,0,SUBR
 03 80 0     0367         CNST  $SUBROUTINE$
 03 81 0     0369   UNTGN F4246 7001,0,UNTIL  (DO A SLA 4 ON THESE CODES)
003 82 0     0370         CNST  $UNTIL$         TO GET THEIR TRUE SIGNIFICANCE)
 03 83 0     0371   INPGN F4246 7004,0,INNMD
 03 84 0     0372         CNST  $INPUT$
 03 85 0     0373   RETGN F4246 7001,0,RETN
 03 86 0     0374         CNST  $RETURN$
 03 87 0     0376   IFGN  F4246 7691,0,IF
 03 88 0     0377         CNST  $IF$
 03 89 0     0378   IMPGN F4240 7001,20,1209
 03 90 0     0379         CNST  $IMPL$
 03 91 0     0380   ORGN  F4246 7001,0,OR
 03 92 0     0381         CNST  $OR$
 03 93 0     0382   GOGN  F4246 7001,0,GO
 03 94 0     0383         CNST  $GO$
 03 95 0     0384   OUTGN F4246 7004,0,OUTMD
 03 96 0     0385         CNST  $OUTPUT$
 03 97 0     0387   EITGN F4246 7001,0,ETHR
 03 98 0     0388         CNST  $EITHER$
 03 99 0     0390   BOOGN F4246 7004,0,INTMD
 04 00 0     0391         CNST  $BOOLEAN$
 04 01 0     0393   COMGN F4246 7001,0,COMNT
 04 02 0     0394         CNST  $COMMENT$
 04 03 0     0396   LEQGN F4248 7001,01,12
 04 04 0     0397         CNST  $LEQ$
 04 05 0     0398   FORMG F4246 7004,0,FRMMD
 04 06 0     0399         CNST  $FORMAT$
 04 07 0     0401   MINGN F4246 7404,0,MINMD
 04 08 0     0402         CNST  $MIN$
 04 09 0     0403   NEQGN F4248 7001,01,6
 04 10 0     0404         CNST  $NEQ$
 04 11 0     0405   FLOGN F4246 7004,0,FLTMD
 04 12 0     0406         CNST  $FLOATING$
 04 13 0     0408   INTGN F4246 7004,0,INTMD
 04 14 0     0409         CNST  $INTEGER$
 04 15 0     0411   FORGN F4246 7004,0,FORMD
 04 16 0     0412         CNST  $FOR$
 04 17 0     0413   PROGN F4246 7004,0,PRCMD
 04 18 0     0414         CNST  $PROCEDURE$
 04 19 0     0416   MAXGN F4246 7404,0,MAXMD
 04 20 0     0417         CNST  $MAX$
 04 21 0     0418   FINGN F4246 7001,0,FINSH
 04 22 0     0419         CNST  $FINISH$
 04 23 0     0421   PCSGN F4242 7401,41,GPCS
 04 24 0     0422         CNST  $PCS$
 04 25 0     0423   SEGGN F4246 7001,0,SGMT
 04 26 0     0424         CNST  $SEGMENT$
 04 27 0     0426   OVEGN F4246 7001,0,OVRLY
 04 28 0     0427         CNST  $OVERLAY$
 04 29 0     0429   ENTGN F4246 7001,0,ENTER
 04 30 0     0430         CNST  $ENTER$
 04 31 0     0431   GTRGN F4248 7001,01,18
 04 32 0     0432         CNST  $GTR$
 04 33 0     0433   ARRGN F4246 7004,0,ARAMD
 04 34 0     0434         CNST  $ARRAY$
 04 35 0     0435   OTHGN F4246 7005,0,WISE
 04 36 0     0436         CNST  $OTHERWISE$
 04 37 0     0438   FUNGN F4246 7004,0,FNCMD
 04 38 0     0439         CNST  $FUNCTION$
 04 39 0     0441   NOTGN F4242 7001,24,GBNOT
 04 40 0     0442         CNST  $NOT$
 04 41 0     0443   LSSGN F4248 7001,01,30
 04 42 0     0444         CNST  $LSS$
 04 43 0     0445   MONGN F4246 7001,0,MONT
 04 44 0     0446         CNST  $MONITOR$
 04 45 0     0448   SWIGN F4246 7004,0,SWMD
 04 46 0     0449         CNST  $SWITCH$
 04 47 0     0451   STOGN F4246 7001,0,STOP
 04 48 0     0452         CNST  $STOP$
 04 49 0     0453   FIXGN F244  06,FIX,0
 04 50 0     0454   GSEG  F244  14,SEGGN,0
 04 51 0     0455   GNARR F244  10,ARRGN,0
 04 52 0     0456   ANDGN F4240 7001,23,0200
 04 53 0     0457         CNST  $AND$
 04 54 0     0458   EXTGN F4246 7004,0,EXTMD
 04 55 0     0459         CNST  $EXTERNAL$
 04 56 0     0461   REAL  F4246 7004,00,FLTMD
 04 57 0     0462         CNST  $REAL $
 04 58 0     0463   DUMPE F4246 7001,0,DUMP
 04 59 0     0464         CNST  $DUMP$
 04 60 0     0465   MEMRY F4246 7004,0,MEMMD
 04 61 0     0466         CNST  $TRACE$
 04 62 0     0467   STAX  F2446 73,0199,0     THERE ARE MORE RESERVED WORD CODES
 04 63 0     0468         CNST  $STATEMENT$   SCATTERED THROUGH TABSC


 04 66 0     0470   TABSC F4248 8888,30,R1            AA
 04 67 0     0471         F4248 8888,30,R1            AN     TABLE OF ADMISSIBLE
004 68 0     0472         F4248 8888,30,R3            A)     CHARACTER PAIRS AND
004 69 0     0473         F4248 8888,30,R2            A(     CORRESPONDING R-ROUTINES
 04 70 0     0474         F4248 8888,30,R17           A,     IN SCANNER
 04 71 0     0475         F4248 8888,30,R3            A$
 04 72 0     0476         F4248 8888,30,R3            A,
 04 73 0     0477         F4248 8888,30,R3            A*
 04 74 0     0478         F4248 8888,30,R11           A-
 04 75 0     0479         F4248 8888,30,R3K           AP     A=ALPHA
 04 76 0     0480         F4248 8888,30,R4            NA     N=NUMBER
004 77 0     0481         F4248 8888,30,R5            NN     P=PLUS,DIVIDE,OR EQUALS
 04 78 0     0482         F4248 8888,30,R6            N)
 04 79 0     0483         F4248 8888,30,R19           N(
 04 80 0     0484         F4248 8888,30,R20           N.
 04 81 0     0485         F4248 8888,30,R6            N$
 04 82 0     0486         F4248 8888,30,R6            N,
 04 83 0     0487         F4248 8888,30,R22           N*
 04 84 0     0488         F4248 8888,30,R18           N-
 04 85 0     0489         F4248 8888,30,R6            NP
 04 86 0     0490         F4248 8888,30,R7P           )A
 04 87 0     0491         F4248 8888,30,R21           )N
 04 88 0     0492         F4248 8888,30,R8            ))
 04 89 0     0493         F4248 8888,30,R10           )(
 04 90 0     0494         F4248 8888,30,R8            ).
 04 91 0     0495         F4248 8888,30,R8            )$
 04 92 0     0496         F4248 8888,30,R8            ),
 04 93 0     0497         F4248 8888,30,R8            )*
 04 94 0     0498         F4248 8888,30,R12           )-
 04 95 0     0499         F4248 8888,30,R8            )P
 04 96 0     0500         F4248 8888,30,R7            (A
 04 97 0     0501         F4248 8888,30,R23           (N
 04 98 0     0502         F4248 8888,30,R25           ()
 04 99 0     0503         F4248 8888,30,R8            ((
 05 00 0     0504         F244  14,COMGN,0            (. ILLEGAL
 05 01 0     0505         F4248 8888,30,R26           ($
 05 02 0     0506         F4248 8888,30,R25           (,
 05 03 0     0507         F244  06,LEQGN,0            (* ILLEGAL
 05 04 0     0508         F4248 8888,30,R8            (-
 05 05 0     0509         F4248 8888,30,R9            (P
 05 06 0     0510         F4248 8888,30,R7            .A
 05 07 0     0511         F4248 8888,30,R23           .N
 05 08 0     0512         F244  06,NEQGN,0            .) ILLEGAL
 05 09 0     0513         F4248 8888,30,R8            .(
 05 10 0     0514         F244  14,INTGN,TABSC+72     .. ILLEGAL
 05 11 0     0515         F244  18,PROGN,0            .$ ILLEGAL
 05 12 0     0516         F244  12,FINGN,*+1          ., ILLEGAL
 05 13 0     0517         F244  06,PCSGN,FIXGN        .* ILLEGAL
 05 14 0     0518         F4248 8888,30,R8            .-
 05 15 0     0519         F4248 8888,30,R9            .P
 05 16 0     0520         F4248 8888,30,R7            $A
 05 17 0     0521         F4248 8888,30,R23           $N
 05 18 0     0522         F4248 8888,30,R27           $)
 05 19 0     0523         F4248 8888,30,R8            $(
 05 20 0     0524         F244  20,SUBGN,0            $. ILLEGAL
 05 21 0     0525         F4248 8888,30,R26           $$
 05 22 0     0526   SIGGN F4242 7401,41,GSIGN         $, ILLEGAL
 05 23 0     0527         CNST  $SIGN$                $* ILLEGAL
 05 24 0     0528         F4248 8888,30,R8            $-
 05 25 0     0529         F4248 8888,30,R9            $P
 05 26 0     0530         F4248 8888,30,R7            ,A
 05 27 0     0531         F4248 8888,30,R23           ,N
 05 28 0     0532         F4248 8888,30,R25           ,)
 05 29 0     0533         F4248 8888,30,R8            ,(
 05 30 0     0534   EQIGN F4240 7001,21,0206          ,. ILLEGAL
 05 31 0     0535         CNST  $EQUIV$               ,$ ILLEGAL
 05 32 0     0536         F4248 8888,30,R25           ,,
 05 33 0     0537         F244  08,SIGGN,0            ,* ILLEGAL
 05 34 0     0538         F4248 8888,30,R8            ,-
 05 35 0     0539         F4248 8888,30,R9            ,P
 05 36 0     0540         F4248 8888,30,R7            *A
 05 37 0     0541         F4248 8888,30,R23           *N
 05 38 0     0542         F2441 10,FONE,TABSC+82      *) ILLEGAL
 05 39 0     0543         F4248 8888,30,R8            *(
 05 40 0     0544   TOGN  F4246 7001,0,TO             *. ILLEGAL
 05 41 0     0545         CNST  $TO$                  *$ ILLEGAL
 05 42 0     0546   BEGGN F4240 7002,0,0              *, ILLEGAL
 05 43 0     0547         CNST  $BEGIN$               ** ILLEGAL
 05 44 0     0548         F4248 8888,30,R8            *-
 05 45 0     0549         F4248 8888,30,R9            *P
 05 46 0     0550         F4248 8888,30,R7            -A
 05 47 0     0551         F4248 8888,30,R23           -N
 05 48 0     0552         F244  10,FLOAT,0            -) ILLEGAL
 05 49 0     0553         F4248 8888,30,R8            -(
 05 50 0     0554   ENDGN F4246 7001,0,END            -. ILLEGAL
 05 51 0     0555         CNST  $END$                 -$ ILLEGAL
 05 52 0     0556   ABSGN F4242 7401,41,GABSF         -, ILLEGAL
 05 53 0     0557         CNST  $ABS$                 -* ILLEGAL
 05 54 0     0558   GEQGN F4248 7001,01,0024          -- ILLEGAL
 05 55 0     0559         CNST  $GEQ$                 -P ILLEGAL
 05 56 0     0560         F4248 8888,30,R7            PA
 05 57 0     0561         F4248 8888,30,R23           PN
 05 58 0     0562         F2440 08,STOGN,0            P) ILLEGAL
 05 59 0     0563         F4248 8888,30,R8            P(
 05 60 0     0564   MODGN F4246 7404,0,MODMD          P. ILLEGAL
 05 61 0     0565         CNST  $MOD$                 P$ ILLEGAL
 05 62 0     0566   EQLGN F4248 7001,01,0             P, ILLEGAL
 05 63 0     0567         CNST  $EQL$                 P* ILLEGAL
 05 64 0     0568         F4248 8888,30,R8            P-
 05 65 0     0569         F4248 8888,30,R9            PP


 05 68 0     0570   VOCAB DEFN  *             TABLE OF 220 OPERATIONS WE CAN DO
 05 69 0     0570   CADV1 CNST  00000100001   01
 05 70 0     0571   CADV2 CNST  00000100002   02
 05 71 0     0572   CADX1 CNST  00000100004   03
  5 72 0     0573   CADF1 CNST  00000100005   04
 05 73 0     0574   CADL1 CNST  60000100001   05
 05 74 0     0575   CSUV1 CNST  00000110001   06      SIGN OF 0,1, OR 3..
 05 75 0     0576   CSUV2 CNST  00000110002   07      ADDRESS I IS TO BE REPLACED BY
 05 76 0     0577   ADDV1 CNST  00000120001   08      V(I)  AND IF V(I) IS AN
 05 77 0     0578   ADDV2 CNST  00000120002   09      ARRAY WE MUST ALSO COMPUTE
 05 78 0     0579   ADDL1 CNST  60000120001   10      ITS SUBSCRIPT AND LOAD B
  5 79 0     0580   FADV1 CNST  00000220001   11
 05 80 0     0581   FADV2 CNST  00000220002   12
 05 81 0     0582   SUBV1 CNST  00000130001   13      SIGN OF 1.. DONT RELEASE
 05 82 0     0583   SUBV2 CNST  00000130002   14      TEMPORARY STORAGE CELL.
 05 83 0     0584   SUBX1 CNST  00000130004   15      IF V(I) IS AN ARRAY DONT RELEASE
 05 84 0     0585   FSUV1 CNST  00000230001   16      THE INCREMENT WORD
 05 85 0     0586   FSUV2 CNST  00000230002   17
 05 86 0     0587   MULV1 CNST  00000140001   18
 05 87 0     0588   MULV2 CNST  00000140002   19      SIGN OF 3.. THIS IS A PSEUDO-OP.
 05 88 0     0589   FMUV1 CNST  00000240001   20      WE GET READY TO CALCULATE V(I)
 05 89 0     0590   FMUV2 CNST  00000240002   21      BUT DONT ACTUALLY FINISH
 05 90 0     0591   DIVV1 CNST  00000150001   22
 05 91 0     0592   DIVV2 CNST  00000150002   23
 05 92 0     0593   FDVV1 CNST  00000250001   24      SIGN OF 4..  ADDRESS IS ABSOLUTE
 05 93 0     0594   SHIFT CNST  40000000000   25      SIGN OF 5..  SAME, B-MODIFIED
 05 94 0     0595   CFAV1 CNST  10000180001   26
 05 95 0     0596   CFAV2 CNST  10000180002   27
 05 96 0     0597   EXTV1 CNST  00000170001   28      SIGN OF 6..  ADDRESS IS RELATIVE
 05 97 0     0598   EXTV2 CNST  00000170002   29      TO LOCATION
 05 98 0     0599   STAV1 CNST  00000400001   30
  5 99 0     0600   STAV2 CNST  00000400002   31
 06 00 0     0601   STAT1 CNST  10000400001   32      SIGN OF 7,8, OR 9..
 06 01 0     0602   STAT2 CNST  10000400002   33      ADDRESS IS BLANKED OUT
 06 02 0     0603   STAL2 CNST  61110400002   34
  6 03 0     0604   STAI  CNST  40410400000   35
 06 04 0     0605   STAAB CNST  50000400000   36      SIGN OF 8.. FORWARD REFERENCE
 06 05 0     0606   BUNV1 CNST  00000300001   37      IS PUT ON STACK
 06 06 0     0607   BUNV2 CNST  00000300002   38      SIGN OF 9..  SAME, INCREMENTED
 06 07 0     0608   BUNV3 CNST  00000300003   39
  6 08 0     0609   BUNZ  CNST  70000300400   40
  6 09 0     0610   BUNBZ CNST  50000300000   41
  6 10 0     0611   BUNI  CNST  40000300000   42
  6 11 0     0612   BUN3V CNST  00000300003   43
  6 12 0     0613   BUNL2 CNST  60000300002   44
 06 13 0     0614   BSALN CNST  60001330003   45
 06 14 0     0615   BSALP CNST  60000330003   46
 06 15 0     0616   BZAL2 CNST  60000360002   47
 06 16 0     0617   BZAL3 CNST  60000360003   48
 06 17 0     0618   BZAL4 CNST  60000360004   49
 06 18 0     0619   BNZAF CNST  80101369999   50
  6 19 0     0620   NOPZ  CNST  70000010000   51
  6 20 0     0621   NOPV1 CNST  00000100001   52
  6 21 0     0622   NOPV2 CNST  00000010002   53
 06 22 0     0623   NOPAV F424  0,01,TOP-V    54
  6 23 0     0624   SLT10 CNST  40001490010   55
 06 24 0     0625   SLTZ  CNST  40001490000   56
 06 25 0     0626   SLT30 CNST  40001490030   57
 06 26 0     0627   SRT10 CNST  40001480010   58
  6 27 0     0628   SRTZ  CNST  40001480000   59
 06 28 0     0629   SLA9  CNST  40000490009   60
  6 29 0     0630   LDBI  CNST  40000420000   61
 06 30 0     0631   LDBL0 CNST  60000420000   62
 06 31 0     0632   LBCV1 CNST  00001420001   63
 06 32 0     0633   DLBV2 CNST  04400280002   64
 06 33 0     0634   LSA0  CNST  40000430000   65
 06 34 0     0635   LSA1  CNST  40001430000   66
 06 35 0     0636   LSA9  CNST  40009430000   67
  6 36 0     0637   STPZ  CNST  70000440000   68
  6 37 0     0638   STPV2 CNST  00000440002   69
  6 38 0     0639   STPV3 CNST  00000440003   70
  6 39 0     0640   BCSL2 CNST  60000380002   71
  6 40 0     0641   CLA   CNST  40001450002   72
  6 41 0     0642   IBBI  CNST  40002200000   73
  6 42 0     0643   LDRV1 CNST  00000410001   74
 06 43 0     0644   HLTZ  CNST  40137007310   75
 06 44 0     0645   CAAV1 CNST  00001100001   76
 06 45 0     0646   CSAV1 CNST  00001110001   77
 06 46 0     0647   NDXV1 CNST  30000000001   78
 06 47 0     0648   NDXV2 CNST  30000000002   79
 06 48 0     0649   BCHL2 CNST  60000340002   80
 06 49 0     0650   BCLL2 CNST  60001340002   81
 06 50 0     0651   BCUL2 CNST  60011350002   82
 06 51 0     0652   ADDX1 CNST  00000120004   83
  6 52 0     0653   CLLV2 CNST  00000460002   84
 06 53 0     0654   BZAFR CNST  80000369999   85
  6 54 0     0655   BSAFN CNST  80001339999   86
 06 55 0     0656   BSAFP CNST  80000339999   87
 06 56 0     0657   BUNFR CNST  80000309999   88
 06 57 0     0658   STPA  F4244 0,44,LODOX    89
 06 58 0     0659   BUNA  F4244 0,30,LODOV    90
 06 59 0     0660   BF1LR CNST  60101360002   91
 06 60 0     0661   BUNFB CNST  90000309999   92
 06 61 0     0662   STPFR CNST  80000449999   93
 06 62 0     0663   STAT3 CNST  10000400003   94
  6 63 0     0664   LDBV9 CNST  00000420009   95
  6 64 0     0665   CSUV4 CNST  00000110004   96
 06 65 0     0666   CLRO  CNST  40002450000   97
 06 66 0     0667   BOF2  CNST  61111310002   98

                                              MACRO-OPERATION TABLES
 06 69 0     0668         LOCN  *           OP V1 V2 RESULT
 06 70 0     0668   GTAB0 CNST  10900000000  + A  V  X  ADDV2     X=FIXED
 06 71 0     0669         CNST  11400000000  + A  V- X  SUBV2     F=FLOATING
 06 72 0     0670         CNST  31400000000  + A- V  X- SUBV2     A=IN ACCUMULATOR
006 73 0     0671         CNST  30900000000  + A- V- X- ADDV2     V=NOT IN ACCUMULATOR
 06 74 0     0672         CNST  10800000000  + V  A  X  ADDV1     -=NEGATED
 06 75 0     0673         CNST  31300000000  + V  A- X- SUBV1
 06 76 0     0674         CNST  11300000000  + V- A  X  SUBV1
 06 77 0     0675         CNST  30800000000  + V- A- X- ADDV1
 06 78 0     0676         CNST  10109000000  + V  V  X  CADV1 ADDV2
 06 79 0     0677         CNST  10708000000  + V  V- X  CSUV2 ADDV1
 06 80 0     0678         CNST  10213000000  + V- V  X  CADV2 SUBV1
 06 81 0     0679         CNST  10713000000  + V- V- X  CSUV2 SUBV1
 06 82 0     0680         CNST  21200000000  + A  V  F  FADV2
 06 83 0     0681         CNST  21700000000  + A  V- F  FSUV2
 06 84 0     0682         CNST  41700000000  + A- V  F- FSUV2
 06 85 0     0683         CNST  41200000000  + A- V- F- FADV2
 06 86 0     0684         CNST  21100000000  + V  A  F  FADV1
 06 87 0     0685         CNST  41600000000  + V  A- F- FSUV1
 06 88 0     0686         CNST  21600000000  + V- A  F  FSUV1
 06 89 0     0687         CNST  41100000000  + V- A- F- FADV1
 06 90 0     0688         CNST  20112000000  + V  V  F  CADV1 FADV2
 06 91 0     0689         CNST  20711000000  + V  V- F  CSUV2 FADV1
 06 92 0     0690         CNST  20216000000  + V- V  F  CADV2 VSUV1
 06 93 0     0691         CNST  20176000000  + V- V- F  CSUV2 FSUV1
 06 94 0     0692         CNST  13202582200  / A  V  X  STAT1 CADV2 SRT10 DIVV1
 06 95 0     0693         CNST  13207582200  / A  V- X  STAT1 CSUV2 SRT10 DIVV1
 06 96 0     0694         CNST  13207582200  / A- V  X  STAT1 CSUV2 SRT10 DIVV1
 06 97 0     0695         CNST  13202582200  / A- V- X  STAT1 CADV2 SRT10 DIVV1
 06 98 0     0696         CNST  15822000000  / V  A  X  SRT10 DIVV1
 06 99 0     0697         CNST  35822000000  / V  A- X- SRT10 DIVV1
 07 00 0     0698         CNST  35822000000  / V- A  X- SRT10 DIVV1
 07 01 0     0699         CNST  15822000000  / V- A- X  SRT10 DIVV1
 07 02 0     0700         CNST  10258220000  / V  V  X  CADV2 SRT10 DIVV1
 07 03 0     0701         CNST  10758220000  / V  V- X  CSUV2 SRT10 DIVV1
 07 04 0     0702         CNST  10758220000  / V- V  X  CSUV2 SRT10 DIVV1
 07 05 0     0703         CNST  10258220000  / V- V- X  CADV2 SRT10 DIVV1
 07 06 0     0704         CNST  23202972400  / A  V  F  STAT1 CADV2 CLR   FDVV1
 07 07 0     0705         CNST  23207972400  / A  V- F  STAT1 CSUV2 CLR   FDVV1
 07 08 0     0706         CNST  23207972400  / A- V  F  STAT1 CSUV2 CLR   FDVV1
 07 09 0     0707         CNST  23202972400  / A- V- F  STAT1 CADV2 CLR   FDVV1
 07 10 0     0708         CNST  29724000000  / V  A  F  CLR   FDVV1
 07 11 0     0709         CNST  49724000000  / V  A- F- CLR   FDVV1
 07 12 0     0710         CNST  4972400000   / V- A  F- CLR   FDVV1
 07 13 0     0711         CNST  29724000000  / V- A- F  CLR   FDVV1
 07 14 0     0712         CNST  20297240000  / V  V  F  CADV2 CLR   FDVV1
 07 15 0     0713         CNST  20797240000  / V  V- F  CSUV2 CLR   FDVV1
 07 16 0     0714         CNST  20797240000  / V- V  F  CSUV2 CLR   FDVV1
 07 17 0     0715         CNST  20297240000  / V- V- F  CADV2 CLR   FDVV1
 07 18 0     0716         CNST  11955000000  . A  V  X  MULV2 SLT10
 07 19 0     0717         CNST  31955000000  . A  V- X- MULV2 SLT10
 07 20 0     0718         CNST  31955000000  . A- V  X- MULV2 SLT10
 07 21 0     0719         CNST  11955000000  . A- V- X  MULV2 SLT10
 07 22 0     0720         CNST  11855000000  . V  A  X  MULV1 SLT10
 07 23 0     0721         CNST  31855000000  . V  A- X- MULV1 SLT10
 07 24 0     0722         CNST  31855000000  . V- A  X- MULV1 SLT10
 07 25 0     0723         CNST  11855000000  . V- A- X  MULV1 SLT10
 07 26 0     0724         CNST  10218550000  . V  V  X  CADV2 MULV1 SLT10
 07 27 0     0725         CNST  10718550000  . V  V- X  CSUV2 MULV1 SLT10
 07 28 0     0726         CNST  10718550000  . V- V  X  CSUV2 MULV1 SLT10
 07 29 0     0727         CNST  10218550000  . V- V- X  CADV2 MULV1 SLT10
 07 30 0     0728         CNST  22100000000  . A  V  F  FMUV2
 07 31 0     0729         CNST  42100000000  . A  V- F- FMUV2
 07 32 0     0730         CNST  42100000000  . A- V  F- FMUV2
 07 33 0     0731         CNST  22100000000  . A- V- F  FMUV2
 07 34 0     0732         CNST  22000000000  . V  A  F  FMUV1
 07 35 0     0733         CNST  42000000000  . V  A- F- FMUV1
 07 36 0     0734         CNST  42000000000  . V- A  F- FMUV1
 07 37 0     0735         CNST  22000000000  . V- A- F  FMUV1
 07 38 0     0736         CNST  20220000000  . V  V  F  CADV2 FMUV1
 07 39 0     0737         CNST  20720000000  . V  V- F  CSUV2 FMUV1
 07 40 0     0738         CNST  20720000000  . V- V  F  CUSV2 FMUV1
 07 41 0     0739         CNST  20220000000  . V- V- F  CADV2 FMUV1

 07 43 0     0740   GTAB1 CNST  52780020000 MAX A  V    CFAV2 BCHL2 CADV2
007 44 0     0741         CNST  53207268001 MAX A  V-   STAT1 CSUV2 CFAV1 BCHL2 CADV1
 07 45 0     0742         CNST  53206278002 MAX A- V    STAT1 CSUV1 CFAV2 BCHL2 CADV2
 07 46 0     0743         CNST  62781020000 MAX A- V- - CFAV2 BCLL2 CADV2
 07 47 0     0744         CNST  52680010000 MAX V  A    CFAV1 BCHL2 CADV1
 07 48 0     0745         CNST  53307268001 MAX V  A-   STAT2 CSUV2 CFAV1 BCHL2 CADV1
 07 49 0     0746         CNST  53306278002 MAX V- A    STAT2 CSUV1 CFAV2 BCHL2 CADV2
 07 50 0     0747         CNST  62681010000 MAX V- A- - CFAV1 BCLL2 CADV1
 07 51 0     0748         CNST  50127800200 MAX V  V    CADV1 CFAV2 BCHL2 CADV2
 07 52 0     0749         CNST  50726800100 MAX V  V-   CSUV2 CFAV1 BCHL2 CADV1
 07 53 0     0750         CNST  50627800200 MAX V- V    CSUV1 CFAV2 BCHL2 CADV2
 07 54 0     0751         CNST  60127810200 MAX V- V- - CADV2 CFAV2 BCHL2 CADV2
 07 55 0     0752         CNST  52781020000 MIN A  V    CFAV2 BCLL2 CADV2
007 56 0     0753         CNST  53207268101 MIN A  V-   STAT1 CSUV2 CFAV1 BCLL2 CADV1
007 57 0     0754         CNST  53206278102 MIN A- V    STAT1 CSUV1 CFAV2 BCLL2 CADV2
 07 58 0     0755         CNST  62780020000 MIN A- V- - CFAV2 BCHL2 CADV2
 07 59 0     0756         CNST  52681010000 MIN V  A    CFAV1 BCLL2 CADV1
007 60 0     0757         CNST  53307268101 MIN V  A-   STAT2 CSUV2 CFAV1 BCLL2 CADV1
007 61 0     0758         CNST  53306278102 MIN V- A    STAT2 CSUV1 CFAV2 BCLL2 CADV2
 07 62 0     0759         CNST  62680010000 MIN V- A- - CFAV1 BCHL2 CADV1
 07 63 0     0760         CNST  50127810200 MIN V  V    CADV1 CFAV2 BCLL2 CADV2
 07 64 0     0761         CNST  50726810100 MIN V  V-   CSUV2 CFAV1 BCLL2 CADV1
 07 65 0     0762         CNST  50627810200 MIN V- V    CSUV1 CFAV2 BCLL2 CADV2
 07 66 0     0763         CNST  60127800200 MIN V- V- - CADV1 CFAV2 BCLL2 CADV2


 07 69 0     0764   GTAB2 CNST  12900000000 AND A  B  X EXTV2
 07 70 0     0765         CNST  12800000000 AND V  A  X EXTV1
 07 71 0     0766         CNST  10129000000 AND V  V  X CADV1 EXTV2
 07 72 0     0767         CNST  17991020000 OR  A  V  X NDXV2 B1AL2 CADV2
 07 73 0     0768         CNST  17891010000 OR  V  A  X NDXV1 B1AL2 CADV1
 07 74 0     0769         CNST  10278910100 OR  V  V  X NDXV1 B1AL2 CADV1
 07 75 0     0770         CNST  10915650000 EQV A  V  X ADDV2 SUBX1 LSA0
 07 76 0     0771         CNST  10815650000 EQV V  A  X ADDV1 SUBX1 LSA0
 07 77 0     0772         CNST  10109156500 EQV V  V  X CADV1 ADDV2 SUBX1 LSA0
 07 78 0     0773         CNST  12782030000 IMP A  V  X CFAV2 BCUL2 CADX1
 07 79 0     0774         CNST  17883910100 IMP V  A  X NDXV1 ADDX1 B1AL2 CADV1
 07 80 0     0775         CNST  10127820300 IMP V  V  X CADV1 CFAV2 BCUL2 CADX1


 07 83 0     0776   GTAB3 CNST  14872440300 EQL    ()   BZAL3 CLA   BUNL2 CADX1
 07 84 0     0777         CNST  14872440300 EQL  - ()   BZAL3 CLA   BUNL2 CADX1
 07 85 0     0778         CNST  14788000000 EQL    IF   BZAL2 BUNFR
 07 86 0     0779         CNST  14788000000 EQL  - IF   BZAL2 BUNFR
 07 87 0     0780         CNST  18500000000 EQL    UN   BZAFR
 07 88 0     0781         CNST  18500000000 EQL  - UN   BZAFR
 07 89 0     0782         CNST  14703000000 NEQ    ()   BZAL2 CADX1
 07 90 0     0783         CNST  14703000000 NEQ  - ()   BZAL2 CADX1
 07 91 0     0784         CNST  18500000000 NEQ    IF   BZAFR
 07 92 0     0785         CNST  18500000000 NEQ  - IF   BZAFR
 07 93 0     0786         CNST  14788000000 NEQ    UN   BZAL2 BUNFR
 07 94 0     0787         CNST  14788000000 NEQ  - UN   BZAL2 BUNFR
007 95 0     0788         CNST  14945724403 LEQ    ()   BZAL4 BMAL3 CLA   BUNL2 CADX1
007 96 0     0789         CNST  14946724403 LEQ  - ()   BZAL4 BPAL3 CLA   BUNL2 CADX1
 07 97 0     0790         CNST  14787000000 LEQ    IF   BZAL2 BPAFR
 07 98 0     0791         CNST  14786000000 LEQ  - IF   BZAL2 BMAFR
 07 99 0     0792         CNST  18586000000 LEQ    UN   BZAFR BMAFR
 08 00 0     0793         CNST  18587000000 LEQ  - UN   BZAFR BPAFR
008 01 0     0794         CNST  14945034472 GTR    ()   BZAL4 BMAL3 CADX1 BUNL2 CLA
008 02 0     0795         CNST  14946034472 GTR  - ()   BZAL4 BPAL3 CADX1 BUNL2 CLA
 08 03 0     0796         CNST  18586000000 GTR    IF   BZAFR BMAFR
 08 04 0     0797         CNST  18587000000 GTR  - IF   BZAFR BPAFR
 08 05 0     0798         CNST  14787000000 GTR    UN   BZAL2 BPAFR
 08 06 0     0799         CNST  14786000000 GTR  - UN   BZAL2 BMAFR
008 07 0     0800         CNST  14946724403 GEQ    ()   BZAL4 BPAL3 CLA   BUNL2 CADX1
008 08 0     0801         CNST  14945724403 GEQ  - ()   BZAL4 BMAL3 CLA   BUNL2 CADX1
 08 09 0     0802         CNST  14786000000 GEQ    IF   BZAL2 BMAFR
 08 10 0     0803         CNST  14787000000 GEQ  - IF   BZAL2 BPAFR
 08 11 0     0804         CNST  18587000000 GEQ    UN   BZAFR BPAFR
 08 12 0     0805         CNST  18586000000 GEQ  - UN   BZAFR BMAFR
008 13 0     0806         CNST  14946034472 LSS    ()   BZAL4 BPAL3 CADX1 BUNL2 CLA
008 14 0     0807         CNST  14945034472 LSS  - ()   BZAL4 BMAL3 CADX1 BUNL2 CLA
 08 15 0     0808         CNST  18587000000 LSS    IF   BZAFR BPAFR
 08 16 0     0809         CNST  18586000000 LSS  - IF   BZAFR BMAFR
 08 17 0     0810         CNST  14786000000 LSS    UN   BZAL2 BMAFR
 08 18 0     0811         CNST  14787000000 LSS  - UN   BZAL2 BPAFR

 08 20 0     0812   COMP  DEFN  *-2     IJ-PAIRS FOR ARITH GENERATOR
008 21 0     0812         LOCN  *             V1  V2  X=FIX F=FLT A=ACC V=OPRND C=CONST
 08 22 0     0812         CNST  3000000000    XA  XV
 08 23 0     0813         CNST  1133000000    XA  FV
 08 24 0     0814         CNST  2630000000    XA  XC
 08 25 0     0815         CNST  1126330000    XA  FC
 08 26 0     0816   TEMP2 CNST  0000000000    (IMPOSSIBLE CASE)
 08 27 0     0817         CNST  7284007200    (IMPOSSIBLE CASE)
 08 28 0     0818         CNST  1224213400    FA  XV
 08 29 0     0819         CNST  3300000000    FA  FV  I=1 OR I=2..
 08 30 0     0820         CNST  2623330000    FA  XC  J=1 FLOAT V(I)
 08 31 0     0821         CNST  2633000000    FA  FC  J=2 STORE V(I) IN TEMP
 08 32 0     0822         CNST  3100000000    XV  XA  J=3 FLOAT CONSTANT V(I)
008 33 0     0823         CNST  2214113300    XV  FA  J=4 BRING V(I) INTO A REGISTER
008 34 0     0824         CNST  3200000000    XV  XV  J=5 CALC CONST OP CONST$ I=TYPE
008 35 0     0825         CNST  1411330000    XV  FV  J=6 CHECK IF V(I)=SPECIAL CONST
 08 36 0     0826         CNST  2632000000    XV  XC
 08 37 0     0827         CNST  1411263300    XV  FC
 08 38 0     0828         CNST  2134000000    FV  XA  I=3..
 08 39 0     0829         CNST  3400000000    FV  FA  J=0 V1 IS IN A, FIXED
 08 40 0     0830         CNST  2421340000    FV  XV  J=1 V2 IS IN A, FIXED
 08 41 0     0831         CNST  3500000000    FV  FV  J=2 NEITHER IN A, FIXED
 08 42 0     0832         CNST  2623350000    FV  XC  J=3 V1 IS IN A,FLOATING
 08 43 0     0833         CNST  2635000000    FV  FC  J=4 V2 IS IN A,FLOATING
008 44 0     0834         CNST  1631000000    XC  XA  J=5 NEITHER IS IN A, FLOATING
 08 45 0     0835         CNST  1613340000    XC  FA
 08 46 0     0836         CNST  1632000000    XC  XV
 08 47 0     0837         CNST  1613350000    XC  FV
 08 48 0     0838         CNST  1532000000    XC  XC
 08 49 0     0839         CNST  1325350000    XC  FC
 08 50 0     0840         CNST  2116340000    FC  XA
 08 51 0     0841         CNST  1634000000    FC  FA
 08 52 0     0842         CNST  2421163400    FC  XV
 08 53 0     0843         CNST  1635000000    FC  FV
 08 54 0     0844         CNST  2325350000    FC  XC
 08 55 0     0845         CNST  2535000000    FC  FC


                                     SECTION B. THE SCANNER CO-ROUTINE.

 08 60 0     0846   SCAN  BUN   SCN1          EXIT-ENTRANCE LINE
 08 61 0     0847   SCN10 CAD   CWEMP
 08 62 0     0848   SCN5  STP   SCAN
 08 63 0     0849         BUN   EXCTR         GO TO EXECUTOR CO-ROUTINE.
 08 64 0     0850   SCN1  LDR   S2
 08 65 0     0851         STR   S1            MOVE SCANNING WINDOWS TO RIGHT
 08 66 0     0852         LDR   K2             ACROSS SOURCE STRING
 08 67 0     0853         STR   K1
 08 68 0     0854   SCN2  STP   INPTX
 08 69 0     0855         BUN   INPT          GET NEXT CHARACTER FROM CARD
 08 70 0     0856   SCN3  DEFN  *
 08 71 0     0856   STFOL CLB
 08 72 0     0857         CAD   CHAR          SET K2 TO THE CODE FOR THIS CHARACTER
 08 73 0     0858         DBB   0,9999
 08 74 0     0859         BFA   C+,91,8       NUMBER 1
 08 75 0     0860         CFA   FORTY,02      ALPHA  0
 08 76 0     0861         BCH   D+                )  2
 08 77 0     0862         DBB   0,9999            (  3
 08 78 0     0863         BFA   C+,02,04          .  4
 08 79 0     0864         DBB   0,9999            $  5
 08 80 0     0865         BFA   C+,02,24          ,  6
 08 81 0     0866         DBB   0,9999            *  7
 08 82 0     0867         BFA   C+,02,03          -  8
 08 83 0     0868         DBB   0,9999        BLANK 10
 08 84 0     0869         BFA   C+,02,13      OTHER  9
 08 85 0     0870         DBB   0,9999
 08 86 0     0871         BFA   C+,02,23
 08 87 0     0872         DBB   0,9999
 08 88 0     0873         BFA   C+,02,14
 08 89 0     0874         DBB   0,9999
 08 90 0     0875         BFA   C+,02,20
 08 91 0     0876         BFA   B+,02,34
 08 92 0     0877         DBB   0,9998
 08 93 0     0878         BFA   C+,02,00
 08 94 0     0879   *D    DBB   C+,1
008 95 0     0880   *B    DFL   CHAR,02,14    CHANGE CRAZY MINUS SIGN TO REGULAR ONE
 08 96 0     0881   *C    STB   K2

 08 98 0     0882   SCN4  LDR   CHAR
 08 99 0     0883         STR   S2
 09 00 0     0884         CAD   K1
 09 01 0     0885         BFA   A+,02,10      BRANCH IF EITHER
 09 02 0     0886         CAD   K2             SCANNED CHARACTER IS BLANK
 09 03 0     0887         BFA   B+,02,10
 09 04 0     0888         CAD   K1            OTHERWISE INDEX INTO TABLE AND
 09 05 0     0889         SLA   1              BRANCH TO PROPER R-ROUTINE
 09 06 0     0890         ADD   K2
 09 07 0     0891         STA   TEMP
 09 08 0     0892         LDB   TEMP
 09 09 0     0893         CAD - TABSC
 09 10 0     0894         BFA - TABSC,45,88
 09 11 0     0895         CLL   K2
 09 12 0     0896         IFL   K2,00,10      IF THE PAIR IS ILLEGAL,
 09 13 0     0897         STP   WEMX          WRITE ERROR MESSAGE
 09 14 0     0898         BUN   WEM,SCN4      IMPROPER CHARACTER PAIR
 09 15 0     0899         CNST  30103050000
 09 16 0     0900   *A    CAD   K2
 09 17 0     0901         BZA   R13           BLANK ALPHA ... TO R13
 09 18 0     0902         BFA   R24,02,01     BLANK NUMBER ... TO R24
 09 19 0     0903         BUN   SCN1          BLANK OTHER ... TO SCN1 AGAIN
 09 20 0     0904   *B    CAD   K1
 09 21 0     0905         BZA   C+            IF RIGHT CHARACTER IS BLANK,
 09 22 0     0906         BUN   R15            GET THE NEXT NONBLANK CHARACTER
 09 23 0     0907   SCN11 DEFN  *
 09 24 0     0907   *C    STP   PASSX
 09 25 0     0908         BUN   PASS          THEN COMPLETE THE PROCESSING OF THE
 09 26 0     0909         CFA   FORTY,02       LEFTHAND SYMBOL IN THE CASES OF
 09 27 0     0910         BCL   SCN3          ALPHA-ALPHA, ALPHA-NUMBER
 09 28 0     0911   SCN8  STP   CLASX
 09 29 0     0912         BUN   CLASS
 09 30 0     0913   SCN6  CLL   K1
 09 31 0     0914         IFL   K1,00,10      BLANK OUT LEFTHAND SYMBOL AND RECYCLE
 09 32 0     0915         BUN   SCN3
 09 33 0     0916   SCN7  CLL   K2
 09 34 0     0917         IFL   K2,00,10      BLANK OUT BOTH SYMBOLS AND RECYCLE
 09 35 0     0918         BUN   SCN1


 09 38 0     0919   *B    IFL   SW1,62,29
 09 39 0     0920   R1    CLL   K2            AA AN
 09 40 0     0921   SW1   HLT   SCN1
 09 41 0     0922         LBC   K             THIS CHARACTER IS PART OF
 09 42 0     0923         CAD   S2            AN IDENTIFIER
 09 43 0     0924         SLA - 8             STORE IT IN SYMBL AREA
 09 44 0     0925         DLB   K,94,0
 09 45 0     0926         ADL - SYMBL
 09 46 0     0927         IFL   K,02,2
009 47 0     0928         BOF   B-            IF IDENTIFIER IS MORE THAN 50 CHARACTERS
 09 48 0     0929   *A    BUN   SCN1           IN LENGTH, TRUNCATE IT TO 50


 09 51 0     0930   R2    STP   ALPLX         A(
 09 52 0     0931         BUN   ALPLU         WE HAVE MANY CASES TO EXAMINE.
 09 53 0     0932         CFR   PRCMD,64      LOOKUP IDENTIFIER FIRST
 09 54 0     0933         LDB   FUNS
 09 55 0     0934         CAD - 0
 09 56 0     0935         BCU   D+
 09 57 0     0936         BSA   A+,0          IF IN PROCEDURE MODE, CHECK
 09 58 0     0937         DLB   L,64,00        SEMICOLON COUNT
 09 59 0     0938         BSA   C+,3
009 60 0     0939         IFL - 0,11,5        THE PRESENT SYMBOL IS A PARAMETRIC ARRAY
009 61 0     0940         STP   FRMEX         SEND ITS NAME AND AN ARRAY-PARAMETER
 09 62 0     0941         BUN   FRME           OPERATOR TO THE EXECUTOR
 09 63 0     0942         CAD   CWAPM
 09 64 0     0943         BUN   SCN5
 09 65 0     0944   *A    IFL - 0,12,10
 09 66 0     0945         DLB   L,64,0        THE PRESENT SYMBOL IS THE NAME OF THE
 09 67 0     0946         LDR - 0              PROCEDURE BEING DECLARED
 09 68 0     0947         BFR   B+,11,0
 09 69 0     0948         STB - 0,11
 09 70 0     0949         STP   WEMX
 09 71 0     0950         BUN   WEM,A-+1      IF IT OCCURRED BEFORE,
 09 72 0     0951         CNST  30608100000   DUPLICATE PROCEDURE NAME
 09 73 0     0952   *B    IFL - 0,11,8
 09 74 0     0953         CAD   LOCN          SET SEMICOLON COUNT TO 1
 09 75 0     0954         STA - 0,64
 09 76 0     0955   R2P   STP   FRMEX         SEND NAME TO EXECUTOR
 09 77 0     0956         BUN   FRME
 09 78 0     0957         BUN   SCN1
 09 79 0     0958   *C    DFL - 0,11,1        THE PRESENT SYMBOL IS THE NAME OF
009 80 0     0959         STP   FRMEX          A PARAMETRIC FUNCTION OR PROCEDURE
 09 81 0     0960         BUN   FRME
 09 82 0     0961   *E    LDR   SC7           PASS CHARACTERS UNTIL MATCHING RIGHT
 09 83 0     0962         BUN   PRCNT          PARENTHESIS IS FOUND AND GO TO SCN7
 09 84 0     0963   *D    CFR   FUNMD,64
 09 85 0     0964         BCU   F+
009 86 0     0965         BSA   F+,1          IF CALLING A FUNCTION,CHECK $ COUNT
 09 87 0     0966         STP   FRMEX         IF THIS COUNT IS 1,WE DONT KNOW YET
 09 88 0     0967         BUN   FRME           WHETHER OR NOT THE PRESENT SYMBOL IS
 09 89 0     0968         LDB   FUNS           A PARAMETRIC ARRAY, BUT IF THE COUNT
 09 90 0     0969         CAD - 0              IS 2 OR 3 WE KNOW IT IS A
 09 91 0     0970         DLB   L,64,00        PARAMETRIC ARRAY OR PROCEDURE
 09 92 0     0971         LDR - 0
 09 93 0     0972         BSA   G+,2
 09 94 0     0973         BFR   E-,11,6
 09 95 0     0974         BFR   E-,11,4
 09 96 0     0975         BFR   E-,11,8       IF IT ISNT,
 09 97 0     0976   *T    STP   WEMX
 09 98 0     0977         BUN   WEM,E-
 09 99 0     0978         CNST  30111130000   IMPROPER FUNCTION ARGUMENT
010 00 0     0979   *G    BFR   H+,11,5
010 01 0     0980         BUN   T-
010 02 0     0981   *F    DLB   L,64,00
010 03 0     0982         CAD - 0
010 04 0     0983         CFR   DCLMD,64      IF IN TYPE DECLARATION,
010 05 0     0984         BCE   E-             SKIP TO NEXT MATCHING RIGHT PARENTHESIS
010 06 0     0985         BFA   J+,11,0
010 07 0     0986         BFA   K+,11,9
010 08 0     0987   *I    STP   FRMEX         IF SYMBOL WAS CLASSIFIED BEFORE AND
010 09 0     0988         BUN   FRME           IS NOT A LABEL, SEND IT TO THE EXECUTOR.
010 10 0     0989         DLB   L,64,00
010 11 0     0990         LDR - 0             THEN LOOK SEE WHAT KIND IT IS
010 12 0     0991         BFR   R19P,11,1     IF VARIABLE INSERT DOT
010 13 0     0992         BFR   M+,11,4       IF LIBRARY ROUTINE, INSERT FUNC CALL OP
010 14 0     0993         BFR   H+,11,5       IF ARRAY, SEE BELOW
010 15 0     0994         BFR   SCN1,11,9     IF LABEL, EXIT
010 16 0     0995         BFR   SCN1,11,7     IF RESERVED WORD, EXIT
010 17 0     0996         BFR   M+,12,88      IF EXT PROCEDURE,INSERT FUNC CALL OP
010 18 0     0997   *P    CFR   LEVEL,02      IS IT THE NAME OF THE PRESENT
010 19 0     0998         BCE   E-             PROCEDURE BEING DECLARED
010 20 0     0999   *M    CAD   CWCLN
010 21 0     1000         BUN   SCN5
010 22 0     1001   *H    LDB - 0             IF AN ARRAY, MOVE THE MULTIPLIERS TO
010 23 0     1002         SLT   0             THE DIMENSION STACK
010 24 0     1003         ADD   XZERO+1
010 25 0     1004         BSA   *+2,1
010 26 0     1005         LDB - 0             (IF NOT PARAMETRIC,SKIP OVER THE
010 27 0     1006         IBB   Q+,9999        TOTAL-LENGTH ENTRY)
010 28 0     1007   *R    CAD - 1             (IF ITS ONLY 1-DIMENSIONAL, WE
010 29 0     1008         STA   TEMP           LEAVE THE DIMENSION STACK ALONE)
010 30 0     1009         STP   INSX,DIMS
010 31 0     1010         BUN   INS
010 32 0     1011         LDB   TEMP
010 33 0     1012         DBB   R-,1
010 34 0     1013   *Q    CAD   CWNDX         SEND INDEX OP TO EXECUTOR
010 35 0     1014         BUN   SCN5
010 36 0     1015   *J    CFR   ARAMD,64      IF WE HAVE A NEW SYMBOL, AND WE ARENT
010 37 0     1016         DLB   L,64,00       PROCESSING AN ARRAY DECLARATION,
010 38 0     1017         BCE   S+             ITS A VARIABLE
010 39 0     1018         IFL - 0,11,1
010 40 0     1019         BUN   I-
010 41 0     1020   *S    IFL - 0,11,5        IN ARRAY DECLARATION, MARK THE PRESENT
010 42 0     1021         STP   FRMEX          SYMBOL AS AN ARRAY AND SEND IT AND AN
010 43 0     1022         BUN   FRME           ARRAY-DECLARATION OPERATOR TO EXECUTOR
010 44 0     1023         CAD   CWARD
010 45 0     1024         BUN   SCN5
010 46 0     1025   *K    SLT   0             IF IT IS A LABEL, THE MODE MUST
010 47 0     1026         BSA   N+,9          BE A DECLARATION OF SOME KIND
010 48 0     1027         BSA   N+,8
010 49 0     1028         STP   WEMX
010 50 0     1029         BUN   WEM,I-        ELSE, MISPLACED LABEL
010 51 0     1030         CNST  31517000000
010 52 0     1031   *N    STA - 0
010 53 0     1032         CFR   FRMMD,64
010 54 0     1033         BCU   *+2
010 55 0     1034         DFL   M+,62,29      I-O DECLARATION
010 56 0     1035         DLB   LOCN,64,00
010 57 0     1036         STB   IOPUS,04      STORE 1ST LOCATION IN IOPUS
010 58 0     1037         STP   TRTGX
010 59 0     1038         BUN   TRTG2         SEND A LABEL OPERATOR TO THE EXECUTOR
010 60 0     1039         IFL   ALEPH,62,6
010 61 0     1040         CAD   CWLAB
010 62 0     1041   *M    BUN   SCN5          IN FORMAT DECLARATION SEND THE
010 63 0     1042         IFL   M-,62,29       LABEL ITSELF TO EXECUTOR INSTEAD
010 64 0     1043         STP   FRMEX
010 65 0     1044         BUN   FRME
010 66 0     1045   SC7   BUN   SCN7


010 69 0     1046   R3K   LDR   SYMBL         AP
010 70 0     1047         CFR   STOGN+1,00    IN THE STATEMENT STOP +E,  + IS REDUNDANT
010 71 0     1048         BCE   SCN11
010 72 0     1049   R3    BUN   A+            A) A$ A, A*
010 73 0     1050         IFL   *-1,62,29
010 74 0     1051         CAD   RR2           IF WE ARE WORKING ON A PREFIX,
010 75 0     1052         SLS   2
010 76 0     1053         STA   TEMP3,12      CALCULATE SL-FIELD FOR COMPARISON
010 77 0     1054         CAD   K
010 78 0     1055         SLA   8
010 79 0     1056         STA   TEMP3,21
010 80 0     1057         SLA   1
010 81 0     1058         STA   TEMP3,11
010 82 0     1059         DFL   TEMP3,22,22
010 83 0     1060         CAD   SSC           PUT PREFIX CODE INTO PR3-STACK
010 84 0     1061         SLA   4              IN ALPHABETICAL ORDER
010 85 0     1062         STA   TEMP3,64
010 86 0     1063         LDB   SSC
010 87 0     1064         CAD   SYMBL
010 88 0     1065         STA - 0
010 89 0     1066         IFL   SSC,00,1
010 90 0     1067         LDR   *+1
010 91 0     1068         LDB   PR3
010 92 0     1069   *C    STR   TEMP2
010 93 0     1070         STB   TEMP1
010 94 0     1071         IBB   B+,9999
010 95 0     1072         LDR - 1
010 96 0     1073         STR   TEMP
010 97 0     1074         DLB   TEMP,64,0
010 98 0     1075         CFA - 0
010 99 0     1076         BCH   D+
011 00 0     1077   *B    LDB   TEMP2
011 01 0     1078         CAD   TEMP3
011 02 0     1079         STP   INSX
011 03 0     1080         BUN   INS1
011 04 0     1081         BUN   SCN1
011 05 0     1082   *D    LDR   TEMP1
011 06 0     1083         LDB   TEMP
011 07 0     1084         BUN   C-
011 08 0     1085   *A    STP   CLASX         FINISH PROCESSING IDENTIFIER OR
011 09 0     1086         BUN   CLASS          NUMERIC LABEL
011 10 0     1087         BUN   SCN1
011 11 0     1088   SW5   DEFN  R3


011 14 0     1088   R4    STP   WINDX         NA
011 15 0     1089         BUN   WIND1,SCN8    FINISH UP CONSTANT
011 16 0     1090         IFL   SW6,00,1      SET UP IMPLIED MULTIPLICATION
011 17 0     1091         BUN   R13


011 20 0     1092   R5    DFL   D,22,1        NN
011 21 0     1093         CAD   SYMBL
011 22 0     1094         SLS   1
011 23 0     1095         STA   SYMBL         BUILD CONSTANT
011 24 0     1096         LDR   S2
011 25 0     1097         STR   SYMBL,01
011 26 0     1098         BUN   SCN1


011 29 0     1099   R6    STP   WINDX         N) N$ N, NP
011 30 0     1100         BUN   WIND1,R3
011 31 0     1101         BUN   SCN1          FINISH WORKING ON CONSTANT
011 32 0     1102   NTAG  CNST  20000000010


011 35 0     1103   R7P   IFL   SW6,00,1      )A           IMPLIED MULTIPLICATION
011 36 0     1104   R7    STP   OPRTX,R13     (A .A $A ,A -A *A PA
011 37 0     1105         BUN   OPRT          SEND OPERATOR TO EXECUTOR,GO TO R13


011 40 0     1106   R8    STP   OPRTX,SCN1    MANY E.G. )) (-
011 41 0     1107         BUN   OPRT          SEND LEFTHAND OP TO EXECUTOR


011 44 0     1108   R9    LDR   S2            (P .P $P ,P *P PP
011 45 0     1109         BFR   SCN2,02,10
011 46 0     1110         CLL   SW2           THE RIGHTHAND SYMBOL MUST BE A
011 47 0     1111         STP   WEMX           REDUNDANT PLUS SIGN
011 48 0     1112         BUN   WEM,SCN7
011 49 0     1113         CNST  31518200000   MISPLACED ARITHMETIC OPERATION


011 52 0     1114   R10   CAD   RPAR          )(
011 53 0     1115         STP   SCAN
011 54 0     1116         BUN   EXCTR         ) TO EXECUTOR
011 55 0     1117         BUN   R19P          IMPLIED MULTIPLICATION


011 58 0     1118   R11   STP   ALPLX         A-
011 59 0     1119         BUN   ALPLU         LEFTHAND SYMBOL MUST BE A SIMPLE VARIABLE
011 60 0     1120         BFA   D+,11,0
011 61 0     1121         BFA   C+,11,1
011 62 0     1122         BFA   R2P,11,7      OR A RESERVED WORD
011 63 0     1123         CLL   TAG
011 64 0     1124         STP   WEMX
011 65 0     1125         BUN   WEM,C+
011 66 0     1126         CNST  30122240000   IMPROPER VARIABLE SYMBOL
011 67 0     1127   *D    IFL - 0,11,1
011 68 0     1128   *C    STP   FRMEX
011 69 0     1129         BUN   FRME
011 70 0     1130   R11P  CAD   PLUS          INSERT PLUS SIGN SO EXECUTOR
011 71 0     1131         BUN   SCN5          ALWAYS THINKS MINUS IS UNARY OPERATOR



011 75 0     1132   R12   STP   OPRTX,R11P    )-
011 76 0     1133         BUN   OPRT          ) TO EXECUTOR, INSERT A + SIGN



011 80 0     1134   R13   CLL   K             BLANK A
011 81 0     1135         STB   SW1,62
011 82 0     1136         IFL   SW1,62,01     PREPARE TO BUILD AN IDENTIFIER
011 83 0     1137         LDB   SBL
011 84 0     1138         CLL   SYMBL
011 85 0     1139         RTF   SYMBL,9
011 86 0     1140         BUN   R1


011 89 0     1141   R15   STP   PASSX         SKIP OVER BLANKS
011 90 0     1142         BUN   PASS
011 91 0     1143         BUN   SCN3


011 94 0     1144   R17   STP   PASSX         A.
011 95 0     1145         BUN   PASS          GET NEXT NONBLANK CHARACTER
011 96 0     1146         BFA   R17Q,02,03
011 97 0     1147         STP   CLASX         IF NOT A COLON CLASSIFY
011 98 0     1148         BUN   CLASS          LEFT IDENTIFIER
011 99 0     1149   R17P  LDR   S2            MOVE WINDOW TO THE RIGHT
012 00 0     1150         STR   S1             AND CONTINUE SCANNING
012 01 0     1151         LDR   K2
012 02 0     1152         STR   K1
012 03 0     1153         BUN   SCN3
012 04 0     1154   R17R  LDR   NTAG
012 05 0     1155         STR   K             MARK NUMBER AS LABEL
012 06 0     1156   R17Q  STP   PASSX         GET NEXT NONBLANK CHARACTER
012 07 0     1157         BUN   PASS
012 08 0     1158         BFA   C+,02,03
012 09 0     1159         IFL   TAG,00,1      COLON IS DETECTED
012 10 0     1160         STP   ALPLX
012 11 0     1161         BUN   ALPLU         LOOK UP IDENTIFIER
012 12 0     1162         STP   TRTGX
012 13 0     1163         BUN   TRTG          PROCESS LABEL
012 14 0     1164         BUN   SCN6          RETURN
012 15 0     1165   *C    LDB   K
012 16 0     1166         DBB   R17Q,12       THREE DOTS DETECTED
012 17 0     1167         CLL   S2            TREAT AS COLON IF IDENTIFIER IS
012 18 0     1168         IFL   S2,00,90      OVER FIVE CHARACTERS. SET RIGHT
012 19 0     1169         CLL   K2            CHARACTER AS SPECIAL CODE 90 FOR PREFIXES
012 20 0     1170         DFL   R3,62,29      SET PREFIX SWITCH
012 21 0     1171         BUN   R1            PROCESS AS IDENTIFIER


012 24 0     1172   R18   STP   WINDX         N-
012 25 0     1173         BUN   WINDU         PROCESS CONSTANT
012 26 0     1174         BUN   R11P          AND INSERT + SIGN


012 29 0     1175   R19   STP   WINDX         N(
012 30 0     1176         BUN   WIND1,R2      PROCESS CONSTANT
012 31 0     1177   R19P  CAD   DOT           IF NOT A LABEL, INSERT IMPLIED MULT
012 32 0     1178         BUN   SCN5


012 35 0     1179   R20   STP   PASSX         N.                                                    ORIG. INPTX
012 36 0     1180         BUN   PASS                                                                ORIG. INPT
012 37 0     1181         LDR   CHAR          IF THE NEXT CHARATER IS A DOT,WE HAVE
012 38 0     1182         BFR   R17R,02,03     A STATEMENT LABEL.
012 39 0     1183         BFR   C+,91,08      OTHERWISE IF ITS NOT NUMBERIC
012 40 0     1184   *A    STP   WINDX          WE FINISH MAKING UP THE CONSTANT
012 41 0     1185         BUN   WINDU          AND CONTINUE
012 42 0     1186         BUN   R17P
012 43 0     1187   *C    CAA   SW2           OTHERWISE WE HAVE A FLOATING CONSTANT
012 44 0     1188         ADA   SW3
012 45 0     1189         BZA   E+
012 46 0     1190   *D    STP   WEMX          ERROR CONDITIONS ARE N.N.N OR N**N.N
012 47 0     1191         BUN   WEM,A-
012 48 0     1192         CNST  31526280000   MISPLACED DECIMAL POINT
012 49 0     1193   *E    CLL   D
012 50 0     1194         IFL   D,22,58       RECORD DECIMAL POINT AND CONTINUE
012 51 0     1195         IFL   SW3,00,1       SCANNING AND BUILDING CONSTANT
012 52 0     1196         STR   S2
012 53 0     1197         LDR   XONE+1
012 54 0     1198         STR   K2
012 55 0     1199         BUN   R5


012 58 0     1200   R21   CAD   RPAR          )N
012 59 0     1201         STP   SCAN
012 60 0     1202         BUN   EXCTR         ) TO EXECUTOR
012 61 0     1203         CAD   DOT
012 62 0     1204         STP   SCAN          . TO EXECUTOR
012 63 0     1205         BUN   EXCTR
012 64 0     1206         BUN   R24



012 68 0     1207   R22   STP   PASSX         N*
012 69 0     1208         BUN   PASS
012 70 0     1209         BFA   B+,02,14      CHECK FOR SECOND ASTERISK
012 71 0     1210         BUN   A-            IF NOT * MEANS EXPONENTIATE
012 72 0     1211   *B    LDB   SW3           START SCALE FACTOR
012 73 0     1212         DBB   G+,1
012 74 0     1213         CLL   D             IF MANTISSA HAD NO DECIMAL POINT
012 75 0     1214         IFL   D,22,58        MANUFACTURE ONE
012 76 0     1215         IFL   SW3,00,01
012 77 0     1216   *G    STP   WNDSX         PROCESS MANTISSA
012 78 0     1217         BUN   WINDS
012 79 0     1218   *B    LDR   SYMBL
012 80 0     1219         STR   FP
012 81 0     1220         IFL   SW2,00,1
012 82 0     1221         STP   PASSX
012 83 0     1222         BUN   PASS          EXAMINE NEXT NONBLANK CHARACTER
012 84 0     1223         BFA   D+,02,20
012 85 0     1224         BFA   D+,02,34      WE MUST HAVE **N **-N OR **+N
012 86 0     1225         BFA   E+,02,10
012 87 0     1226   *C    BFA   F+,91,08
012 88 0     1227         STP   WEMX
012 89 0     1228         BUN   WEM,A-
012 90 0     1229         CNST  30129300000   IMPROPER SCALE FACTOR
012 91 0     1230   *D    IFL   SW4,61,1      RECORD SIGN
012 92 0     1231   *E    STP   PASSX
012 93 0     1232         BUN   PASS
012 94 0     1233         BUN   C-
012 95 0     1234   *F    STA   S2            PREPARE TO PROCESS SCALE FACTOR
012 96 0     1235         DFL   K2,02,6
012 97 0     1236         BUN   R24P          R3 IS LOCATED BY OPRT


013 00 0     1237   R24   CLL   SW2           BLANK N
013 01 0     1238         STB   SW4,61
013 02 0     1239         CAD   S2
013 03 0     1240   R24P  CLL   SYMBL         PREPARE TO BUILD A CONSTANT
013 04 0     1241         CLL   D
013 05 0     1242         CLL   SW3
013 06 0     1243         STA   SYMBL,01
013 07 0     1244         BUN   SCN1


013 10 0     1245   R25   STP   OPRTX,SCN10   (, ,, ,) ()
013 11 0     1246         BUN   OPRT          INSERT THE EMPTY OPERATOR


013 14 0     1247   R26   STP   OPRTX,*+2     ($ $$
013 15 0     1248         BUN   OPRT
013 16 0     1249         LDB   FUNS
013 17 0     1250         IFL - 0,12,10       INCREASE THE SEMICOLON COUNT
013 18 0     1251         CAD - 0
013 19 0     1252         IFL   OMCRN,00,1
013 20 0     1253         BSA   SCN1,2
013 21 0     1254         IFL   TAG,00,1
013 22 0     1255         BUN   SCN1


013 25 0     1256   R27   DEFN  SCN1          $)


013 28 0     1256   TRTG2 DFL   ALEPH,62,6    TRTG2 -- SUPPRESS MONITORING
013 29 0     1257   TRTG  CLL   TAG
013 30 0     1258         DLB   L,64,0        DEFINE A LABEL
013 31 0     1259         CAD - 0
013 32 0     1260         BFA   D+,64,0       IT HAD BETTER BE UNDEFINED
013 33 0     1261         BFA   COMNT,12,67   OR THE WORD COMMENT
013 34 0     1262         STP   WEMX
013 35 0     1263         BUN   WEM,TRTGX     DUPLICATE LABEL
013 36 0     1264         CNST  30617000000
013 37 0     1265   *E    BPA   T+
013 38 0     1266         LDR   DUMPR         PUT OUT CODE FOR DUMP ROUTINE
013 39 0     1267         STR   V3            IF THIS LABEL WAS SPECIFIED ON TRACE CARD
013 40 0     1268         LDR   MEMRY+1
013 41 0     1269         STR   EXPLN
013 42 0     1270         STP   CONVX
013 43 0     1271         BUN   CONV3
013 44 0     1272         BUN   TRTG1
013 45 0     1273   *T    DLB   L,64,0
013 46 0     1274         LDR - 0
013 47 0     1275         STP   FXUPX
013 48 0     1276         BUN   FXUP+1
013 49 0     1277         BUN   TRTG1
013 50 0     1278   *D    CAD   LOCN          THE NEW DEFINITION IS LOCN
013 51 0     1279         STA - 0,64
013 52 0     1280   NU    BUN   TRTG1
013 53 0     1281         STP   ASMBX         IF THIS IS A SUBROUTINE LABEL,
013 54 0     1282         BUN   ASMBL,NOPZ     INSERT A NOP INSTRUCTION
013 55 0     1283         IFL   NU,62,29
013 56 0     1284   TRTG1 DLB   L,64,0        FIX ALL FORWARD REFERENCES TO THIS LABEL
013 57 0     1285         STP   REMX
013 58 0     1286         BUN   REM1,E-
013 59 0     1287         LDR   LOCNP         IF THIS IS A SEGMENT NUMBER,
013 60 0     1288   ZUTA  F424  0001,01,LOCN   RESTORE LOCN
013 61 0     1289   *B    CAD   CHI           IF MONITOR STATEMENT HASNT APPEARED,EXIT
013 62 0     1290   ALEPH BZA   TRTGX
013 63 0     1291         DLB   V8,64,0
013 64 0     1292         STP   LIBRX         BRING IN THE LABEL PROCESSOR ROUTINE
013 65 0     1293         BUN   LIBRF
013 66 0     1294         DLB   L,64,0
013 67 0     1295         STB   MNTR,04
013 68 0     1296         CAD   L             IF THIS IS A NUMERIC LABEL
013 69 0     1297         BSA   *+2,0         ATTACH A MINUS SIGN TO IT
013 70 0     1298         IFL - 1,12,10        AS A SIGNAL TO THE LABEL PROCESSOR
013 71 0     1299         STP   CONVX
013 72 0     1300         BUN   CONV
013 73 0     1301   MNTR  CAA   *             IF LABEL IS REQUESTED FOR MONITORING,
013 74 0     1302   MU    NOP   TRTGX
013 75 0     1303         BSA   *+3,2
013 76 0     1304         BSA   *+2,6         PREPARE TO MONITOR ALL ASSIGNMENT
013 77 0     1305   TRTGX BUN   *             STATEMENTS IN ITS SCOPE
013 78 0     1306         STP   CMPLX
013 79 0     1307         BUN   WMG,CRM       COMPILE CIRCL-M (THIS WILL COME UP
013 80 0     1308         IFL   MU,62,29      WHEN THE SCOPE OF THE LABEL IS ENDED)
013 81 0     1309         BUN   TRTGX


013 84 0     1310   PASS  STP   INPTX         GET NEXT NONBLANK CHARACTER FROM CARD
013 85 0     1311         BUN   INPT
013 86 0     1312         BZA   INPT
013 87 0     1313   PASSX BUN   *


013 90 0     1314   WIND1 LDB   TAG           FINISH PROCESSING CONSTANT.
013 91 0     1315         DBB   E+,1          IF TAG IS ON, IT IS A NUMERIC LABEL
013 92 0     1316   WINDU STP   WNDSX
013 93 0     1317         BUN   WINDS         OTHERWISE MAKE A CONSTANT OUT OF IT
013 94 0     1318         STP   NMBRX
013 95 0     1319         BUN   NMBR


013 98 0     1320   FRME  DLB   L,64,00       SEND CODED SYMBOL TO EXECUTOR
013 99 0     1321         CAD - 0
014 00 0     1322         BFA   A+,11,7
014 01 0     1323         STA   L,22
014 02 0     1324         BFA   C+,11,6
014 03 0     1325   *D    CAD   L             IF IT ISNT A RESERVED WORD,
014 04 0     1326         EXT   BOF2          MARK IT AS AN OPERAND
014 05 0     1327   *B    STP   SCAN
014 06 0     1328         BUN   EXCTR
014 07 0     1329   FRMEX BUN   *
014 08 0     1330   *A    SLA   4             RESERVED WORD - SLA4 FOR PROPER CODE
014 09 0     1331         BUN   B-
014 10 0     1332   *C    IFL   L,11,2        FUNCTION CODE IS 6 IN SCANNER.
014 11 0     1333         BUN   D-
014 12 0     1334   *E    LDR   NTAG
014 13 0     1335         STR   K
014 14 0     1336         LDB   WINDX
014 15 0     1337         DLB - 9999,44,0
014 16 0     1338         BUN - 0


014 19 0     1339   WINDS CLL   RR0           PUT CONSTANT INTO FINAL FORM
014 20 0     1340         CAD   SW3
014 21 0     1341         BZA   E+
014 22 0     1342         CAD   SYMBL         IF DECIMAL POINT WAS SENSED,
014 23 0     1343   *G    BFA   F+,23,0       TRUNCATE CONSTANT TO EIGHT SIGNIFICANT
014 24 0     1344         IFL   D,22,01                           DIGITS
014 25 0     1345         SRS   1
014 26 0     1346         BUN   G-
014 27 0     1347   *F    SRT   10
014 28 0     1348         CAD   D
014 29 0     1349         STR   D,08          ATTACH EXPONENT
014 30 0     1350         FAD   D
014 31 0     1351         STA   SYMBL         NORMALIZE
014 32 0     1352   WNDSX BUN   *
014 33 0     1353   *E    CAD   SW2
014 34 0     1354         BZA   D+
014 35 0     1355   SW4   CAA   SYMBL         IF SCALE FACTOR TO BE ADDED,
014 36 0     1356         BFA   B+,88,0       MAKE SURE IT IS IN THE PROPER RANGE
014 37 0     1357   *A    STP   WEMX
014 38 0     1358         BUN   WEM,C+
014 39 0     1359         CNST  33436373800   CONSTANT OUT OF RANGE
014 40 0     1360   *B    SLA   8
014 41 0     1361         ADA   FP
014 42 0     1362         BOF   A-
014 43 0     1363         BPA   WNDSX-1
014 44 0     1364   SVAR  DEFN  *
014 45 0     1364   *C    CLA                 IF UNDERFLOW OR TOO BIG USE ZERO
014 46 0     1365         BUN   WNDSX-1
014 47 0     1366   *D    IFL   RR0,22,1      SET TYPE OF FIXED POINT CONSTANT
014 48 0     1367         BUN   WNDSX
014 49 0     1368   WINDX DEFN  FRMEX


014 52 0     1368   INSRT ADD   LL0           PUT A NEW SYMBOL INTO MEMORY
014 53 0     1369         EXT   NN
014 54 0     1370         ADD   SCT
014 55 0     1371         STA   L,04
014 56 0     1372         LDR   SSC
014 57 0     1373         SLT   4
014 58 0     1374         STR   L,64
014 59 0     1375         CAD   D2D3
014 60 0     1376         STA   L,23
014 61 0     1377         SRA   2
014 62 0     1378         STA   B+,43
014 63 0     1379         BFA   D+,42,00
014 64 0     1380   *E    LDB   L             IF IT DOESNT FIT INTO THE SCRAMBLE
014 65 0     1381         LDR - 0             TABLE, PUT IT INTO ASSOCIATIVE MEMORY
014 66 0     1382         CAD   L
014 67 0     1383         BFR   C+,00,0
014 68 0     1384         STP   INSX
014 69 0     1385         BUN   INS1
014 70 0     1386   *C    STA - 0,67
014 71 0     1387   *A    LDB   SSC
014 72 0     1388         IFL   *+1,43,19
014 73 0     1389   *B    RTF   RR0,0         MOVE NAME INTO SSC AREA
014 74 0     1390         STB   SSC
014 75 0     1391         LDR   SSC
014 76 0     1392         CFR   MAMAX,04      CHECK IF MEMORY EXCEEDED
014 77 0     1393         BCH   FULL
014 78 0     1394         DLB   L,64,0
014 79 0     1395         CLL - 0
014 80 0     1396   INSRX BUN   *
014 81 0     1397   *D    IFL   B-,21,1       50-CHARACTER IDENTIFIER WORRIES
014 82 0     1398         BUN   E-


014 85 0     1399   ALPLU CAD   K             LOOKUP IDENTIFIER OR NUMERIC LABEL
014 86 0     1400         SLA   8
014 87 0     1401         STA   D2D3,23       CONTROL ROUTINE
014 88 0     1402   D2D3  CAA   SYMBL
014 89 0     1403         SRT   10            SCRAMBLE FIRST PART OF SYMBOL
014 90 0     1404         DIV   NN            BY TAKING ITS REMAINDER MOD 99
014 91 0     1405         STR   LL0
014 92 0     1406         LDR   PARSW
014 93 0     1407         CAD   FNSW
014 94 0     1408         BZR   E+
014 95 0     1409         LDR   DICT+3
014 96 0     1410         BZA   B+
014 97 0     1411         STP   SRCHX         COLLECTING FUNCTION PARAMETERS
014 98 0     1412         BUN   SRCH1         USE TYPE AS SPECIFIED IN TYPE DECLRATNS
014 99 0     1413         BUN   X+
015 00 0     1414         BFR   B+,21,0
015 01 0     1415         BFR   B+,21,1
015 02 0     1416         LDR   RR3
015 03 0     1417   *B    STR   RR2,21        COLLECTING PROCEDURE PARAMETERS
015 04 0     1418         CAD   KC            MARK TYPE AS UNSPECIFIED
015 05 0     1419         STP   INSRX
015 06 0     1420         BUN   INSRT         PUT PARAMETER INTO TABLE AT KC LEVEL
015 07 0     1421         LDR   RR2
015 08 0     1422         STR - 0,21
015 09 0     1423         LDR   TAG
015 10 0     1424         BZR   ALPX1
015 11 0     1425         BUN   Y+
015 12 0     1426   *E    BZA   D+            PROCESSING A FUNCTION DECLARATION
015 13 0     1427         CAD   KC            IS THE IDENTIFIER A PARAMETER
015 14 0     1428         STP   SRCHX
015 15 0     1429         BUN   SRCH
015 16 0     1430         BUN   D+            IF NOT TREAT AS NORMAL
015 17 0     1431   *J    LDR   SW6
015 18 0     1432         BZR   ALPX1
015 19 0     1433         LDR   L             INSERT IMPLIED MULTIPLICATION
015 20 0     1434         STR   LP            IF REQUIRED
015 21 0     1435         CAD   DOT
015 22 0     1436         STP   SCAN
015 23 0     1437         BUN   EXCTR
015 24 0     1438         LDR   LP
015 25 0     1439         STR   L
015 26 0     1440         CLL   SW6
015 27 0     1441   ALPX1 LDB   MODE          ON EXIT, PUT MODE IN R REGISTER
015 28 0     1442         LDR - 0                      SYMBL CODE IN A REGISTER
015 29 0     1443         DLB   L,64,0
015 30 0     1444         BFR   W+,12,70
015 31 0     1445         CAD - 0
015 32 0     1446   ALPLX BUN   *
015 33 0     1447   *D    STP   SRCHX         NORMAL CASE
015 34 0     1448         BUN   SRCH1         SEARCH FOR THIS IDENTIFIER
015 35 0     1449         BUN   F+
015 36 0     1450   THI   NOP   FRME          IF PROCESSING MONITOR LIST,EXIT TO FRME
015 37 0     1451         BFR   J-,22,74      IF ITS AN INTRINSIC FUNCTION GO TO J-
015 38 0     1452         BFR   ALPX1-1,11,7  IF ANOTHER RESERVED WORD,EXIT
015 39 0     1453         BFR   G+,11,9       IS IT A LABEL
015 40 0     1454   *L    BFR   H+,22,83      IS IT A PROCEDURE NAME
015 41 0     1455         BFR   Z+,21,3       IS ITS TYPE UNSPECIFIED
015 42 0     1456         STP   LIBRX         IF IT IS A NEW LIBRARY PROCEDURE,
015 43 0     1457         BFR   LIBRF,11,3    ADD IT TO THE LIBRARY
015 44 0     1458         BUN   J-            OTHERWISE CHEK IMPLIED MULTIPLICATION
015 45 0     1459   *F    CAD   LEVEL
015 46 0     1460   PEH   BZA   M+              SYMBOL NOT FOUND
015 47 0     1461   L9    CLA   9             INSIDE PROCEDURE
015 48 0     1462         STP   SRCHX
015 49 0     1463         BUN   SRCH
015 50 0     1464         BUN   K+            MAYBE ITS A RESERVED WORD
015 51 0     1465         BFR   J-,22,74
015 52 0     1466         BFR   ALPX1-1,11,7
015 53 0     1467         BFR   J-,11,4       OR A PROCEDURE, LIBRARY FUNCTION NAME
015 54 0     1468         BFR   L-,11,3
015 55 0     1469         BFR   L-,11,8
015 56 0     1470   *K    CAD   LEVEL         IF WE HAVE A BONA FIDE NEW SYMBOL,
015 57 0     1471   *M    STP   INSRX         ADD IT TO THE TABLE
015 58 0     1472         BUN   INSRT
015 59 0     1473   *Z    LDR   TAG
015 60 0     1474         BZR   H+
015 61 0     1475   *Y    DFL - 0,11,1        MAKE IT A LABEL, IF IT APPEARS IN
015 62 0     1476         BUN   ALPX1-1       THAT CONTEXT
015 63 0     1477   *X    CAD   KC
015 64 0     1478         BUN   M-
015 65 0     1479   *G    CLL   SW6
015 66 0     1480   *M    LDB   MODE          OTHERWISE IF IN TYPE DECLARATION MODE
015 67 0     1481         LDR - 0              SET ITS TYPE
015 68 0     1482         CFR   DCLMD,64
015 69 0     1483         BCU   N+
015 70 0     1484         CAD   RR2
015 71 0     1485         DLB   L,64,0
015 72 0     1486         STA - 0,21
015 73 0     1487         BUN   ALPX1
015 74 0     1488   *N    CAD   SYMBL         GIVEN A NEW SYMBOL, LETS ASSIGN
015 75 0     1489         LDB   PR3            A TYPE FOR IT
015 76 0     1490   *A2   IBB   F+,9999       LOOK IN PREFIX STACK FOR
015 77 0     1491         LDR - 1             FIRST PREFIX WHICH APPLIES
015 78 0     1492         STR   TEMP
015 79 0     1493         DLB   TEMP,64,0
015 80 0     1494         STR   *+1,22
015 81 0     1495         CFA - 0,22
015 82 0     1496         LDB   TEMP
015 83 0     1497         BCU   A2-
015 84 0     1498         CAD   TEMP
015 85 0     1499         SRS   2
015 86 0     1500   *P    DLB   L,64,0
015 87 0     1501         STA - 0,21
015 88 0     1502         BUN   J-            IF NONE FITS, SET OTHERWISE TYPE
015 89 0     1503   *F    CAD   RR3
015 90 0     1504         BUN   P-
015 91 0     1505   *W    CAD 8 *
015 92 0     1506         STB   JCROY,04
015 93 0     1507         CLL   TAG           LABEL ON A TRACE CARD SENSED
015 94 0     1508         STP   INSX
015 95 0     1509         BUN   INS1          PUT CODE REFERENCE ON ITS FIXUP STACK
015 96 0     1510         STP   CMPLX
015 97 0     1511         BUN   WMG,CROY
015 98 0     1512         IFL   CHI,00,1
015 99 0     1513         BUN   SCN1


016 02 0     1514   NMBR  CAD   SYMBL         SEE IF CONSTANT HAS APPEARED BEFORE.
016 03 0     1515         LDR   RR0           EITHER SEARCH FLOATING POINT ONES
016 04 0     1516   RHO   NOP   C+             OR INTEGER ONES
016 05 0     1517         DLB   V6,64,00
016 06 0     1518         BFR   *+2,21,1
016 07 0     1519         DLB   V7,64,00
016 08 0     1520   *A    CFA - 1
016 09 0     1521         BCE   B+
016 10 0     1522         STB   E+,04
016 11 0     1523         LDB - 0
016 12 0     1524         IBB   D+,9999
016 13 0     1525         IBB   A-,1
016 14 0     1526   *D    LDB   SSC
016 15 0     1527   *E    STB   *,04          ENTER NEW CONSTANT IN TABLE
016 16 0     1528         RTF   RR0,2
016 17 0     1529         STB   SSC
016 18 0     1530         IFL - 9998,11,2
016 19 0     1531         IBB   *+1,9998
016 20 0     1532   *B    STB   L             CONSTANT IN TABLE
016 21 0     1533         CAD   L
016 22 0     1534         SLA   4
016 23 0     1535         STA   L,64
016 24 0     1536         DLB   L,64,0
016 25 0     1537   NMBRX BUN   *
016 26 0     1538   *C    CFR   V2,21         IN ARRAY FILL
016 27 0     1539         BCH   FLTCM         CHANGE TO PROPER TYPE, IF NECESSARY
016 28 0     1540         BCL   FIXCM
016 29 0     1541         DFL   RHO,62,29
016 30 0     1542         STA   V1
016 31 0     1543         STP   TSTOX         REVERSE ITS SIGN IF NECESSARY
016 32 0     1544         BUN   TSTOP
016 33 0     1545         LDR   V1
016 34 0     1546         CAD   ABASE
016 35 0     1547         IFL   ABASE,00,1
016 36 0     1548         STP   WRITX         COMPILE IT
016 37 0     1549         BUN   WRIT3
016 38 0     1550         BUN   WINDX




016 43 0     1551   CLASS STP   ALPLX         PROCESS AND CLASSIFY SYMBOL
016 44 0     1552         BUN   ALPLU
016 45 0     1553         BFA   FRME,11,7
016 46 0     1554         CFR   DCLMD,64
016 47 0     1555         BCE   SCN1          EXIT IF IN A TYPE DECLARATION
016 48 0     1556         LDB   TAG
016 49 0     1557         BFA   B+,11,0       OTHERWISE IT MUST BE A
016 50 0     1558         BFA   C+,11,1       LABEL OR SIMPLE VARIABLE
016 51 0     1559         BFA   D+,11,9
016 52 0     1560         DBB   P+,1
016 53 0     1561   *Q    STP   WEMX
016 54 0     1562         BUN   WEM,FRME
016 55 0     1563         CNST  30122240000   IMPROPER VARIABLE SYMBOL
016 56 0     1564   *C    IBB   FRME,9999
016 57 0     1565   *P    STP   WEMX
016 58 0     1566         BUN   WEM,A+
016 59 0     1567         CNST  30117240000   IMPROPER LABEL SYMBOL
016 60 0     1568   *D    DBB   A+,1
016 61 0     1569         BUN   Q-
016 62 0     1570   *B    CFR   FUNMD,64      MAKE UNASSIGNED SYMBOL
016 63 0     1571         BCU   X+            INTO EITHER A SIMPLE VARIABLE
016 64 0     1572         LDB   FUNS
016 65 0     1573         CAD - 0             OR, IF IN LABEL PART OF A PROCEDURE
016 66 0     1574         BSA   Y+,3          CALL, INTO A LABEL
016 67 0     1575   *X    DLB   L,64,0
016 68 0     1576         IFL - 0,11,1
016 69 0     1577   *A    CLL   TAG
016 70 0     1578         BUN   FRME          EXIT TO FRME ROUTINE IN ANY EVENT
016 71 0     1579   *Y    DLB   L,64,0
016 72 0     1580         IFL - 0,11,9
016 73 0     1581         BUN   FRME
016 74 0     1582   CLASX DEFN  FRMEX


016 77 0     1582   THETA DEFN  *
016 78 0     1582   INPT  NOP   INP3          GET NEXT CHARACTER, FROM FV-STACK
016 79 0     1583   INP1  DLB   SCNCT,94,00       OR FROM CARD, NORMALLY FROM CARD
016 80 0     1584         CAD - IMAGE         BRING IN ALPHA WORD
016 81 0     1585         LDB   SCNCT
016 82 0     1586         SLA - 0             ISOLATE NEXT DIGIT PAIR
016 83 0     1587   CCCNT DBB   D+,144        CHECK FOR END OF CARD
016 84 0     1588   ZETA  BFA   E+,00,00
016 85 0     1589         SRA   8
016 86 0     1590         IFL   SCNCT,05,02
016 87 0     1591   *F    STA   CHAR,02
016 88 0     1592   BETA  BUN   INPTX
016 89 0     1593         SLA   4             IF PROCESSING FOR STATEMENT
016 90 0     1594         STP   INSX,RV       WE PUT CHARACTERS INTO RV-STACK
016 91 0     1595         BUN   INS
016 92 0     1596         BFA   *+3,62,33
016 93 0     1597         CAD   CHAR
016 94 0     1598   INPTX BUN   *
016 95 0     1599   *B    CAD   FV            IF BETA ON AND WE HAVE JUST PUT IN
016 96 0     1600         LDB   RV            AN EQUAL SIGN,
016 97 0     1601         STB   FV,04         RV STACK HAS CHARACTERS IN BACKWARDS$
016 98 0     1602         LDR - 0             TRANSFER THEM TO FV-STACK IN RIGHT ORDER
016 99 0     1603         STA - 0,04
017 00 0     1604         STR   RV,04         UNTIL RV-STACK IS EMPTY
017 01 0     1605         BFR   *+2,04,00
017 02 0     1606         BUN   B-
017 03 0     1607   *C    IFL   BETA,62,29
017 04 0     1608         CAD   CHAR
017 05 0     1609         BUN   INPTX
017 06 0     1610   *D    BCS   *+3,4
017 07 0     1611         STP 4 9898,1642
017 08 0     1612         BUN 4 9898,IMAGE
017 09 0     1613         STP 4 9999
017 10 0     1614         BUN 4 9999,IMAGE
017 11 0     1615         CLL   SCNCT
017 12 0     1616         STB   LCCT,62
017 13 0     1617         IFL   LCCT,62,1
017 14 0     1618   CCBEG IFL   SCNCT,00,02   START IN COLUMN 2
017 15 0     1619         BUN   INP1
017 16 0     1620   *E    IFL   SCNCT,05,10   HIGH SPEED IGNORING OF SUCCESSIVE
017 17 0     1621         STA   SCNCT,01
017 18 0     1622         BUN   F-            BLANK COLUMNS UNLESS ZETA SWITCH IS ON
017 19 0     1623   INP3  LDB   STFOL
017 20 0     1624         CAD - 0             PULL CHARACTERS OUT OF FV (FOR-VARIABLE)
017 21 0     1625         SRA   4              STACK
017 22 0     1626         STA   CHAR,02
017 23 0     1627         IBB   RUNXX,9999
017 24 0     1628         LDR - 1
017 25 0     1629         STR   STFOL,04
017 26 0     1630         BUN   INPTX


017 29 0     1631         CNST  20002000000
017 30 0     1632   IMAGE HLT   0
017 31 0     1633         CNST  0,0
017 32 0     1635         CNST  $BAC-220 STANDARD VERSION$
017 33 0     1640         CNST  $  2/1/62$
017 34 0     1642         CNST  0,0,0,0,0
017 35 0     1647         LOCN  IMAGE+16


017 38 0     1648   SRCH1 CAD   LEVEL
017 39 0     1649   SRCH  ADD   LL0
017 40 0     1650         EXT   NN            LOOK FOR SYMBOL IN TABLE
017 41 0     1651         ADD   SCT
017 42 0     1652         STA   L
017 43 0     1653   *B    LDB   L
017 44 0     1654         IBB   SRCHX,9999
017 45 0     1655   *C    CAD - 1
017 46 0     1656         STA   L             FIRST COMPARE LENGTHS
017 47 0     1657         CFA   D2D3,23       (AND WHETHER OR NOT A NUMERIC LABEL)
017 48 0     1658         BCU   B-
017 49 0     1659         SRA   4
017 50 0     1660         STA   TEMP
017 51 0     1661         IFL   TEMP,63,9
017 52 0     1662         STA   A+,04
017 53 0     1663         IFL   A+,04,1
017 54 0     1664         DLB   TEMP,54,1
017 55 0     1665         BRP   A+
017 56 0     1666         LDB   L9
017 57 0     1667   *A    CAD - *             IF LENGTHS AGREE, COMPARE THE REST
017 58 0     1668         CFA - SYMBL,00
017 59 0     1669         BCU   B-
017 60 0     1670         DBB   A-,1
017 61 0     1671         IFL   SRCHX,04,1    EXIT TO ONE BIGGER LOCATION
017 62 0     1672         DLB   L,64,0        IF SYMBOL IS FOUND
017 63 0     1673         LDR - 0
017 64 0     1674   SRCHX BUN   *


017 67 0     1675   R23   STP   OPRTX,R24     (N .N $N ,N *N -N PN


017 70 0     1676   OPRT  LDB   OPRTX
017 71 0     1677         DLB - 9998,44,0
017 72 0     1678         STB   SCAN,04
017 73 0     1679         LDB   S1            SEND S1 OPERATOR TO EXECUTOR
017 74 0     1680         CAD - OPTAB
017 75 0     1681         BUN   EXCTR
017 76 0     1682   OPRTX DEFN  SCAN





017 82 0     1682   WEM   CLL   MSG           WRITE ERROR MESSAGE
017 83 0     1683         LDB   C+
017 84 0     1684         IFL   MSG,12,20
017 85 0     1685         RTF   MSG,6         CLEAR MESSAGE BUFFER
017 86 0     1686         CLL   TEMP
017 87 0     1687   WEMX  CAD   *
017 88 0     1688   *E    CLR   0000
017 89 0     1689         SRT   8
017 90 0     1690         BFA   F+,00,0
017 91 0     1691         STA   E-,04
017 92 0     1692         STR   TEMP3
017 93 0     1693   *H    IFL   E-,04,1
017 94 0     1694         LDB   E-
017 95 0     1695         LDR - DICT-2        GET DICTIONARY ENTRY
017 96 0     1696   *C    CLA   MSG+1
017 97 0     1697         LBC   TEMP
017 98 0     1698         SLT   2             TRANSFER CHARACTERS
017 99 0     1699         BFA   B+,00,00      ONE AT A TIME INTO
018 00 0     1700         SLA - 8             BUFFER AREA
018 01 0     1701         DLB   TEMP,94,00
018 02 0     1702         LSA   0
018 03 0     1703         ADD - MSG
018 04 0     1704         STA - MSG,00
018 05 0     1705         IFL   TEMP,05,02
018 06 0     1706         BUN   C-
018 07 0     1707   *B    BSA   H-,3
018 08 0     1708         IFL   TEMP,05,02    PUT SPACE BETWEEN WORDS
018 09 0     1709         CAD   TEMP3
018 10 0     1710         BUN   E-
018 11 0     1711   *F    BCS   *+2,4
018 12 0     1712         BUN   *+3
018 13 0     1713         STP 4 9898,1642
018 14 0     1714         BUN 4 9898,IMAGE
018 15 0     1715         STP 4 9898,0706
018 16 0     1716         BUN 4 9898,MSG
018 17 0     1717         LDB   WEMX          RETURN TO PROGRAM,
018 18 0     1718         DLB - 9999,44,0     ATTEMPT TO CONTINUE ON
018 19 0     1719         CAD   V4            PUT V4 (CODE FOR CONSTANT 1)
018 20 0     1720         BUN - 0             IN A REGISTER ON EXIT



018 24 0     1721   NEWT  CAD   TEMPS         RECORD CURRENT SET OF TEMPORARY
018 25 0     1722         SLA   4             STORAGE CELLS IN SAVET STACK
018 26 0     1723         CLL   TEMPS         AND MARK THE TEMPS STACK EMPTY
018 27 0     1724         BUN   INS


018 30 0     1725   INS2  CAD   LOCN
018 31 0     1726   INS   LDB   INSX          INSERT RA(67) INTO ASSOCIATIVE MEMORY
018 32 0     1727         DLB - 9998,44,0      LOCATION PRECEDING (RB)
018 33 0     1728   INS1  STB   A+,04
018 34 0     1729         LDR   AVAIL         MORMALLY THIS MEANS ON TOP OF THE
018 35 0     1730         BFR   B+,04,00      STACK NAMED BY THE B REGISTER OR
018 36 0     1731   *C    LDR - 0             BY THE 44-FIELD OF THE STP
018 37 0     1732         LDB   AVAIL
018 38 0     1733         STA - 0,67
018 39 0     1734         CAD - 0
018 40 0     1735         STR - 0,04
018 41 0     1736   *A    STB   *,04
018 42 0     1737         STA   AVAIL,04
018 43 0     1738   INSX  BUN   *
018 44 0     1739   NEWTX DEFN  INSX
018 45 0     1739   *B    LDR   MAMAX         IF AVAIL STACK IS EMPTY, TRY TO
018 46 0     1740         CFR   SSC,04        INCREASE THE SIZE OF
018 47 0     1741         STR   AVAIL,04      ASSOCIATIVE MEMORY
018 48 0     1742         STR   D+,04
018 49 0     1743         DFL   MAMAX,00,1
018 50 0     1744   *D    CLL   *
018 51 0     1745         BCH   C-            IF NO ROOM IS LEFT, GIVE UP
018 52 0     1746   FULL  STP   WEMX
018 53 0     1747         BUN   WEM,EX0
018 54 0     1748         CNST  33941430000   COMPILER CAPACITY EXCEEDED


018 57 0     1749   REM2  CLL   SER
018 58 0     1750   REM   LDB   REMX          REMOVE INFORMATION FROM
018 59 0     1751         DLB - 9998,44,0      ASSOCIATIVE MEMORY LOCATION FOLLOWING
018 60 0     1752   REM1  STB   A+,04         (RB) ... NORMALLY THIS MEANS PULL OFF
018 61 0     1753         LDB - 0              TOP OF STACK NAMED BY THE B REGISTER
018 62 0     1754         CAD - 0             OR NAMED IN A 44-FIELD OF STP INSTRUCTION
018 63 0     1755   REMX  IBB   *,9999
018 64 0     1756         DBB   *+1,9999      IF THE STACK IS EMPTY, EXIT
018 65 0     1757         LDR   AVAIL         OTHERWISE MARK LOCATION AVAILABLE
018 66 0     1758         STB   AVAIL,04       FOR FUTURE USE
018 67 0     1759         STR - 0,04
018 68 0     1760   *A    STA   *,04          EXIT WITH THE REMOVED QUANTITY IN
018 69 0     1761         LDB   REMX          REGISTER A, TO THE LOCATION SPECIFIED
018 70 0     1762         DLB - 9999,44,0     IN THE 44-FIELD OF THE BUN INSTRUCTION
018 71 0     1763         BUN - 0

018 73 0     1764   ASSN1 CAD   VARB          ASSIGN A PLACE FOR A VARIABLE,
018 74 0     1765         SLA   4             OR CONSTANT, OR TEMP STORAGE,
018 75 0     1766         STA - 0,64          IF ITS NOT IN MEMORY ALREADY
018 76 0     1767         DFL   VARB,04,1
018 77 0     1768   ASSN  CAD - 0
018 78 0     1769         BFA   ASSN1,64,0
018 79 0     1770   ASSNX BUN   *

018 81 0     1771   CONV  CAD - 0             PUT OUT MONITOR CODING
018 82 0     1772         LDR   DICT+16
018 83 0     1773         STR   EXPLN
018 84 0     1774         LDR   V8
018 85 0     1775         STB   STPV3,44      FOR A LABEL,TO THE LABEL PROCESSOR
018 86 0     1776         BFA   F+,11,9
018 87 0     1777         LDR   MONGN+1
018 88 0     1778         STR   EXPLN
018 89 0     1779         LDR   MNTRE         OTHERWISE TO THE MONITOR ROUTINE
018 90 0     1780         STA   STPV3,22      PUT TYPE IN THE STP INSTRUCTION
018 91 0     1781         BFA   F+,11,1
018 92 0     1782         BFA   F+,11,8       MONITOR FUNCTION NAMES
018 93 0     1783         LDB   VIMAG           (ARRAY NAME IS IN VIMAG)
018 94 0     1784   *F    STR   V3
018 95 0     1785         CAD - 1
018 96 0     1786         STA   SYMBL
018 97 0     1787         STB   RR0,21        MAKE UP A CONSTANT WITH THE
018 98 0     1788         STP   NMBRX         LEADING ALPHABETIC CHARACTERS
018 99 0     1789         BUN   NMBR          (OR NUMERIC LABEL QUANTITY)
019 00 0     1790         STP   ASSNX
019 01 0     1791         BUN   ASSN
019 02 0     1792         SLA   2
019 03 0     1793   CONV3 STA   BUN3V,44      PUT ADDRESS OF THIS CONSTANT
019 04 0     1794         CAD   G2            IN BUN INSTRUCTION
019 05 0     1795         BUN   INTRP

                                              SECTION C.  THE EXEUCTOR CO-ROUTINE

019 09 0     1796   MAXCM CAD   OPMAX
019 10 0     1797         BUN   EXIT
019 11 0     1798   MINCM CAD   OPMIN
019 12 0     1799   EXIT  STP   CMPLX
019 13 0     1800         BUN   CMPL
019 14 0     1801   NORM  STP   EXCTR         NORMAL EXIT TO THE
019 15 0     1802         BUN   SCAN           SCANNER CO-ROUTINE
019 16 0     1803   ANALZ STA   TEMP,64       AT THIS POINT WE USUALLY GO TO
019 17 0     1804         DLB   TEMP,64,0     CMPL(THE COMPILER) BUT SOME SPECIAL
019 18 0     1805         BFA   A+,01,1        CASES OCCUR
019 19 0     1806         BFA   B+,01,4
019 20 0     1807         BFA   C+,01,5
019 21 0     1808         BUN   EXIT
019 22 0     1809   *A    BSA - 0,6           SPECIAL CONTROL OPERATOR, BRANCH
019 23 0     1810         BUN   EXIT           DIRECTLY TO IT
019 24 0     1811   *B    CAD - 0
019 25 0     1812   ANALY STA   INSX,04       SET UP MODE FIRST, THEN GO DIRECTLY
019 26 0     1813         DLB   MODE,44,0
019 27 0     1814         BUN   INS1
019 28 0     1815   *C    STB   D+,04
019 29 0     1816         LDB   MODE          PICK UP MODE FIRST, THEN GO DIRECTLY
019 30 0     1817         CAD - 0
019 31 0     1818   *D    BUN   *
019 32 0     1819   EXCTR BUN   ANALZ         EXIT-ENTRANCE LINE



019 36 0     1820   COMMA BSA   A+,1          COMMA FOUND, WE CANT BE IN NORMAL MODE
019 37 0     1821         DLB - 0,64,0
019 38 0     1822   COMMX F4241 6273,30,0     BRANCH TO THE COMMA-GENERATOR
019 39 0     1823   *A    STP   WEMX           SPECIFIED BY THIS MODE.
019 40 0     1824         BUN   WEM,NLRB
019 41 0     1825         CNST  31545000000   MISPLACED COMMA


019 44 0     1826   MODCM STP   CMPLX         MOD COMMA IS THOUGHT OF AS )CRD(
019 45 0     1827         BUN   RIGHT
019 46 0     1828         STP   CMPLX
019 47 0     1829         BUN   WMG,CRD
019 48 0     1830         CAD   LPAR
019 49 0     1831         BUN   EXIT


019 52 0     1832   OVRLY CAA   G12           GENERATE STP,BUN
019 53 0     1833         STP   INTRX
019 54 0     1834         BUN   INTRP         FOLLOWED BY N  (THE SEGMENT NUMBER)


019 57 0     1835   GO    IFL   TAG,00,1      SET UP TO EXPECT A LABEL
019 58 0     1836         CAD   CRT           AND COMPILE A CIRCLE-T OPERATOR
019 59 0     1837         BUN   EXIT


019 62 0     1838   TO    DEFN  NORM          IGNORE THE WORD TO

019 64 0     1838   SWTCH STP   CMPLX         SET UP TO PROCESS A SWITCH STATEMENT
019 65 0     1839         BUN   LEFT          SWITCH E,(L,...,L)
019 66 0     1840         IFL   DELTA,00,5
019 67 0     1841         DFL   SWCM,62,29
019 68 0     1842         CAD   CRH
019 69 0     1843         BUN   EXIT

019 71 0     1844   SWCM  BUN   GO            IF PROC. THE LABELS, ACT LIKE GO TO
019 72 0     1845         IFL   SWCM,62,29
019 73 0     1846         STP   NULSX
019 74 0     1847         BUN   NULSB         OTHERWISE,EVALUATE E, AND LBC E.
019 75 0     1848         STP   ASMBX
019 76 0     1849         BUN   ASMBL,BUNFB
019 77 0     1850         CLL   DEX           THEN COMPILE -BUN FORWARD AND
019 78 0     1851         BUN   GO            ACT LIKE GO TO


019 81 0     1852   UNTIL IFL   PSI,00,01
019 82 0     1853         CAD   LOCN
019 83 0     1854         STA   BREF,64
019 84 0     1855         STP   CMPLX         PUT OUT A BACKWARD REFERENCE OPERATOR,
019 85 0     1856         BUN   WMG,BREF      TO THE PRESENT LOCATION
019 86 0     1857         CAD   CRU           COMPILE A CIRCLE-U OPERATION
019 87 0     1858   *A    IFL   DELTA,22,1
019 88 0     1859         BUN   EXIT


019 91 0     1860   IF    CAD   OPIF          IF AND UNTIL  TURN ON SWITCH
019 92 0     1861         BUN   A-            WHICH CHANGES = SIGN INTO EQL


019 95 0     1862   ETHR  STP   CMPLX         EITHER IS JUST A CIRCLE E OPERATOR
019 96 0     1863         BUN   WMG,CRE       AND A LEFT PARENTHESIS
019 97 0     1864         STP   CMPLX
019 98 0     1865         BUN   LEFT
019 99 0     1866         IFL   PSI,00,01
020 00 0     1867         BUN   NORM


020 03 0     1868   OR    STP   EXCTR
020 04 0     1869         BUN   SCAN
020 05 0     1870         STA   SMBL
020 06 0     1871         BFA   A+,92,69
020 07 0     1872         STP   CMPLX         OR,    NOT OR IF.
020 08 0     1873         BUN   WMG,BOR       COMPILE A BOOLEAN OR
020 09 0     1874   *B    CAD   SMBL
020 10 0     1875         BUN   EXIT
020 11 0     1876   *A    STP   CMPLX         OR IF.
020 12 0     1877         BUN   RIGHT         THIS ) MATCHES THE EITHER
020 13 0     1878         STP   ASMBX
020 14 0     1879         BUN   ASMBL,BUNFR   PUT OUT A BUN FORWARD
020 15 0     1880         STP   CMPLX
020 16 0     1881         BUN   LEFT          AND ANOTHER EITHER
020 17 0     1882         IFL   PSI,00,1
020 18 0     1883         BUN   IF            AND THEN THE IF


020 21 0     1884   WISE  CFA   DCLMD,64      OTHERWISE SENSED.
020 22 0     1885         BCE   B+
020 23 0     1886   *A    STP   CMPLX         IF IN  EITHER IF  CONTEXT,
020 24 0     1887         BUN   RIGHT         ACT LIKE  OR IF
020 25 0     1888         STP   ASMBX
020 26 0     1889         BUN   ASMBL,BUNFR
020 27 0     1890         IFL   DELTA,00,4
020 28 0     1891         CAD   CRW
020 29 0     1892         BUN   EXIT          THEN PUT OUT CIRCLE-W OPERATOR.
020 30 0     1893   *B    LDR   RR2
020 31 0     1894         STR   RR3           IF IN TYPE DECLARATION, SET
020 32 0     1895         LDB   LEVEL         RR3 TO CURRENT TYPE
020 33 0     1896         DBB   NORM,1        AND IF OUTSIDE OF PROCEDURE DECLARATIONS,
020 34 0     1897         STR   RR1           PUT IT INTO RR1 ALSO.
020 35 0     1898         BUN   NORM


020 38 0     1899   ENTER IFL   TAG,00,1
020 39 0     1900         STP   EXCTR
020 40 0     1901         BUN   SCAN
020 41 0     1902         STP   LINKX         LINK TO SUBROUTINE
020 42 0     1903         BUN   LINK2
020 43 0     1904         BUN   NORM


020 46 0     1905   STOP  STP   CMPLX         COMPILE CIRCLE Z
020 47 0     1906         BUN   WMG,CRZ
020 48 0     1907   SCT   CLA   SCRTB         AND AN ACCUMULATOR SYMBOL.
020 49 0     1908         BUN   EXIT


020 52 0     1909   RETN  STP   VSUBX         RETURN.   SEE VSUB.
020 53 0     1910         BUN   VSUB
020 54 0     1911         BUN   NORM


020 57 0     1912   COMNT CLL   TAG           COMMENT.
020 58 0     1913         STP   INPTX
020 59 0     1914         CAD   CHAR          BYPASS CHARACTERS
020 60 0     1915         BFA   SCN7,02,13    UNTIL WE SEE A SEMICOLON
020 61 0     1916         BUN   INPT


020 64 0     1917   FOR   STP   CMPLX         CIRCLE X - WILL GENERATE THE FINAL BUN
020 65 0     1918         BUN   WMG,CRX
020 66 0     1919         STP   CMPLX
020 67 0     1920         BUN   LEFT
020 68 0     1921         DFL   BETA,62,29    SET TO STORE NEXT CHARACTERS
020 69 0     1922         CAD   CHAR          AWAY (UP UNTIL THE = SIGN)
020 70 0     1923         SLA   4
020 71 0     1924         STP   INSX,RV
020 72 0     1925         BUN   INS
020 73 0     1926         CLL   ALPHA
020 74 0     1927         IFL   ALPHA,01,1    ALPHA TELLS WHAT KIND OF
020 75 0     1928         BUN   C+            ITERATION LIST ELEMENT WE HAVE


020 78 0     1929   FORCM CLL   PI            COMMA IN ITERATION LIST.
020 79 0     1930         LDR   ALPHA
020 80 0     1931         BFR   A+,01,1
020 81 0     1932         BFR   B+,01,2
020 82 0     1933         DFL   ALPHA,01,2
020 83 0     1934         CLL   PHI           THE V=(E1,E2,E3),  CASE.
020 84 0     1935         STP   FSUBX         ASSEMBLE STP,BUN
020 85 0     1936         BUN   FSUB2         RUN BACK THE V=
020 86 0     1937         BUN   C+
020 87 0     1938   *B    STP   SEMIX         THE V=(E1,E2,  CASE
020 88 0     1939         BUN   SEMIC         FINISH INCREMENTATION OF V
020 89 0     1940         STP   REMX,EXEC
020 90 0     1941         BUN   REM,*+2
020 91 0     1942   G1    F424  6141,0,*
020 92 0     1943         STP   FXUPX         FIX UP BUN INSTRUCTION
020 93 0     1944         BUN   FXUP
020 94 0     1945         STP   CMPLX         COMPILE AN UNTIL OPERATOR
020 95 0     1946         BUN   WMG,CRU
020 96 0     1947         IFL   PI,00,1
020 97 0     1948         DFL   DELTA,01,2
020 98 0     1949         IFL   ALPHA,01,1
020 99 0     1950         CAD   TOP           AND THE LEQ OR GEQ RELATION
021 00 0     1951         BUN   EXIT
021 01 0     1952   *A    LDB   MODE
021 02 0     1953         LDR - 0
021 03 0     1954         BFR   B+,22,2
021 04 0     1955         IFL   ALPHA,00,1    THE V=(E1,  CASE.
021 05 0     1956         STP   CMPLX
021 06 0     1957         BUN   RIGHT         ASSEMBLE V=E1, STP, BUN
021 07 0     1958         STP   QSUBX
021 08 0     1959         BUN   QSUB
021 09 0     1960         STP   FSUBX         RUN BACK V=V
021 10 0     1961         BUN   FSUB1
021 11 0     1962         STP   RUNX
021 12 0     1963         BUN   RUN
021 13 0     1964         STP   EXCTR
021 14 0     1965         BUN   SCAN
021 15 0     1966         CFA   HYPH          REMEMBER IF E2 BEGINS WITH
021 16 0     1967         LDR   RLEQ          THE CHARACTER MINUS
021 17 0     1968         BCU   *+2
021 18 0     1969         LDR   RGEQ
021 19 0     1970         STR   TOP
021 20 0     1971         STA   SYMBL         COMPILE +, AND THEN CONTINUE SCANNING
021 21 0     1972         STP   CMPLX
021 22 0     1973         BUN   WMG,PLUS
021 23 0     1974         CAD   SMBL
021 24 0     1975         BUN   EXIT
021 25 0     1976   *B    STP   QSUBX         THE V=E1, CASE.
021 26 0     1977         BUN   QSUB
021 27 0     1978         STP   FSUBX         ASSEMBLE V=E1, STP, BUN
021 28 0     1979         BUN   FSUB1         SCAN V= AGAIN
021 29 0     1980   *C    CLL   DELTA
021 30 0     1981         IFL   DELTA,00,3
021 31 0     1982         BUN   NORM


021 34 0     1983   SEMI  BSA   C+,2          SEMICOLON GENERATOR.
021 35 0     1984         LDB   OMCRN         CHECKS FIRST FOR LABEL MODE.
021 36 0     1985         CLL   OMCRN         EXIT IF EXPECTING A SEMICOLON
021 37 0     1986         DBB   NORM,1
021 38 0     1987         CFA   FUNMD,64
021 39 0     1988         BCE   A+            CHECK FOR FUNCTION OR PROCEDURE CALL
021 40 0     1989         CFA   PRCMD,64
021 41 0     1990         BCE   B+
021 42 0     1991         LDB   DELTA         OTHERWISE BRANCH ACCORDING TO THE
021 43 0     1992         BUN - *+1            SETTING OF DELTA
021 44 0     1993         BUN   DEL0          DELTA UNSET
021 45 0     1994         BUN   DEL1          FOR STATEMENT,AFTER (E1,E2,E3)
021 46 0     1995         BUN   DEL2          THIS LOCATION IS WASTED
021 47 0     1996         BUN   DEL3          FOR STATEMENT, AFTER E
021 48 0     1997         BUN   DEL4          AFTER OTHERWISE,SEGMENT,SUBROUTINE,ETC.
021 49 0     1998   DEL5  STP   CMPLX         DECLARATION (E.G., INTEGER, FORMAT)
021 50 0     1999         BUN   RIGHT
021 51 0     2000         BUN   DEL0
021 52 0     2001   *B    STP   YSUBX         PROCESS PARAMETER
021 53 0     2002         BUN   YSUB1
021 54 0     2003   *B    CAA - 0             INCREASE SEMICOLON COUNT
021 55 0     2004         IFL - 0,12,10
021 56 0     2005         BSA   NORM,0
021 57 0     2006   MEMST IFL   TAG,00,1      IF IT WAS 2,SET TO EXPECT LABELS.
021 58 0     2007         BUN   NORM
021 59 0     2008   *A    STP   PRSBX,CRC     COMPILE A PARAMETER CALL OP
021 60 0     2009         BUN   PRSB
021 61 0     2010         LDB   FUNS
021 62 0     2011         BUN   B-
021 63 0     2012   DEL1  STP   CMPLX         FINISH FOR LIST
021 64 0     2013         BUN   RIGHT
021 65 0     2014         CLL   PI
021 66 0     2015         BUN   Q+            (SEE Q+ BELOW)
021 67 0     2016   *E    BFA   DEL4,11,0
021 68 0     2017         STP   WEMX
021 69 0     2018         BUN   WEM,DEL4
021 70 0     2019         CNST  34661000000   EXTRA OPERAND
021 71 0     2020   *F    STP   WEMX
021 72 0     2021         BUN   WEM,A+
021 73 0     2022         CNST  30147000000   IMPROPER SUBSCRIPT
021 74 0     2023   DEL0  STP   SEMIX         SEMICOLON IS  )(
021 75 0     2024         BUN   SEMIC
021 76 0     2025   DEL4  STP   REMX,OPRND    ARE THERE ANY OPERANDS ON THE STACK
021 77 0     2026         BUN   REM,E-        IF SO THEY HAD BETTER BE ACCUM SYMBOLS
021 78 0     2027   *A    STP   REMX,DIMS     ARE THERE ANY DIMENSIONS LEFT
021 79 0     2028         BUN   REM,F-        WE HOPE NOT
021 80 0     2029   *A    CLL   SER
021 81 0     2030         CLL   DEX           IF EVERYTHING IS COPACETIC,
021 82 0     2031         CLL   PI            CLEAR ALL SWITCHES IN SIGHT,
021 83 0     2032         CLL   PSI           IN PREPARATION FOR A NEW STATEMENT
021 84 0     2033         CLL   DELTA
021 85 0     2034         CLL   TAG
021 86 0     2035         BUN   NORM
021 87 0     2036   *C    STP   DECNX
021 88 0     2037         BUN   DECN
021 89 0     2038         BUN   DEL5
021 90 0     2039   DEL2  DEFN  *
021 91 0     2039   DEL3  STP   QSUBX         ASSEMBLE STP,BUN IN FOR LOOP
021 92 0     2040         BUN   QSUB
021 93 0     2041   *Q    IFL   PSI,00,01     ASSEMBLE BUN AROUND THE LOOP
021 94 0     2042         STP   ASMBX
021 95 0     2043         BUN   ASMBL,BUNFR
021 96 0     2044         STP   CMPLX         COMPILE INPUT OR OUTPUT, IF THIS
021 97 0     2045   UPSLN F424  CRA,01,WMG    FOR APPEARED THERE.
021 98 0     2046   *E    STP   REMX,EXEC     FIX UP ALL THE BUNS TO THIS FOR LOOP
021 99 0     2047         BUN   REM,C+
022 00 0     2048   *A    STP   DECNX         DROP THE FOR MODE
022 01 0     2049         BUN   DECN
022 02 0     2050         CLL   PHI
022 03 0     2051   *B    STP   REMX,FV       RELEASE THE SYMBOLS FROM THE
022 04 0     2052         BUN   REM,B-        FOR-VARIABLE STACK
022 05 0     2053         BUN   DEL4          THEN DO LIKE A REGULAR SEMICOLON.
022 06 0     2054   *C    STP   FXUPX
022 07 0     2055         BUN   FXUP
022 08 0     2056         BUN   E-


022 11 0     2057   INPUT CAD   CRJ
022 12 0     2058         BUN   A+


022 15 0     2059   OUTPT CAD   CRK           ASSEMBLE BUN FORWARD
022 16 0     2060   *A    STA   STSV
022 17 0     2061   *B    STP   ASMBX
022 18 0     2062         BUN   ASMBL,BUNFR
022 19 0     2063         IFL   TAG,00,01
022 20 0     2064         BUN   NLRB


022 23 0     2065   PUTCM STP   NULSX         COMMA BETWEEN TWO INPUT OR
022 24 0     2066         BUN   NULSB         OUTPUT DECLARATIONS
022 25 0     2067         BUN   B-


022 28 0     2068   LABEL STP   ASMBX         ASSEMBLE  BUN 0000
022 29 0     2069         BUN   ASMBL,BUNZ    AS THE FIRST INSTRUCTION OF A DECLARATION
022 30 0     2070         IFL   UPSLN,62,29
022 31 0     2071         STP   CMPLX
022 32 0     2072         BUN   WMG,CRI       COMPILE CIRCLE I, CIRCLE A
022 33 0     2073         CAD   CRA
022 34 0     2074         BUN   EXIT


022 37 0     2075   LABCM DEFN  *
022 38 0     2075   *A    STP   PRSBX,CRA     COMPILE CIRCLE A
022 39 0     2076         BUN   PRSB          (INPUT OR OUTPUT)


022 42 0     2077   NLRB  CLL   DEX
022 43 0     2078         BUN   NORM          MARK B REGISTER UNKNOWN


022 46 0     2079   FRMT  STP   ASMBX         FORMAT. ASSEMBLE BUN AROUND.
022 47 0     2080         BUN   ASMBL,BUNFR
022 48 0     2081         IFL   DELTA,00,5
022 49 0     2082         STP   CMPLX
022 50 0     2083         BUN   LEFT


022 53 0     2084   FRMCM IFL   TAG,00,1      PROCESS FORMAT STRING.
022 54 0     2085         STP   EXCTR
022 55 0     2086         BUN   SCAN
022 56 0     2087         BFA   LEFT,02,02    (THIS IS A LITTLE SCANNER)
022 57 0     2088         CLL   DESCR
022 58 0     2089   *L    STP   INSX,DIMS     BEGIN NEST
022 59 0     2090         BUN   INS2
022 60 0     2091         LDB   DIMS
022 61 0     2092         CAD   DESCR
022 62 0     2093         SLS   8
022 63 0     2094         STA - 0,23
022 64 0     2095   *A    CLL   INSTR
022 65 0     2096   *B    CLL   DESCR
022 66 0     2097         STP   PASSX
022 67 0     2098         BUN   PASS
022 68 0     2099         BFA   L-,02,24      LEFT PARENTHESIS
022 69 0     2100         BFA   N+,91,8       NUMERIC
022 70 0     2101         BFA   D+,02,03      DOT
022 71 0     2102         BFA   C+,02,23      COMMA
022 72 0     2103         BFA   S+,02,14      STAR
022 73 0     2104         BFA   R+,02,04      RIGHT PARENTHESIS
022 74 0     2105         SRT   2
022 75 0     2106         CAD   DESCR
022 76 0     2107         SLT   7
022 77 0     2108         STA   INSTR,55      INSERT NUMBER(33 FIELD)ALPHA(52FIELD)
022 78 0     2109         BUN   B-
022 79 0     2110   *N    SRT   1             BUILD NUMBER
022 80 0     2111         CAD   DESCR
022 81 0     2112         SLT   1
022 82 0     2113         STA   DESCR
022 83 0     2114         BUN   PASS
022 84 0     2115   *D    CAD   DESCR         INSERT NUMBER IN 83-FIELD
022 85 0     2116         SLA   2
022 86 0     2117         STA   INSTR,83
022 87 0     2118         BUN   B-
022 88 0     2119   *R    DFL   L+,62,29
022 89 0     2120   *C    CAD   DESCR         INSERT NUMBER IN EITHER 02 OR 83 FIELD
022 90 0     2121         LDR   INSTR
022 91 0     2122         BZR   L+            (OR DO NOTHING - AFTER *)
022 92 0     2123         BFR   F+,83,0
022 93 0     2124         STA   INSTR,02
022 94 0     2125   *R    STP   WRITX
022 95 0     2126         BUN   WRIT2
022 96 0     2127         LDB   DIMS
022 97 0     2128         IBB   NORM,9999
022 98 0     2129   *L    BUN   A-
022 99 0     2130         IFL   L-,62,29      RIGHT PARENTHESIS.  GET
023 00 0     2131         STP   REMX,DIMS     LOCATION OF MATCHING LEFT PARENTHESIS
023 01 0     2132         BUN   REM,*+2
023 02 0     2133   G2    F424  7043,0,*
023 03 0     2134         SRS   4
023 04 0     2135         LSA   1
023 05 0     2136         STA   INSTR
023 06 0     2137         BUN   R-
023 07 0     2138   *S    DFL   ZETA,62,35    ALPHANUMERIC STRINGS.
023 08 0     2139   *S    CLL   IOPUS
023 09 0     2140         CLL   INSTR
023 10 0     2141   *B    STP   INPTX
023 11 0     2142         BUN   INPT          TRANSFER FIVE CHARACTERS
023 12 0     2143         DLB   IOPUS,04,2    AT A TIME, UP TO AND
023 13 0     2144         SLA - 0             INCLUDING THE NEXT ASTERISK.
023 14 0     2145         ADL   INSTR
023 15 0     2146         CAD   CHAR
023 16 0     2147         BFA   C+,02,14
023 17 0     2148         DBB   INPT,9992
023 18 0     2149         IFL   INSTR,12,20
023 19 0     2150         STP   WRITX
023 20 0     2151         BUN   WRIT2
023 21 0     2152         BUN   S-
023 22 0     2153   *C    IFL   INSTR,12,30
023 23 0     2154         IFL   ZETA,62,35
023 24 0     2155         BUN   R-
023 25 0     2156   *F    SLA   2
023 26 0     2157         STA   INSTR,83
023 27 0     2158         BUN   R-


023 30 0     2159   SGMT  CAA   PREV          SEGMENT BEGINNING.
023 31 0     2160         ADA   BUF+98        IF BUFFER NOT EMPTY, DUMP IT
023 32 0     2161         BZA   *+3
023 33 0     2162         STP   WRITX
023 34 0     2163         BUN   WRIT5
023 35 0     2164         IFL   BUF,64,1      INCREASE SEGMENT NUMBER
023 36 0     2165         CAD   BUF
023 37 0     2166         EXT   BCUL2
023 38 0     2167         STA   BUF
023 39 0     2168         SLA   4
023 40 0     2169         ADD   LOCN
023 41 0     2170         STP   INSX,FUNS     STORE SEG NO,LOCN IN FUN-STACK
023 42 0     2171         BUN   INS
023 43 0     2172         IFL   TAG,00,1
023 44 0     2173         IFL   DELTA,04,4
023 45 0     2174         CAD   LOCN          FIX UP FORWARD REFERENCES TO THIS
023 46 0     2175         LDR   BUF            SEGMENT NUMBER
023 47 0     2176         STR   LOCN
023 48 0     2177         STA   LOCNP
023 49 0     2178         STP   EXCTR
023 50 0     2179         BUN   SCAN
023 51 0     2180         IFL   ZUTA,62,39
023 52 0     2181         STP   TRTGX
023 53 0     2182         BUN   TRTG
023 54 0     2183         DFL   ZUTA,62,39
023 55 0     2184         CAD   CRV           COMPILE CIRCLE V,WHICH
023 56 0     2185         BUN   EXIT          WILL FINISH THE SEGMENT.


023 59 0     2186   END   STP   CMPLX         THE WORD END.
023 60 0     2187         BUN   RIGHT
023 61 0     2188   *A    IFL   TAG,00,1
023 62 0     2189         STP   EXCTR         SCAN UNTIL WE REACH
023 63 0     2190         BUN   SCAN
023 64 0     2191         CFA   CWEND,67      END,RIGHT PAREN,SEMICOLON,OR COMMA.
023 65 0     2192         BCE   END
023 66 0     2193         CFA   RPAR
023 67 0     2194         BCE   END
023 68 0     2195         CFA   SMCLN
023 69 0     2196         BCE   ANALZ
023 70 0     2197         CFA   KOMA,67
023 71 0     2198         BCU   A-
023 72 0     2199         CLL   TAG
023 73 0     2200         BUN   ANALZ


023 76 0     2201   FINSH STP   CMPLX         FINISH.
023 77 0     2202         BUN   RIGHT         THIS RIGHT PARENTHESIS SHOULD MATCH
023 78 0     2203         MLS 4 T             THE LEFT PAREN TO WHICH WE
023 79 0     2204         MNC 4 400,2,5       INITIALIZED THE OPERATOR STACK
023 80 0     2205         BUN   700


023 83 0     2206   EQUL  CFA   ARAMD,64
023 84 0     2207         BCE   B+
023 85 0     2208   *A    CAD   CRB           = IN STATEMENT.
023 86 0     2209         BUN   EXIT          REPLACE BY CIRCLE B OP.
023 87 0     2210   *B    STP   NULSX         IF = APPEARS IN ARRAY DECLARATION,
023 88 0     2211         BUN   NULSB         GO INTO ARRAY-FILL MODE.
023 89 0     2212         CAD   ARFMD
023 90 0     2213         BUN   ANALY


023 93 0     2214   INDEX STP   INSX,AVAIL    INDEX OP IS INSERTED BETWEEN A AND (
023 94 0     2215         BUN   INS           OF A(I). IT BEGINS PROCESSING SUBSCRIPTS.
023 95 0     2216         STR   A+,04         FIRST FIND SOME AVAILABLE LOCATION
023 96 0     2217         STR   B+,04         IN ASSOC MEMORY. THIS WILL BE CALLED
023 97 0     2218         SLT   14            THE INCREMENT WORD FOR THIS ARRAY.
023 98 0     2219         STP   INSX,ARAS     IN ARAS- AND OPERAND-STACKS WE PUT A
023 99 0     2220         BUN   INS           REFERENCE TOTHIS INCREMENT WORD, WHICH
024 00 0     2221         LDB   OPRND         IS INITIALIZED TO    V 5 R 0000 AAAA
024 01 0     2222         DLB - 0,64,0        V=0 NORMAL  V=1 CALL BY NAME V=2 MONITOR
024 02 0     2223         LDR - 0             R=0 FLOATING   R=1 FIXED
024 03 0     2224   *A    STR   *,23          AAAA=LOCATION OF OTHER INFORMATION
024 04 0     2225   *B    STB   *,08
024 05 0     2226         LDB   OPRND
024 06 0     2227         STA - 0,64
024 07 0     2228         STP   CMPLX         PUT CIRCLE-R OPERATOR ONTO THE STACK,
024 08 0     2229         BUN   WMG,CRR       ALSO A LEFT PARENTHESIS
024 09 0     2230         STP   CMPLX
024 10 0     2231         BUN   LEFT
024 11 0     2232         CAD   V6
024 12 0     2233         STP   CMPLX         FURTHERMORE,INSERT THE CHARACTERS  0 +
024 13 0     2234         BUN   VRBL          INTO THE INPUT STRING
024 14 0     2235         CAD   PLUS
024 15 0     2236         IFL   PHI,00,1      FINALLY, SET UP TO IGNORE THE LEFT
024 16 0     2237         BUN   EXIT          PARENTHESIS WE LL GET NEXT FROM SCANNER.


024 19 0     2238   NDXCM STP   PRSBX,CRY     COMMA IN SUBSCRIPT POSITION.
024 20 0     2239         BUN   PRSB          FINISH EVALUATING SUBSCRIPT,MAKE SURE
024 21 0     2240         STP   SPERX         IT IS FIXED POINT.
024 22 0     2241         BUN   SPERO         MULTIPLY IT BY THE PROPER DIMENSION
024 23 0     2242         STP   CMPLX
024 24 0     2243         BUN   WMG,PLUS      INSERT PLUS OPERATOR
024 25 0     2244         CAD   PAR
024 26 0     2245         BFA   A+,11,2
024 27 0     2246         BUN   B+
024 28 0     2247   *A    DLB   PAR,64,0      IF THE DIMENSION WAS A CONSTANT,
024 29 0     2248         LDR - 1             THE INCREMENT WORD CONTAINS SOME INCREMNT
024 30 0     2249         STR   TEMP1         WE HAVE SUPPRESSED FROM THE TARGET CODE,
024 31 0     2250         LDB   ARAS          AND WE MULTIPLY IT BY THE DIMENSION
024 32 0     2251         DLB - 0,64,0        AND REPLACE IT IN THE INCREMENT WORD.
024 33 0     2252         CAD - 0
024 34 0     2253         EXT   EX42
024 35 0     2254         MUL   TEMP1
024 36 0     2255         STR - 0,64
024 37 0     2256   *B    LDB   ARAS
024 38 0     2257         LDR - 0             IF AN EMPTY SUBSCRIPT APPEARED,
024 39 0     2258         BFR   NORM,22,0     PUT THIS DIMENSION ON MULT STACK
024 40 0     2259         CAD   PAR
024 41 0     2260   INSXX STP   INSX,MULT
024 42 0     2261         BUN   INS
024 43 0     2262         BUN   NORM


024 46 0     2263   SPERO STP   CMPLX         MULTIPLY PREVIOUS RESULT BY
024 47 0     2264         BUN   WMG,DOT       THE NEXT DIMENSION
024 48 0     2265         IFL   CMPLX,04,6
024 49 0     2266         STP   REMX,DIMS
024 50 0     2267         BUN   REM,VRBL1     IF THERE IS NO NEXT DIMENSION.
024 51 0     2268         STP   WEMX
024 52 0     2269         BUN   WEM,VRBL1
024 53 0     2270         CNST  30147000000   USE 1,AND SAY IMPROPER SUBSCRIPT
024 54 0     2271   SPERX BUN   *


024 57 0     2272   DECN  LDB   MODE          DECREASE PARENTHESIS COUNT ON THIS MODE     ?? COL 1 WAS 0VX XX 0  VVXV
024 58 0     2273         DLB - 0,22,1                                                    ?? COL 1 WAS 0VX X( 0  VVXX
024 59 0     2274   DECNX DBB   *,100         AND IF IT IS NOW ZERO, PULL OFF THE         ?? COL 1 WAS 05X 7( 0  55XX
024 60 0     2275         STP   REMX,MODE     TOP OF THE MODE STACK
024 61 0     2276         BUN   REM,*+2
024 62 0     2277   G5    F424  0552,0,*
024 63 0     2278         CFA   NDXMD,64
024 64 0     2279         LDB   DECNX         IF WE FINISHED THE SUBSCRIPTS OF AN ARRAY
024 65 0     2280         BCU - 0             WE GO THROUGH MORE MANIPULATIONS
024 66 0     2281   MLTS  LDB   ARAS          OTHERWISE WE EXIT.
024 67 0     2282         DLB - 0,64,0        NOW WE FINISH PROCESSING ARRAY SBSCRIPTS
024 68 0     2283         STB   P+,04
024 69 0     2284         STB   Q+,04
024 70 0     2285         LDB - 0
024 71 0     2286         STB   R+,04         THE FINAL DIMENSION TO MULTIPLY BY
024 72 0     2287         CLA                 IS EITHER THE CONSTANT  1
024 73 0     2288         ADD - 0
024 74 0     2289         BSA   A+,1
024 75 0     2290         LDR   V4
024 76 0     2291         STR   PAR
024 77 0     2292         BUN   B+
024 78 0     2293   *A    STP   CMPLX         OR A PARAMETER TO THE PROCEDURE
024 79 0     2294         BUN   LEFT
024 80 0     2295         STP   SPERX
024 81 0     2296         BUN   SPERO         MULTIPLY BY IT.
024 82 0     2297         STP   CMPLX
024 83 0     2298         BUN   RIGHT
024 84 0     2299   *B    STP   REMX,ARAS     PULL OFF TOP OF ARRAY STACK
024 85 0     2300         BUN   REM,*+2
024 86 0     2301   G3    F424  6742,0,*
024 87 0     2302         SRT   10
024 88 0     2303   *P    CAD   *             INCR WORD/64 IS CHANGED FROM THE
024 89 0     2304         EXT   BCUL2         INCREMENT TO THE BASE ADDRESS PLUS THE
024 90 0     2305   *R    ADD   *             INCREMENT (MOD 10000)
024 91 0     2306   *Q    STA   *,64
024 92 0     2307         BFR   G+,22,0
024 93 0     2308         CAD   PAR           IF AN EMPTY SUBSCRIPT HAS APPEARED.
024 94 0     2309         STP   INSX,MULT
024 95 0     2310         BUN   INS           PUT LAST DIMENSION ONTO MULT-STACK
024 96 0     2311         STP   USUBX,CRN     WITH THE OTHERS
024 97 0     2312         BUN   USUB          PUT OUT THE RECALCULATED BASE ADDRESS
024 98 0     2313   *K    STP   REMX,MULT      AS A PARAMETER
024 99 0     2314         BUN   REM,I+        SET MULS TO MULT STACK IN REVERSE ORDER
025 00 0     2315   *C    STP   REMX,MULS
025 01 0     2316         BUN   REM,*+2       FORGET TOP ENTRY OF MULS, IT IS ZERO
025 02 0     2317   G4    F424  6938,0,*
025 03 0     2318   *A    IFL   KAPPA,00,1
025 04 0     2319         STP   PRSBX,CRC     STORE THE PARAMETER.
025 05 0     2320         BUN   PRSB
025 06 0     2321   *F    STP   REMX,MULS
025 07 0     2322         BUN   REM,J+
025 08 0     2323   *D    IFL   KAPPA,00,1    WE ARE FINISHED. PULL SPURIOUS + OPERATOR
025 09 0     2324         STP   REMX,OP       (WE GET AN EXTRA ONE FOR EACH
025 10 0     2325         BUN   REM,NORM       EMPTY SUBSCRIPT)
025 11 0     2326   TWL   HLT   12
025 12 0     2327   *J    BFA   E+,66,0
025 13 0     2328         STP   CMPLX         MULTIPLY TOGETHER ALL DIMENSIONS
025 14 0     2329         BUN   VRBL          BETWEEN EMPTY SUBSCRIPT POSITIONS
025 15 0     2330         STP   CMPLX
025 16 0     2331         BUN   WMG,DOT
025 17 0     2332         BUN   F-
025 18 0     2333   *I    STP   INSX,MULS
025 19 0     2334         BUN   INS
025 20 0     2335         BUN   K-
025 21 0     2336   *E    STP   REMX,OP       REMOVE EXTRA + SIGN AND STORE
025 22 0     2337         BUN   REM,A-         COMPUTED MULTIPLIER
025 23 0     2338   NN    HLT   99
025 24 0     2339   *G    LDB   MODE
025 25 0     2340         CAD - 0             IF NO EMPTY SUBSCRIPTS OCCURRED
025 26 0     2341         CFA   FUNMD,64       BUT IT IS A NAME CALL ANYWAY,
025 27 0     2342         BCU   NORM          WE PUT IT IN AS A NAME PARAMETER.
025 28 0     2343         LDB   FUNS
025 29 0     2344         CAD - 0
025 30 0     2345         STP   USUBX,CRN
025 31 0     2346         BSA   USUB,2
025 32 0     2347         BUN   NORM


025 35 0     2348   EMPTY CFA   PRCMD,64      EMPTY SUBSCRIPT POSITION OPERATOR
025 36 0     2349         BCU   A+
025 37 0     2350         LDB   SSC           IF IT IS SENSED WHILE COLLECTING
025 38 0     2351         CLL - 0             NEW PROCEDURE PARAMETERS,
025 39 0     2352         DFL - 0,12,10
025 40 0     2353         DFL - 0,23,89       CREATE A PSEUDO SIMPLE VARIABLE
025 41 0     2354         CAD   SSC           FOR THIS SUBSCRIPT MULTIPLIER
025 42 0     2355         SLA   4
025 43 0     2356         ADD - 0
025 44 0     2357         STP   INSX,OPRND    PUT IT INTO THE OPERAND STACK
025 45 0     2358         BUN   INS
025 46 0     2359   ARMS  STP   INSX,ARMS     AND INTO THE LIST OF MULTIPLIERS
025 47 0     2360         BUN   INS            FOR THIS ARRAY
025 48 0     2361         IFL   SSC,00,1
025 49 0     2362         IFL   KAPPA,00,1
025 50 0     2363         BUN   NORM
025 51 0     2364   *A    CFA   NDXMD,64      OTHERWISE CHECK THAT THIS EMPTY POSITION
025 52 0     2365         BCU   B+            OCCURS IN AN ARRAY PARAMETER
025 53 0     2366         LDB - 0             WHILE CALLING A PROCEDURE
025 54 0     2367         LDR - 0
025 55 0     2368         CFR   FUNMD,64
025 56 0     2369         BCU   B+
025 57 0     2370         LDB   FUNS
025 58 0     2371         CAD - 0
025 59 0     2372         BSA   B+,3
025 60 0     2373         STP   REMX,OP
025 61 0     2374         BUN   REM,E+
025 62 0     2375   *B    STP   WEMX
025 63 0     2376         BUN   WEM,NORM
025 64 0     2377         CNST  30149475000   IMPROPER EMPTY SUBSCRIPT POSITION
025 65 0     2378   *E    LDB   ARAS
025 66 0     2379         IFL - 0,22,1        RECORD IT IN ARAS
025 67 0     2380   SBL   CLA   SYMBL+1       AND PUT MARKER ON MULT STACK.
025 68 0     2381         BUN   INSXX


025 71 0     2382   COLON CLL   KAPPA         BEGINNING OF FUNCTION CALL
025 72 0     2383         LDB   OPRND
025 73 0     2384         DLB - 0,64,0
025 74 0     2385         CAD - 0             PUT NAME OF FUNCTION WERE CALLING
025 75 0     2386         STA   A+,64          ONTO FUN-STACK
025 76 0     2387         CAD   A+
025 77 0     2388         STP   INSX,FUNS
025 78 0     2389         BUN   INS
025 79 0     2390         CAD   CRO           COMPILE A CIRCLE-O
025 80 0     2391         BUN   EXIT
025 81 0     2392   *A    F4241 0,0,0


025 84 0     2393   FUNCM STP   PRSBX,CRC     COMMA IN PROCEDURE,FUNCTION CALL
025 85 0     2394         BUN   PRSB
025 86 0     2395         BUN   NORM          STORE THE PARAMETER


025 89 0     2396   DUMP  CAD   LEVEL
025 90 0     2397         SLA   4
025 91 0     2398         STP   INSX,DUMBS    PUT RECORD ON DUMB STACK,FOR OVERLAY
025 92 0     2399         BUN   INS
025 93 0     2400         DFL   S+,61,4
025 94 0     2401         DLB   LOCN,64,0
025 95 0     2402         DBB   MONT,400      MAKE SURE LOCN IS AT LEAST 400
025 96 0     2403         STP   ASMBX
025 97 0     2404         BUN   ASMBL,BUNZ
025 98 0     2405         STB   LOCN,64
025 99 0     2406         IFL   LOCN,44,4
026 00 0     2407   MONT  DFL   THI,62,71     MONITOR STATEMENT.
026 01 0     2408         IFL   TAG,00,1
026 02 0     2409         IFL   CHI,00,1      PREPARE FOR NUMERIC LABELS
026 03 0     2410         STP   EXCTR
026 04 0     2411         BUN   SCAN          GET NEXT ITEM FROM SCANNER.
026 05 0     2412         CFA   SMCLN
026 06 0     2413         BCU   *+5           IF IT IS A SEMICOLON WE EXIT
026 07 0     2414         DFL   THI,62,29
026 08 0     2415         STB   S+,61
026 09 0     2416         CLL   TAG
026 10 0     2417         BUN   ANALZ
026 11 0     2418         BFA   *+2,01,0      IF IT IS NOT AN OPERAND WE RECYCLE
026 12 0     2419         BUN   MONT+1
026 13 0     2420         DLB   L,64,0
026 14 0     2421         LDR - 0
026 15 0     2422         BFR   *+2,21,3
026 16 0     2423         DFL - 0,22,87       MARK OPERAND AS MONITORED,UNCLASSIFIED
026 17 0     2424   *S    BUN   A+,0299
026 18 0     2425         DFL - 0,12,60       OR IF PROCESSING DUMP,
026 19 0     2426         LDB   DUMBS         AS A VARIABLE TO BE DUMPED
026 20 0     2427         IFL - 0,45,1
026 21 0     2428         BUN   MONT+1
026 22 0     2429   *A    DFL - 0,12,80
026 23 0     2430         LDB   ARTHG
026 24 0     2431         STP   LIBRX         PUT MONITOR SUBROUTINE INTO PROGRAM
026 25 0     2432         BUN   LIBRF
026 26 0     2433         BUN   MONT+1


026 29 0     2434   SUBR  IFL   TAG,00,1      SUBROUTINE
026 30 0     2435         DFL   NU,62,29
026 31 0     2436         IFL   DELTA,00,4
026 32 0     2437         STP   ASMBX
026 33 0     2438         BUN   ASMBL,BUNFR   COMPILE BUN FORWARD
026 34 0     2439         STP   INSX,FUNS     PUT LOCN INTO FUNS
026 35 0     2440         BUN   INS2          (RETURN WILL LOOK AT THIS)
026 36 0     2441         STP   EXCTR
026 37 0     2442         BUN   SCAN          GET NAME OF SUBROUTINE FROM SCANNER
026 38 0     2443         STP   TRTGX
026 39 0     2444         BUN   TRTG          DEFINE IT
026 40 0     2445         STP   NEWTX,SAVET
026 41 0     2446         BUN   NEWT          SAVE TEMP STORAGES
026 42 0     2447         CAD   CRS
026 43 0     2448         BUN   EXIT          COMPILE CIRCLE S.


026 46 0     2449   EXTRN STP   EXCTR         EXTERNAL.
026 47 0     2450         BUN   SCAN
026 48 0     2451         IFL   EPSLN,00,1
026 49 0     2452         STA   V2
026 50 0     2453         IFL   TAG,00,1
026 51 0     2454         DFL   PEH,62,6        DONT LOOK ON LEVEL ZERO WHEN DOING
026 52 0     2455         STP   EXCTR           A DECLARATION
026 53 0     2456         BUN   SCAN          GET NAME FROM SCANNER
026 54 0     2457         IFL   PEH,62,6
026 55 0     2458         DLB   V2,64,0       IS IT AN EXT STATEMENT OR EXT PROCEDURE
026 56 0     2459         DBB   A+,PRCMD
026 57 0     2460         STP   TRTGX         EXTERNAL STATEMENT
026 58 0     2461         BUN   TRTG2         DEFINE IT
026 59 0     2462         CAD   BUF           RECORD ITS SEGMENT NUMBER
026 60 0     2463         DLB   L,64,0        (THE OVERLAY WILL FIX UP ANY
026 61 0     2464         DFL - 0,12,20
026 62 0     2465         STP   INSX
026 63 0     2466         BUN   INS1
026 64 0     2467         IFL   ALEPH,62,6    SEGMENT NUMBER)
026 65 0     2468         STP   ASMBX
026 66 0     2469         BUN   SMBL,BUNZ     COMPILE BUN FORWARD
026 67 0     2470         BUN   NORM
026 68 0     2471   *A    DLB   L,64,0        EXTERNAL PROCEDURE
026 69 0     2472         STB - 0,66          MARK AS 83 CODE.
026 70 0     2473         IFL - 0,22,83
026 71 0     2474         LDR   NRM           SCAN OFF THE PARAMETERS.


026 74 0     2475   PRCNT STR   C+,04         (R/04 IS EXIT LINE)
026 75 0     2476         CLL   V2
026 76 0     2477         STP   INPTX         BYPASS PARTS OF CARD
026 77 0     2478         BUN   INPT          UNTIL WE HAVE AN EXTRA RIGHT PARENTHESIS
026 78 0     2479         BFA   B+,02,04
026 79 0     2480         BFA   A+,02,24
026 80 0     2481         BUN   INPT
026 81 0     2482   *A    IFL   V2,00,2
026 82 0     2483   *B    DFL   V2,00,1
026 83 0     2484         BRP   INPT
026 84 0     2485   *C    BUN   *


026 87 0     2486   PROCD CLL   RR3           WORD PROCEDURE SENSED.
026 88 0     2487         LDR   VARB
026 89 0     2488         STR   FRSTP,04      SET FRSTP TO LOCATION OF 1ST PARAMETER
026 90 0     2489         LDR   PR3
026 91 0     2490         STR   PR1           SAVE PREFIX LIST
026 92 0     2491         CLL   PR3
026 93 0     2492         LDR   CHI
026 94 0     2493         CLL   CHI           SHUT OFF LABEL PROCESSING
026 95 0     2494         STR   CHI3
026 96 0     2495         STP   XSUBX         INITIALIZE THE DECLARATION
026 97 0     2496         BUN   XSUB          (THIS PART COMMON TO PROC AND FUNCTION)
026 98 0     2497         STA   LEVEL         SET LEVEL = KC
026 99 0     2498         STB - 0,21
027 00 0     2499         IFL - 0,21,3        MARK TYPE OF THIS PROCEDURE UNSPECIFIED
027 01 0     2500   NRM   BUN   NORM


027 04 0     2501   FUNC  STP   XSUBX         WORD FUNCTION SENSED.
027 05 0     2502         BUN   XSUB          DO INITIAL STEPS
027 06 0     2503         DFL - 0,11,2        SET TAU DIGIT = 6
027 07 0     2504         IFL   FNSW,00,1
027 08 0     2505         CAD   TOP           COMPILE NAME OF THIS FUNCTION
027 09 0     2506         BUN   EXIT


027 12 0     2507   PRCCM STP   YSUBX         RECORD PARAMETER
027 13 0     2508         BUN   YSUB1
027 14 0     2509         BUN   NORM


027 17 0     2510   ARAPM LDB   OPRND         ARRAY NAME APPEARS AS PARAMETER
027 18 0     2511         CAD - 0
027 19 0     2512         SLT   2
027 20 0     2513         STA   ARMS,44       PUT NAME INTO ARMS
027 21 0     2514         STP   YSUBX
027 22 0     2515         BUN   YSUB2         MARK IT AS PARAMETER
027 23 0     2516         BUN   NORM


027 26 0     2517   INTG  CLL   RR2           INTEGER DECLARATION
027 27 0     2518         IFL   RR2,21,1       SET TYPE = FIXED
027 28 0     2519         BUN   ARRAY


027 31 0     2520   BOOL  DEFN  INTG          BOOLEAN DECLARATION (SAME)


027 34 0     2520   FLTG  CLL   RR2           FLOATING,REAL. SET TYPE = FLOATING
027 35 0     2521   ARRAY IFL   DELTA,00,5
027 36 0     2522         STP   CMPLX         ARRAY DECLARATION
027 37 0     2523         BUN   LEFT


027 40 0     2524   DCLCM BUN   NORM          DECLARATIONS ARE HANDLED BY SCANNER


027 43 0     2525   ARDEC IFL   IOTA,00,1     START TO DECLARE AN ARRAY, JUST AFTER A(
027 44 0     2526         CAD   XONE+1        OF A(I,J,K,L) IS SENSED
027 45 0     2527         STA   ARRI          INITIALIZE ARRI,ARRL TO 1
027 46 0     2528         STA   ARRL
027 47 0     2529         CAD   CRF
027 48 0     2530         BUN   EXIT


027 51 0     2531   ARACM STP   NULSX         ARRAY DECLARATION COMMA SENSED
027 52 0     2532         BUN   NULSB         TREAT AS )( BUT PRESERVE ARRAY MODE
027 53 0     2533         LDB   IOTA
027 54 0     2534         IBB   NORM,9999     IF THIS IS A COMMA BETWEEN DIMENSIONS,
027 55 0     2535         CAD   CRG           IT IS A CIRCLE-G OPERATOR
027 56 0     2536         BUN   EXIT


027 59 0     2537   ARFCM IFL   RHO,62,29     ARRAY FILL IS ALL HANDLED BY SCANNER
027 60 0     2538         BUN   NORM          (IN USUAL WAY) SEE NUMBER SUBROUTINE




027 65 0     2539   SEMIC STP   CMPLX         SEMICOLON IS THOUGHT OF AS )(
027 66 0     2540         BUN   RIGHT
027 67 0     2541         STP   CMPLX         THIS INNOCENT-LOOKING THING MAY CAUSE
027 68 0     2542         BUN   LEFT          ALL SORTS OF THINGS TO HAPPEN.
027 69 0     2543   SEMIX BUN   *


027 72 0     2544   QSUB  STP   CMPLX         FINISH SETTING V=E
027 73 0     2545         BUN   RIGHT
027 74 0     2546         STP   ASMBX         ASSEMBLE STP FORWARD
027 75 0     2547         BUN   ASMBL,STPFR
027 76 0     2548         CLL   DEX
027 77 0     2549         IFL   PI,00,1
027 78 0     2550         STP   ASMBX         BUN FORWARD
027 79 0     2551         BUN   ASMBL,BUNFR
027 80 0     2552         CLL   PI
027 81 0     2553   QSUBX BUN   *


027 84 0     2554   RUN   LDR   K2            INTERRUPT NORMAL SCANNING.
027 85 0     2555         STR   K3,04
027 86 0     2556         LDR   S2            RUN BACK THE VARIABLE PART
027 87 0     2557         STR   S3,04         OF THE FOR STATEMENT AGAIN
027 88 0     2558         LDR   SCAN
027 89 0     2559         STR   SCNXX,04
027 90 0     2560         LDR   FV
027 91 0     2561         STR   STFOL,04
027 92 0     2562         IFL   THETA,62,29
027 93 0     2563         BUN   SCN7
027 94 0     2564   RUNXX DFL   THETA,62,29   AFTER THE = SIGN COMES,
027 95 0     2565         LDR   K3            RESTORE NORMAL SCANNING PROCEDURE.
027 96 0     2566         STR   K2,04
027 97 0     2567         LDR   S3
027 98 0     2568         STR   S2,04
027 99 0     2569         LDR   SCNXX
028 00 0     2570         STR   SCAN,04
028 01 0     2571   RUNX  BUN   *


028 04 0     2572   FSUB1 STP   REMX,OPRND
028 05 0     2573         BUN   REM2,*+2      PULL LEFT PARENTHESIS
028 06 0     2574   G6    F424  7039,0,*
028 07 0     2575         STP   CMPLX
028 08 0     2576         BUN   LEFT          PUT ANOTHER ONE ON
028 09 0     2577   FSUB2 CLL   DEX
028 10 0     2578         STP   RUNX          RUN BACK V =
028 11 0     2579         BUN   RUN
028 12 0     2580         STP   CMPLX
028 13 0     2581         BUN   WMG,CRB
028 14 0     2582   FSUBX BUN   *

                                              THROW AWAY TOP OF STACK,SUBSTITUTE CRN
028 17 0     2583   USUB  STP   REMX,OP
028 18 0     2584         BUN   REM,PRSB
028 19 0     2585   G8    F424  1053,0,*


028 22 0     2586   PRSB  LDB   PRSBX
028 23 0     2587         DLB - 9998,44,0     PRSB SENDS SPECIFIED OPERATOR TO COMPILER
028 24 0     2588         CAD - 0
028 25 0     2589         STP   CMPLX         AND THEN DOES NULSB
028 26 0     2590         BUN   WMG1
028 27 0     2591   NULSB LDB   MODE          NULSB IS A SEMICOLON WHICH PROTECTS
028 28 0     2592         IFL - 0,22,1        THE MODE STACK
028 29 0     2593         STP   SEMIX
028 30 0     2594         BUN   SEMIC
028 31 0     2595         LDB   MODE
028 32 0     2596         DFL - 0,22,1
028 33 0     2597   PRSBX BUN   *
028 34 0     2598   USUBX DEFN  PRSBX
028 35 0     2598   NULSX DEFN  PRSBX


028 38 0     2598   OLDT  STP   REMX,TEMPS    THROW OUT ALL TEMP STORAGES
028 39 0     2599         BUN   REM,OLDT      CURRENTLY BEING USED, THEY CANT
028 40 0     2600   *A    STP   REMX,SAVET     BE USED ANY MORE
028 41 0     2601         BUN   REM,*+2
028 42 0     2602   G7    F424  1565,0,*      REINSTATE OLD SET
028 43 0     2603         SRA   4
028 44 0     2604         STA   TEMPS,04
028 45 0     2605         BUN   GENRX


028 48 0     2606   GETMP STP   REMX,TEMPS    SET AN AVAILABLE TEMP STORAGE CELL
028 49 0     2607         BUN   REM,GETMX
028 50 0     2608         CAD   VARB          EITHER FROM TEMPS STACK
028 51 0     2609         SLA   4             OR A NEW ONE,IF THAT STACK HAS BEEN
028 52 0     2610         DFL   VARB,04,1     CLEANED OUT.
028 53 0     2611   GETMX BUN   GETMX


028 56 0     2612   XSUB  STP   ASMBX         COMMON PART OF BEGINNING OF PROCEDURE
028 57 0     2613         BUN   ASMBL,BUNFR   AND FUNCTION DECLARATIONS
028 58 0     2614         STP   INSX,FUNS     FIRST COMPILE FORWARD REFERENCE AROUND
028 59 0     2615         BUN   INS2
028 60 0     2616         STP   NEWTX,SAVET   PUT LOCN ONTO FUN-STACK
028 61 0     2617         BUN   NEWT          STASH AWAY CURRENT SET OF TEMP STORAGE
028 62 0     2618         STP   EXCTR
028 63 0     2619         BUN   SCAN          GET NAME OF PROCEDURE FROM SCANNER
028 64 0     2620         STA   TOP
028 65 0     2621         STP   CMPLX         COMPILE CIRCLE-P OPERATOR
028 66 0     2622         BUN   WMG,CRP
028 67 0     2623         IFL   PARSW,00,1
028 68 0     2624         IFL   KC,00,1
028 69 0     2625         STP   CMPLX         AND A LEFT PARENTHESIS
028 70 0     2626         BUN   LEFT
028 71 0     2627         STP   CMPLX         AND A CIRCLE Q
028 72 0     2628         BUN   WMG,CRQ
028 73 0     2629         CAD   VARB
028 74 0     2630         SRT   4
028 75 0     2631         STR   NOPAV,44      ASSEMBLE
028 76 0     2632         STP   ASMBX           (LOC OF PARAMETER 1) NOP  0000
028 77 0     2633         BUN   ASMBL,NOPAV
028 78 0     2634         IFL   PHI,00,1
028 79 0     2635         DLB   L,64,0
028 80 0     2636         CAD   KC            RECORD NUMBER OF THIS PROCEDURE
028 81 0     2637         STA - 0,04
028 82 0     2638         DFL - 0,82,1
028 83 0     2639   XSUBX BUN   *


028 86 0     2640   YSUB1 LDB   KAPPA         COLLECTING PARAMETERS
028 87 0     2641         CLL   KAPPA
028 88 0     2642         DBB   A+,1          HAVE EMPTY SUBSCRIPTS APPEARED
028 89 0     2643         LDB   FUNS          OR DO WE HAVE A CALL BY VALUE
028 90 0     2644         CAD - 0
028 91 0     2645         BSA   A+,1
028 92 0     2646   YSUB2 DLB   L,64,00       IF NOT,
028 93 0     2647         IFL - 0,12,10       MARK PARAMETER AS CALL BY NAME
028 94 0     2648         LDB   FUNS
028 95 0     2649         CAD - 0
028 96 0     2650         BSA   *+2,3
028 97 0     2651         BUN   *+2
028 98 0     2652         IFL   TAG,00,1      PUT TAG ON AFTER 2ND SEMICOLON
028 99 0     2653         SRA   4
029 00 0     2654         LSA   0
029 01 0     2655         STP   INSX,PAREF    PUT CALL BY NAME PARAMETERS ONTO
029 02 0     2656         BUN   INS           PAREF STACK.WE WILL USE THIS
029 03 0     2657         CAD - 0
029 04 0     2658         SLA   4             LATER TO FIX UP REFERENCES TO THEM
029 05 0     2659         STA - 0             SHIFT LINK FIELD AROUND(SHREWD MOVE)
029 06 0     2660   PRFSW F4241 1210,01,1     IN PAREF LINK FIELD IS 64-FIELD
029 07 0     2661   *A    STP   REMX,OPRND
029 08 0     2662         BUN   REM,*+2
029 09 0     2663   FUR   HLT   4
029 10 0     2664         SRA   4             ASSIGN PARAMETER LOCATION
029 11 0     2665         STA   *+3,04
029 12 0     2666         CAD   VARB
029 13 0     2667         SLA   4
029 14 0     2668         STA   *,64
029 15 0     2669         DLB   TOP,64,0      KEEP COUNT OF NUMBER OF
029 16 0     2670         DFL - 0,82,99       PARAMETERS FOR FUTURE CHECKING
029 17 0     2671         DFL   VARB,04,1
029 18 0     2672         LDB   FUNS          KEEP COUNT OF NUMBER OF
029 19 0     2673         IFL - 0,22,1        PARAMETERS IN FUNS.
029 20 0     2674   YSUBX BUN   *




029 25 0     2675   CMPL  BFA   VRBL,01,0     THIS HERE IS THE COMPILER
029 26 0     2676         BFA   WMG1,01,1
029 27 0     2677         BFA   LEFT,01,2     CHECK KIND OF QUANTITY..
029 28 0     2678   RIGHT STP   REMX,OP       OPERAND,OPERATOR,LEFT PAREN, OR RIGHT PAR
029 29 0     2679         BUN   REM,E+        PROCESS RIGHT PARENTHESIS..
029 30 0     2680         STP   WEMX
029 31 0     2681         BUN   WEM,LEFT
029 32 0     2682         CNST  34652540000   (EXTRA RIGHT PARENTHESIS)
029 33 0     2683   *E    CFA   LPAR,67
029 34 0     2684         BCE   B+            DO ALL OPERATIONS OUTSTANDING SINCE
029 35 0     2685         STP   GENRX         LAST LEFT PARENTHESIS
029 36 0     2686         BUN   GENR
029 37 0     2687         BUN   RIGHT
029 38 0     2688   *B    STP   DECNX         CHANGE PARENTHESIS COUNT
029 39 0     2689         BUN   DECN          ON THIS MODE
029 40 0     2690   LCCT  BUN   *+4
029 41 0     2691         LDR   LOCN
029 42 0     2692         STR   IMAGE-1,64
029 43 0     2693         IFL   LCCT,62,29
029 44 0     2694   CMPLX BUN   *
029 45 0     2695   VRBL1 STA   PAR
029 46 0     2696   VRBL  STP   INSX,OPRND    PROCESS OPERAND..
029 47 0     2697         BUN   INS            SIMPLY PUT IT ON OPERAND STACK
029 48 0     2698         BUN   CMPLX
029 49 0     2699   LEFT  LDB   PHI           PROCESS LEFT PARENTHESIS..
029 50 0     2700         CLL   PHI
029 51 0     2701         DBB   CMPLX,1       EXIT, IF EXPECTING A LEFT PARENTHESIS
029 52 0     2702         LDB   MODE
029 53 0     2703         IFL - 0,22,1        INCREASE PARENTHESIS COUNT ON THIS MODE
029 54 0     2704   FORTY CLA   40
029 55 0     2705         BUN   A+            AND INSERT LEFT PARENTHESIS IN OP STACK
029 56 0     2706   WMG   LDB   CMPLX
029 57 0     2707         DLB - 9999,44,0     PROCESS OPERATOR..
029 58 0     2708         CAD - 0
029 59 0     2709   WMG1  LDB   OP
029 60 0     2710         LDR - 0
029 61 0     2711         BFR   A+,66,0       IF TOP OF OPERATOR STACK IS A LEFT
029 62 0     2712         STA   SAVOP          PARENTHESIS,
029 63 0     2713         CFA - 0,22          OR HIERARCHY OF NEW OP IS HIGHER THAN
029 64 0     2714         BCH   A+            THAT OF THE TOP OF THE OP STACK,
029 65 0     2715         BCL   B+            MERELY PLACE NEW OP ONTO THE STACK.
029 66 0     2716         BSA   *+2,0
029 67 0     2717         BUN   A+            ON EQUAL HIERRARCHY DO THE SAME
029 68 0     2718         BFA   *+2,31,0      EXCEPT ON ORDINARY BINARY OPERATIONS
029 69 0     2719         BUN   A+
029 70 0     2720         LDB   OPRND         FOR THESE, CHECK IF EITHER THE
029 71 0     2721         LDR - 0             LAST OR THE SECOND-LAST OPERAND IS IN
029 72 0     2722         BFR   B+,11,0       THE ACCUMULATOR, AND IF SO
029 73 0     2723         LDB - 0             PERFORM THE OPERATION IMMEDIATELY
029 74 0     2724         LDR - 0
029 75 0     2725         BFR   B+,11,0
029 76 0     2726   *A    STP   INSX,OP
029 77 0     2727         BUN   INS
029 78 0     2728   *C    BUN   CMPLX
029 79 0     2729   *B    STP   REMX,OP       IN THE CASE OF LOWER HIERARCHY,
029 80 0     2730         BUN   REM,*+2       EXECUTE THE LAST OPERATOR
029 81 0     2731   NPCN  NOP   0
029 82 0     2732         STP   GENRX         GO TO ITS GENERATOR
029 83 0     2733         BUN   GENR
029 84 0     2734         CAD   SAVOP
029 85 0     2735         BUN   WMG1          AND RECYCLE


029 88 0     2736   ASMBL LDB   ASMBX         THE ASSEMBLER.
029 89 0     2737         DLB - 9999,44,0
029 90 0     2738   ASMBZ CAD - 0
029 91 0     2739   ASMBY CLL   INSTR
029 92 0     2740         CLL   INSTP
029 93 0     2741         STA   INSTR,00
029 94 0     2742         STA   INSTP,00
029 95 0     2743         STA   G
029 96 0     2744         LDR   XI
029 97 0     2745         BZR   A+
029 98 0     2746         CLL   XI            OMIT SLT10 INSTRUCTION, IF STA OR SRT10
029 99 0     2747         BFA   B+,62,40            FOLLOWS
030 00 0     2748         CFA   SRT10,07
030 01 0     2749         BCU   A+
030 02 0     2750         DFL   LOCN,64,1
030 03 0     2751         BUN   ASMBX
030 04 0     2752   *B    DFL   LOCN,64,1
030 05 0     2753         IFL   INSTR,41,1    (CHANGE STA TO STR)
030 06 0     2754         IFL   INSTP,41,1
030 07 0     2755   *A    CFA   +9999999999
030 08 0     2756         BCH   C+
030 09 0     2757         LDB   INSTR         ASSEMBLE WITH V(I) IF THE
030 10 0     2758         LDR - V             SIGN IS 0,1,2, OR 3
030 11 0     2759         BFR   D+,11,5
030 12 0     2760   *E    STP   LASMX         IN ORDINARY CASES, GO TO THE
030 13 0     2761         BUN   LASMB          LITTLE ASSEMBLER.
030 14 0     2762         BUN   ASMBX
030 15 0     2763   *D    DLB - V,64,0        WHOOPS, ITS AN ARRAY NAME.
030 16 0     2764         LDR - 0             WE PROBABLY HAVE TO GET ITS INDEX
030 17 0     2765         STA   GP            IN REGISTER B
030 18 0     2766         BFR   F+,11,7       IF THE ARRAY HAS ALREADY BEEN INDEXED,
030 19 0     2767         BFR   E-,11,5       SKIP THIS PHASE. IF THE SUBSCRIPT IS
030 20 0     2768         IFL - 0,11,1        CONSTANT,GO TO LITTLE ASSEMBLER
030 21 0     2769         STB   TEMP
030 22 0     2770         LDB - 0             GET THE SUBSCRIPT VALUE
030 23 0     2771         CAD - 0             IT CANT BE AN ACCUMULATOR SYMBOL
030 24 0     2772         DLB - 0,64,0
030 25 0     2773         LDR - 0
030 26 0     2774         BFA   Q+,11,3       IS IT A TEMP STORAGE
030 27 0     2775         BFR   Q+,11,6       IS IT ANOTHER ARRAY
030 28 0     2776         STP   ASSNX         OTHERWISE PREPARE A PLACE FOR IT IN
030 29 0     2777         BUN   ASSN          MEMORY
030 30 0     2778         CFA   DEX,67         IF IT HASNT YET BEEN ASSIGNED
030 31 0     2779         STA   DEX,67
030 32 0     2780         BCU   G+            IS THE INDEX IN THE B REGISTER
030 33 0     2781         LDB   TEMP
030 34 0     2782         STP   REMX          IF SO,REMOVE REFERENCE TO  IT
030 35 0     2783         BUN   REM1,F+
030 36 0     2784   G99   F424  9629,0,0
030 37 0     2785   *Q    CLL   DEX           SET CONTENTS OF REGISTER B TO UNKNOWN
030 38 0     2786   *G    LDB   TEMP          HERE A TRICKY PART.
030 39 0     2787         STP   REMX          PUT THE SUBSCRIPT  ONTO THE XVP STACK
030 40 0     2788         BUN   REM1,*+2      IF IT IS ANOTHER ARRAY WHICH MUST BE
030 41 0     2789         BUN   H+            CALLED,KEEP THIS UP UNTIL WE GET
030 42 0     2790         STP   INSX,XVP      TO A NON-ARRAY.
030 43 0     2791         BUN   INS
030 44 0     2792         DLB - 0,64,0
030 45 0     2793         BFA   H+,11,3
030 46 0     2794         CAD - 0
030 47 0     2795         BFA   REM1,11,6
030 48 0     2796   *H    CAD   LDBV9
030 49 0     2797   *H    STA   INSTR         COMPILE A SERIES OF  LDB S
030 50 0     2798         CLL   G             UNTIL THE INDEX IS FINALLY IN REGISTER B
030 51 0     2799         STP   REMX,XVP
030 52 0     2800         BUN   REM,I+
030 53 0     2801   *F    CAD   INSTP         THE INSTRUCTION IS TO BE B-MODIFIED
030 54 0     2802         LSA   1
030 55 0     2803         STA   INSTR
030 56 0     2804         LDR   GP
030 57 0     2805         STR   G
030 58 0     2806         BUN   E-            GO TO THE LITTLE ASSEMBLER
030 59 0     2807   *I    STA   V9
030 60 0     2808         STP   LASMX
030 61 0     2809         BUN   LASMB
030 62 0     2810         CSU   LDBV9
030 63 0     2811         BUN   H-
030 64 0     2812   *C    BSA   G4P,4         ABSOLUTE MACHINE ADDRESS
030 65 0     2813         BSA   G6P,6         ADDRESS RELATIVE TO THIS LOCATION
030 66 0     2814         BSA   G7P,7         ADDRESS TO BE BLANKED OUT
030 67 0     2815         BSA   G8P,8         FORWARD REFERENCE ADDRESS
030 68 0     2816         IFL   INSTR,12,10   (B-MODIFICATION ON SIGNS OF 5 OR 9)
030 69 0     2817         BSA   G8P,9         B-MODIFIED FORWARD REFERENCE
030 70 0     2818   GEXIT STP   WRITX
030 71 0     2819         BUN   WRIT2
030 72 0     2820   ASMBX BUN   *
030 73 0     2821   G4P   LDR   INSTR         SET FLAG IF THIS IS SLT10 INSTRUCTION
030 74 0     2822         CFR   SLT10,07
030 75 0     2823         BCU   GEXIT
030 76 0     2824         IFL   XI,00,1
030 77 0     2825         BUN   GEXIT
030 78 0     2826   G6P   CAD   LOCN
030 79 0     2827         SRA   4
030 80 0     2828         ADA   INSTR
030 81 0     2829         STA   INSTR,04
030 82 0     2830         BUN   GEXIT
030 83 0     2831   G8P   CAD   LOCN
030 84 0     2832         LSA   4
030 85 0     2833         LDR   PSI
030 86 0     2834         BZR   *+2
030 87 0     2835         LSA   7             INCREMENTED FORWARD REFERENCE
030 88 0     2836         DLB   OP,44,0
030 89 0     2837         LDR   PI            PUT FORWARD REFERENCE OPERATOR
030 90 0     2838         BZR   *+2           ONTO EITHER OPERATOR STACK, OR
030 91 0     2839         DLB   EXEC,44,0     (THE STP,BUN S OF FOR) ONTO EXEC-STACK
030 92 0     2840         STP   INSX
030 93 0     2841         BUN   INS1
030 94 0     2842   G7P   IFL   WRTSW,41,4
030 95 0     2843         BUN   GEXIT


030 98 0     2844   LASMB LDB   INSTR         LITTLE ASSEMBLER.
030 99 0     2845         LDR - V
031 00 0     2846         DLB - V,64,0        ASSEMBLE AN OPERAND FOR ME
031 01 0     2847         CAD - 0
031 02 0     2848         STA   VIMAG         WHAT KIND OF AN OPERAND
031 03 0     2849         BFR   T3,11,3        A TEMP STORAGE
031 04 0     2850         BFR   T1,11,1        A SIMPLE VARIABLE
031 05 0     2851         BFR   T2,11,2        A CONSTANT
031 06 0     2852         BFR   T4,11,4        A LIBRARY,EXTERNAL PROCEDURE
031 07 0     2853         BFR   T5,11,5        AN ARRAY
031 08 0     2854         BFR   T4,11,8        A PROCEDURE OR FUNCTION
031 09 0     2855   T9    LDR - 1
031 10 0     2856         BFR   *+2,11,0
031 11 0     2857         STR   EXPLN
031 12 0     2858         STP   INSX          A LABEL
031 13 0     2859         BFA   H+,64,0       IF IT HASNT BEEN DEFINED YET,
031 14 0     2860         BUN   T4            RECORD PLACE FOR FORWARD REFERENCE
031 15 0     2861   T1    BSA   T4+1,8        IS IT A DIMENSION PARAMETER
031 16 0     2862         LDR - 1
031 17 0     2863         BUN   *+2
031 18 0     2864   T2    LDR   DICT+33
031 19 0     2865         STR   EXPLN
031 20 0     2866         STP   ASSNX         ASSIGN PLACE FOR VARIABLE OR CONSTANT
031 21 0     2867         BFA   ASSN1,64,0     IF NOT THERE ALREADY
031 22 0     2868         BUN   T4+1
031 23 0     2869   T3    CLL   VIMAG
031 24 0     2870         STR   VIMAG,00      FREE UP TEMP STORAGE CELL FOR
031 25 0     2871         CAD   G             FUTURE USE UNLESS G = 1 OR 3
031 26 0     2872         BSA   LASMX,3
031 27 0     2873         BSA   T4-2,1
031 28 0     2874         SLT   10
031 29 0     2875         STP   INSX,TEMPS
031 30 0     2876         BUN   INS
031 31 0     2877         CAD   TCONS
031 32 0     2878         STA   EXPLN
031 33 0     2879   T4    CAD   VIMAG         INSERT NEW ADDRESS INTO INSTRUCTION
031 34 0     2880         SRA   4
031 35 0     2881         STA   INSTR,04
031 36 0     2882         STP   INSX
031 37 0     2883         BSA   H+,9
031 38 0     2884         BSA   *+2,8
031 39 0     2885         BUN   *+2
031 40 0     2886         BFA   H+,51,8
031 41 0     2887   *F    ADD   XZERO+1
031 42 0     2888         BSA   B+,1
031 43 0     2889         CAD   G
031 44 0     2890         BSA   LASMX-1,3     G=3 MEANS THIS IS ONLY AN INDEX PSEUDO-OP
031 45 0     2891   *G    STP   WRITX
031 46 0     2892         BUN   WRIT2
031 47 0     2893         CLL   EXPLN
031 48 0     2894   LASMX BUN   *
031 49 0     2895   *B    EXT   EX0           CHECK IF THIS ADDRESS IS A
031 50 0     2896         SUB   FRSTP         NAME PARAMETER WHICH MUST BE FIXED
031 51 0     2897         SLA   8             UP AT RUNNING TIME
031 52 0     2898         LDB   PAREF
031 53 0     2899   *E    CFA - 0,22
031 54 0     2900         BCE   H+
031 55 0     2901         DLB - 0,64,0
031 56 0     2902         BUN   E-
031 57 0     2903   T5    LDR   G             ARRAY - IF G NEQ 1 OR 3
031 58 0     2904         BFR   T4,12,10      RETURN THE INCREMENT WORD TO
031 59 0     2905         BFR   T4,12,30        AVAILABLE STORAGE, WE ARE DONE WITH IT
031 60 0     2906         CAD   AVAIL
031 61 0     2907         STB   AVAIL
031 62 0     2908         STA - 0,04
031 63 0     2909         LDB   VIMAG
031 64 0     2910         CAD - 1
031 65 0     2911         BUN   T4-1
031 66 0     2912   *H    CAA   BUF
031 67 0     2913         SLA   4
031 68 0     2914         EXT   GTAB0+5
031 69 0     2915         ADD   LOCN
031 70 0     2916         BUN   INS1
031 71 0     2917   TCONS CNST  $TEMP$



031 75 0     2918   WRIT2 CAD   LOCN          WRITE SUBROUTINE - PUTS INSTRUCTION
031 76 0     2919         SRA   4              INTO OUTPUT BUFFER.
031 77 0     2920         IFL   LOCN,64,1     WRIT2 ENTRY - PUT INSTRUCTION OUT FOR
031 78 0     2921         LDR   INSTR          LOCATION LOCN AND INCREMENT LOCN
031 79 0     2922   WRIT3 STA   WRTF,04       WRIT3 ENTRY - LOCATION IS IN RA(04)
031 80 0     2923         SUB   PREV          AND INSTRUCTION IS IN REGISTER R
031 81 0     2924         LDB   CNTRI
031 82 0     2925         BFA   E+,04,0
031 83 0     2926         SUB   XONE+1        DOES THIS LOCATION EQUAL THE PREVIOUS ONE
031 84 0     2927         BFA   F+,04,0       (IF SO WE WILL ERASE THE PREVIOUS ONE)
031 85 0     2928         STB   LRTF,04       OR IS IT ONE HIGHER
031 86 0     2929         CAD   WRTF          IF NOT,WE WILL PUT OUT A NEW RECORD TRANS
031 87 0     2930         STA - BUF+1
031 88 0     2931         IFL   CNTRI,00,1
031 89 0     2932   *F    LDB   LRTF
031 90 0     2933         IFL - BUF+1,32,1    THE 32-FIELD CONTAINS THE NUMBER OF
031 91 0     2934   WRIT7 IFL   CNTRI,00,1    SEQUENTIAL WORDS TO LOAD
031 92 0     2935         LDB   CNTRI
031 93 0     2936   *E    STR - BUF
031 94 0     2937         STR   DESCR
031 95 0     2938         BCS   *+2,2
031 96 0     2939         BUN   *+3
031 97 0     2940   WRTSW STP 4 9898,0300
031 98 0     2941         BUN 4 9898,WRTF
031 99 0     2942         STB   WRTSW,41
032 00 0     2943         LDR   WRTF
032 01 0     2944         STR   PREV,04
032 02 0     2945   WRIT6 LDR   CNTRI         IS THE BUFFER FULL NOW
032 03 0     2946         CFR   CNTRF
032 04 0     2947         BCL   WRITX         IF NOT,EXIT
032 05 0     2948   WRIT5 LBC   NN            IF SO, CALCULATE CHECK SUM
032 06 0     2949   *C    CLA   BUF+2
032 07 0     2950         SUB - BUF+99
032 08 0     2951         IBB   *-1,1
032 09 0     2952         BOF   *+1
032 10 0     2953         STA   BUF+99
032 11 0     2954         MOW 4 BUF,OT,1      WRITE ONE BLOCK
032 12 0     2955         IFL   BUF,00,1
032 13 0     2956         CLL   CNTRI
032 14 0     2957         CLL   CNTRF         INITIALIZE FOR NEXT BLOCK
032 15 0     2958         IFL   CNTRF,00,96
032 16 0     2959   WRIT4 CLL   BUF+1
032 17 0     2960         LDB   C-
032 18 0     2961         RTF   BUF+1,98
032 19 0     2962   WRITX BUN   *



032 23 0     2963   GENXK STB   V1,12         MARK V1 AS IN A-REGISTER
032 24 0     2964   GENXV CAD   V1            V1 = RESULT
032 25 0     2965   GENXX STP   INSX,OPRND    PUT RESULT OF SOME GENERATED QUANTITY
032 26 0     2966         BUN   INS           IN OPERAND STACK AND RECORD IN
032 27 0     2967         LDB   OPRND         SER THE POSITION WHERE STORED
032 28 0     2968         LDR - 0             IF IT IS AN ACCUMULATOR SYMBOL.
032 29 0     2969         BFR   A+,11,0
032 30 0     2970         BUN   GENRX         (HINT..SER IS USED TO CONTROL PLACEMENT
032 31 0     2971   *A    STB   SER           INTO TEMP STORAGE)
032 32 0     2972   GENRX BUN   *
032 33 0     2973         CAD   BUNZ
032 34 0     2974   GENXY STP   ASMBX         ASSEMBLE FINAL INSTRUCTION AND EXIT.
032 35 0     2975         BUN   ASMBY
032 36 0     2976         BUN   GENRX


032 39 0     2977   GENR  STA   OPRTN         GENERATORS.BRANCH ACCORDING TO KIND OF OP
032 40 0     2978         BSA   GEN2,2        UNARY OP
032 41 0     2979         BSA   GEN3,3        NULLARY OP
032 42 0     2980         BSA   GFWRF,4       FORWARD REFERENCE
032 43 0     2981         BSA   GBWRF,5       BACKWARD REFERENCE
032 44 0     2982         BSA   GFWRF,7       INCREMENTED FORWARD REFERENCE
032 45 0     2983         STP   OBTNX         BINARY OP
032 46 0     2984         BUN   OBTN1         GET V1 OPERAND
032 47 0     2985         STP   OBTNX
032 48 0     2986         BUN   OBTN2         GET V2 OPERAND
032 49 0     2987         CAD   OPRTN
032 50 0     2988         BSA   GEN3,1        SPECIAL BINARY OP
032 51 0     2989         BSA   GRELN,8       RELATIONAL OP
032 52 0     2990         BFA   A+,64,0
032 53 0     2991   GENAG STP   ARTHX         PLUS TIMES OR DIVIDE, ETC.
032 54 0     2992         BUN   ARTHG
032 55 0     2993         CAD   ACCUM
032 56 0     2994         BUN   GENXX
032 57 0     2995   *A    LDB   MODE          GIVEN A PLUS OPERATION WHICH TAKES
032 58 0     2996         CAD - 0             PLACE ON PARENTHESIS LEVEL ONE OF AN
032 59 0     2997         CFA   TEST,67       ARRAY SUBSCRIPT AND WHERE ONE OF THE
032 60 0     2998         BCU   GENAG         TWO OPERANDS IS A FIXED POINT CONSTANT
032 61 0     2999         CAD   V1
032 62 0     3000         BFA   B+,22,21      IF ALL THIS IS TRUE WE DONT COMPILE
032 63 0     3001         LDR   V2            EXTRA INSTRUCTIONS, WE ADD IT TO THE
032 64 0     3002         BFR   *+2,22,21     BASE ADDRESS OF THE ARRAY.
032 65 0     3003         BUN   GENAG
032 66 0     3004         STR   V1
032 67 0     3005         STA   V2
032 68 0     3006         SLT   10
032 69 0     3007   *B    DLB   V1,64,0
032 70 0     3008         LDR - 1             UNLESS THE CONSTANT IS BIGGER THAN  +1
032 71 0     3009         SRT   0             IN WHICH CASE WE COULD GET INTO TROUBLE
032 72 0     3010         CFR   XONE+1        LOADING B WITH A NEGATIVE QUANTITY.
032 73 0     3011         BCH   GENAG
032 74 0     3012         LDB   ARAS          IF THE ARRAY IS A CALL-BY-NAME
032 75 0     3013         DLB - 0,64,0        WITHIN A PROCEDURE WE CANT DO THIS
032 76 0     3014   GENDX SRT   0             INCREMENTATION EITHER
032 77 0     3015   TS001 CLA
032 78 0     3016         ADD - 0
032 79 0     3017         BSA   GENAG,1
032 80 0     3018         SLT   10            ADD THIS TO THE INCREMENT WORD (MOD10000)
032 81 0     3019         SLA   4
032 82 0     3020         ADA - 0
032 83 0     3021         STA - 0,64
032 84 0     3022   GENX2 CAD   V2
032 85 0     3023         BUN   GENXX         PUT OPERAND FOR UNARY OP INTO V1
032 86 0     3024   GEN2  STP   OBTNX
032 87 0     3025         BUN   OBTN1         OPRTN/64 IS THE NAME OF THE GENERATOR
032 88 0     3026   GEN3  DLB   OPRTN,64,0    FOR THIS OPERATOR
032 89 0     3027         BUN - 0
032 90 0     3028   TEST  F244  1,NDXCM,0



032 94 0     3029   GREL2 STP   WEMX
032 95 0     3030         BUN   WEM,*+2
032 96 0     3031         CNST  30167200000   IMPROPER ASSIGNMENT OPERATION
032 97 0     3032         CLL   OPRTN         CHANGE OPERATION TO EQL
032 98 0     3033   GRELN CSU   V1            RELATIONS  EQL,GTR, ETC.
032 99 0     3034         STA   V1
033 00 0     3035         CAD   OPRTN
033 01 0     3036         STA   OPRTM
033 02 0     3037         DFL   YETH,62,10    CHANGE TO FIXED POINT SUBTRACT OPERATION
033 03 0     3038         CLL   OPRTN
033 04 0     3039         STB   BOF,61
033 05 0     3040         STP   ARTHX
033 06 0     3041         BUN   ARTHG
033 07 0     3042         IFL   YETH,62,10
033 08 0     3043         BSA   *+2,0
033 09 0     3044         IFL   OPRTM,64,1
033 10 0     3045         BFA   D+,11,0       IF RESULT IS NOT IN REGISTER A,GET IT
033 11 0     3046         LSA   0
033 12 0     3047         STA   V1
033 13 0     3048         STP   CADX
033 14 0     3049         BUN   CAD1          ASSEMBLE  BOF *+2  IF NECESSARY
033 15 0     3050   *D    STP   ASMBX
033 16 0     3051   BOF   BUN   ASMBL,BOF2
033 17 0     3052   *D    LDB   OP            CHECK HOW WE ARE USING THIS RELATION
033 18 0     3053         LDR - 0
033 19 0     3054         BFR   A+,67,00      IS IT IN A BOOLEAN EXPRESSION
033 20 0     3055         IFL   OPRTM,64,2
033 21 0     3056         CFR   OPIF,67       IS IT IN AN IF CLAUSE
033 22 0     3057         BCE   C+
033 23 0     3058         IFL   OPRTM,64,2    IS IT IN AN UNTIL CLAUSE
033 24 0     3059         CFR   CRU,67
033 25 0     3060         BCE   C+
033 26 0     3061         STP   WEMX          IF NOT IT IS AN IMPROPER
033 27 0     3062         BUN   WEM,CMPLX               RELATIONAL OPERATION
033 28 0     3063         CNST  30157200000
033 29 0     3064   *A    STP   INTRX
033 30 0     3065         BUN   B+
033 31 0     3066         BUN   GENXX
033 32 0     3067   *C    CAD   AVAIL         REMOVE IF OR UNTIL FROM OP STACK
033 33 0     3068         STB   AVAIL,04
033 34 0     3069         STA - 0
033 35 0     3070         STR   OP,04
033 36 0     3071         STP   INTRX
033 37 0     3072         BUN   B+
033 38 0     3073   GREL1 CLL   PSI           IF, UNTIL FINISHED..  MAKE A COMPOUND
033 39 0     3074         IFL   PHI,00,01     STATEMENT.
033 40 0     3075         BUN   CMPLX
033 41 0     3076   *B    DLB   OPRTM,64,0
033 42 0     3077         CAD - GTAB3
033 43 0     3078         BUN   INTRP


033 46 0     3079   GEXPN CAD   V1            POWER GENERATOR.  V2*V1
033 47 0     3080         CLL   XI
033 48 0     3081         CFA   V10,67        IF V1 IS 2
033 49 0     3082         BCE   Q+
033 50 0     3083         LDR   V2            OR 2.0 WITH V2 FLOATING,
033 51 0     3084         CFA   V11,67
033 52 0     3085         BCU   *+2           WE WILL MAKE THIS INTO A MULTIPLY
033 53 0     3086         BFR   Q+,21,0       OTHERWISE IF V1 IS NEGATED
033 54 0     3087         BSA   A+,0
033 55 0     3088         STP   ACCX          EMPTY THE A-REGISTER
033 56 0     3089         BUN   ACC3
033 57 0     3090         STP   CADX          AND CAD V1, SRT 10.
033 58 0     3091         BUN   CAD1
033 59 0     3092   *B    CAD   SRT10
033 60 0     3093         BUN   C+            ELSE, IF IT IS IN THE A REGISTER, SRT 10.
033 61 0     3094   *A    BFA   B-,11,0
033 62 0     3095         CAD   LDRV1         IN OTHER CASES, LDR V1
033 63 0     3096   *C    STP   ASMBX
033 64 0     3097         BUN   ASMBY         THEN CAD  V2
033 65 0     3098         STP   CADX
033 66 0     3099         BUN   CAD2          SEPARATE FOUR CASES
033 67 0     3100   *D    CLB                  FIX TO FIX = 0
033 68 0     3101         CAD   V1             FIX TO FLT = 1
033 69 0     3102         BFA   *+2,21,1       FLT TO FIX = 2
033 70 0     3103         IBB   *+1,1          FLT TO FLT = 3
033 71 0     3104         CAD   V2
033 72 0     3105         BFA   *+2,21,1
033 73 0     3106         IBB   *+1,2
033 74 0     3107         STB   D-,04         GENERATE STP BUN TO APPROPRIATE SUBRUTINE
033 75 0     3108         LDR - NUTBL           SET UP TO PRINT THE NAME
033 76 0     3109         STP   LINKX
033 77 0     3110         IBB   LINK-1,EXPF
033 78 0     3111         LDB   D-            COMPUTE TYPE OF RESULT
033 79 0     3112         CAD - EXPA
033 80 0     3113   EXPA  BUN   GENXX,0100
033 81 0     3114   *Q    CAA   V2
033 82 0     3115         STA   V2            THE SQUARE CASE
033 83 0     3116         STA   V1
033 84 0     3117         BFA   T+,11,2
033 85 0     3118         STP   ACCX          FREE A REGISTER
033 86 0     3119         BUN   ACC3
033 87 0     3120         CAD   V2            IF V2 WAS IN THE A REGISTER, IT WILL
033 88 0     3121         BFA   T+,11,0       HAVE BEEN STORED OUT
033 89 0     3122         CSA   CADV1         OTHERWISE WE WANT TO CADV1 AND PREVENT
033 90 0     3123         STP   ASMBX         DOUBLE-INDEXING IF V1 IS AN ARRAY
033 91 0     3124         BUN   ASMBY
033 92 0     3125         STB   V1,11
033 93 0     3126   *T    CAD   DOT           MULTIPLY V2.V2
033 94 0     3127         STA   OPRTN
033 95 0     3128         BUN   GENAG
033 96 0     3129   NUTBL CNST  $FX*FX$
033 97 0     3130         CNST  $FX*FL$
033 98 0     3131         CNST  $FL*FX$
033 99 0     3132         CNST  $FL*FL$


034 02 0     3133   GABSF STP   TSTOX         ABSOLUTE VALUE.
034 03 0     3134         BUN   TSTOP          LOOK SEE IF ITS  -ABS
034 04 0     3135         LDB   *+3
034 05 0     3136         LDR   V1
034 06 0     3137         BFR   *+2,11,0        V1 IN MEMORY, ABS   CAA V1
034 07 0     3138         DBB   LSA0,LSA0-CAAV1 V1 IN MEMORY,-ABS   CSA V1
034 08 0     3139         BCU   *+2             V1 IN ACCUM,  ABS   LSA 0
034 09 0     3140         DBB   0,9999          V1 IN ACCUM, -ABS   LSA 1
034 10 0     3141         STP   ASMBX
034 11 0     3142         BUN   ASMBZ
034 12 0     3143         BUN   GENXK




034 17 0     3144   GHYPH LDB   OPRND         MINUS OPERATOR
034 18 0     3145   EX42  CNST  10013110000   SIMPLY REVERSE SIGN DIGIT OF
034 19 0     3146         STA - 0             NEXT ITEM IN OPERAND STACK
034 20 0     3147         BUN   GENRX


034 23 0     3148   GBNOT LDR   V1            BOOLEAN NOT.
034 24 0     3149         CAD   G7
034 25 0     3150         BFR   GEN4,22,01
034 26 0     3151         STP   ACCX          IF V1 NOT IN A-REGISTER.
034 27 0     3152         BUN   ACC4           STORE A-REGISTER IF NECESSARY
034 28 0     3153         CAD   V1
034 29 0     3154         BSA   E+,1          CHECK THAT V1 IS BOOLEAN
034 30 0     3155         BFA   E+,21,0
034 31 0     3156   *F    CAD   G11           CAD =1=, SUB V1.
034 32 0     3157   GEN4  STP   INTRX
034 33 0     3158         BUN   INTRP
034 34 0     3159         BUN   GENXK         IF V1 IS IN THE ACCUMULATOR,
034 35 0     3160   *E    STP   WEMX          SUB=1=, LSA 0
034 36 0     3161         BUN   WEM,F-
034 37 0     3162         CNST  30159610000   IMPROPER BOOLEAN OPERAND


034 40 0     3163   GIF   LDR   BZAFR         IF AND UNTIL
034 41 0     3164   GIF1  STR   T+
034 42 0     3165         CAD   V1
034 43 0     3166         BFA   E+,21,0       CHECK V1 BOOLEAN
034 44 0     3167         BSA   E+,1
034 45 0     3168   *A    STP   CADX          BRING IT INTO A REGISTER
034 46 0     3169         BUN   CAD1
034 47 0     3170         STP   ASMBX         ASSEMBLE  BFA FORWARD,01,0 (IF)
034 48 0     3171         BUN   ASMBL,T+            OR  BFA FORWARD,01,1 (UNTIL)
034 49 0     3172         BUN   GREL1         MAKE COMPOUND STATEMENT
034 50 0     3173   *E    STP   WEMX
034 51 0     3174         BUN   WEM,A-
034 52 0     3175         CNST  30159610000   IMPROPER BOOLEAN OPERAND
034 53 0     3176   *T    HLT   0


034 56 0     3177   GPCS  STP   ACCX          PCS GENERATOR
034 57 0     3178         BUN   ACC4          FREE A REGISTER
034 58 0     3179         STP   FIXEX         BRING V1 FIXED POINT INTO A
034 59 0     3180         BUN   FIXER         UNLESS ITS A CONSTANT
034 60 0     3181         BFA   A+,11,2       THEN GENERATE SLA 0009
034 61 0     3182         CAD   +6034037172                 STA *+2,11
034 62 0     3183         BUN   GEN4                        CAD  +1
034 63 0     3184   *A    DLB   V1,64,00                    BCS *+2,0
034 64 0     3185         CAD - 1                           CLA
034 65 0     3186         SLA   9             OR IF IT WAS A CONSTANT GENERATE
034 66 0     3187         STA   BCSL2,11      MERELY THE LAST THREE OF THESE
034 67 0     3188         CAD   +0371720000
034 68 0     3189   *B    BUN   GEN4


034 71 0     3190   GSIGN STP   TSTOX         SIGN(V1)
034 72 0     3191         BUN   TSTOP
034 73 0     3192         STP   CADX          BRING V1 INTO A-REGISTER
034 74 0     3193         BUN   CAD1
034 75 0     3194         SRT   10           GENERATE   BZA *+4
034 76 0     3195         CAD   +4959045600             SRT 0
034 77 0     3196         BFR   B+,21,0                 CAD =1.0= OR =1=
034 78 0     3197         CAD   +4959035600             SLT 0
034 79 0     3198   GEN5  DEFN  *
034 80 0     3198   *B    STP   INTRX
034 81 0     3199         BUN   INTRP
034 82 0     3200         BUN   GENXV


034 85 0     3201   GFWRF STP   FXUPX         FIX UP FORWARD REFERENCE
034 86 0     3202         BUN   FXUP
034 87 0     3203         BUN   GENRX


034 90 0     3204   GBWRF DLB   OPRTN,64,00   BUN TO BACKWARD REFERENCE
034 91 0     3205         STB   BUNI,04
034 92 0     3206         CAD   BUNI
034 93 0     3207         BUN   GENXY

034 95 0     3208   GCRA  STP   REMX,OPRND    OBTAIN V1.
034 96 0     3209         BUN   REM,*+2
034 97 0     3210         BUN   GENRX
034 98 0     3211         STA   V1
034 99 0     3212         CLL   SER           BRANCH TO GCRJ(INPUT) OR GCRK(OUTPUT)
035 00 0     3213         DLB   STSV,64,0
035 01 0     3214         BUN - 0

035 03 0     3215   GCRB  DLB   DELTA,22,0    = OPERATOR
035 04 0     3216         DBB   GREL2,1       OR DID HE MEAN EQL
035 05 0     3217         DLB   V2,64,0
035 06 0     3218         LDR - 0
035 07 0     3219         STR   TS001,34
035 08 0     3220         CAD   V2
035 09 0     3221         BSA   Z+,1
035 10 0     3222         STR   V2
035 11 0     3223         STA   V2,00
035 12 0     3224         LDB   OP
035 13 0     3225         CAD - 0
035 14 0     3226         CFA   CRB,64        CHECK FOR MULTIPLE ASSIGNMENT
035 15 0     3227         BCE   A+            OR A FOR STATEMENT, WHERE WE
035 16 0     3228         LDB   MODE          CANT DO  STR  INSTEAD OF  STA
035 17 0     3229         CAD - 0
035 18 0     3230         CFA   FORMD,64
035 19 0     3231         BCU   *+3
035 20 0     3232         IFL   OMEGA,00,1
035 21 0     3233   *A    CLL   XI
035 22 0     3234         CAD   V2            LEFTHAND OPERAND CANNOT BE
035 23 0     3235         BFA   Z+,11,9       A LABEL, ACCUMULATOR SYMBOL
035 24 0     3236         BFA   *+3,11,1      CONSTANT, TEMP STORAGE
035 25 0     3237         CFA   *+1,11         OR A LIBRARY PROCEDURE
035 26 0     3238         F424  5001,34,Z+
035 27 0     3239         CAD   V1
035 28 0     3240         BFA   S+,21,3       (CLL IN MULTIPLE ASSIGNMENT)
035 29 0     3241         BFA   A+,11,2       IS RHS A CONSTANT.
035 30 0     3242   *V    STP   CADX          IF NOT, GET RHS INTO ACCUMULATOR
035 31 0     3243         BUN   CAD1
035 32 0     3244         LDR   V2
035 33 0     3245         CFR   V1,21
035 34 0     3246         STR   V1,21         DO THE TYPES AGREE
035 35 0     3247         BCE   C+            IF NOT, LINK EITHER TO
035 36 0     3248         BFR   Y+,21,0       FIX OR FLOAT ROUTINE
035 37 0     3249         DLB   FIXGN,64,0
035 38 0     3250         BUN   X+
035 39 0     3251   *Y    DLB   TABSC+82,64,0
035 40 0     3252   *X    STP   LINKX
035 41 0     3253         BUN   LINK1
035 42 0     3254   *C    CAA   V2
035 43 0     3255         BFA   Y+,11,8
035 44 0     3256         CAA   G13
035 45 0     3257   *K    STP   INTRX         ASSEMBLE STA V2   UNLESS FUNCTION OR
035 46 0     3258         BUN   INTRP         OR PROCEDURE NAME
035 47 0     3259         CAA   TS001
035 48 0     3260   *Y    LDR   MU
035 49 0     3261         BFR   W+,62,01      IF WE ARE IN SCOPE OF A LABEL REQUESTED
035 50 0     3262   *M    DLB   V2,64,0       FOR MONITORING, OR THE VARIABLE
035 51 0     3263         STP   CONVX         ASSIGNED IS SO REQUESTED,
035 52 0     3264         BUN   CONV+1        ASSEMBLE LINK TO MONITOR SUBROUTINE
035 53 0     3265         BUN   E+
035 54 0     3266   *W    BSA   M-,2
035 55 0     3267         BSA   M-,6
035 56 0     3268   *E    CLL   OMEGA
035 57 0     3269         BUN   GENXV
035 58 0     3270   *A    CFA   V7,64         IF WE ARE SETTING SOMETHING TO A
035 59 0     3271         BCE   S+            NONZERO CONSTANT,
035 60 0     3272         CFA   V6,64
035 61 0     3273         BCE   S+
035 62 0     3274   *D    CFA   V2,21         MATCH THE TYPES
035 63 0     3275         BCE   V-
035 64 0     3276         BFA   U+,21,0
035 65 0     3277         STP   FLTCX
035 66 0     3278         BUN   FLTCN
035 67 0     3279         BUN   T+
035 68 0     3280   *U    STP   FIXCX
035 69 0     3281         BUN   FIXCN
035 70 0     3282   *T    STA   V1,00
035 71 0     3283         BUN   A-
035 72 0     3284   *S    CAD   COMP+7        SOMETHING = 0
035 73 0     3285         LDB   OMEGA
035 74 0     3286         LDR   V2            SEVERAL CASES TO CONSIDER
035 75 0     3287         STB   V1,23
035 76 0     3288         IFL   V1,21,3
035 77 0     3289         DBB   K-,1          CLA,CLL V2  IN FOR STATEMENT
035 78 0     3290         SLA   6
035 79 0     3291         BFR   K-,11,8       CLA IN PROCEDURE OR FUNCTION CASE
035 80 0     3292         SLA   6
035 81 0     3293         BUN   K-            CLL V2 OTHERWISE
035 82 0     3294   *Z    STB   V1,21
035 83 0     3295         STP   WEMX
035 84 0     3296         BUN   WEM,E-
035 85 0     3297         CNST  30167320000   IMPROPER ASSIGNMENT STATEMENT




035 90 0     3298   GCRC  STP   PMTRX
035 91 0     3299         BUN   PMTR          ASSEMBLE THE PARAMETER-OBTAINING INSTRUC-
035 92 0     3300         LDB   OPRND                             TION
035 93 0     3301         CAD - 0
035 94 0     3302         CFA   DEX,67        DOES REGISTER B CONTAIN THE FIRST
035 95 0     3303         BCE   A+            PARAMETER LOCATION
035 96 0     3304         STA   DEX
035 97 0     3305         STA   V2            IF NOT, ASSEMBLE A DLB V2,44,0
035 98 0     3306         STP   ASMBX
035 99 0     3307         BUN   ASMBL,DLBV2
036 00 0     3308   *A    LDB   FUNS
036 01 0     3309         CAD - 0
036 02 0     3310         BSA   *+2,3         TURN TAG ON IF WE HAVE PASSED THE
036 03 0     3311         BUN   *+2            2ND SEMICOLON
036 04 0     3312         IFL   TAG,00,1
036 05 0     3313         SRA   8
036 06 0     3314         LSA   0
036 07 0     3315         SUA   GTAB0         WHAT PARAMETER NUMBER IS THIS
036 08 0     3316         STA   STAAB,04      (FIRST 0000,THEN 9999, THEN 9998,ETC.)
036 09 0     3317         IFL - 0,22,1
036 10 0     3318         CAD   STAAB
036 11 0     3319         BUN   GENXY


036 14 0     3320   GCRD  STP   TSTOX         MOD OPERATION  MOD(V2,V1)
036 15 0     3321         BUN   TSTOP
036 16 0     3322         CSU   V2            IF  -MOD  CHANGE SIGN OF V2.
036 17 0     3323         BCU   *+2
036 18 0     3324         STA   V2
036 19 0     3325         EXT   V1
036 20 0     3326         BFA   E+,21,0       CHECK THAT V1,V2 BOTH INTEGER
036 21 0     3327   *F    LDR   V1
036 22 0     3328         CFR   V10,66        IF V1 IS THE CONSTANT 2 OR -2 WE HAVE
036 23 0     3329         BCE   Z+            A SPECIAL CASE
036 24 0     3330   *F    STP   ACCX
036 25 0     3331         BFR   ACC1,11,0     PUT V1 IN MEMORY
036 26 0     3332   *C    STP   CADX
036 27 0     3333         BUN   CAD2          BRING V2 INTO ACCUMULATOR
036 28 0     3334         CAD   V1
036 29 0     3335         CFA   *+1,11
036 30 0     3336         F424  2001,35,Y+
036 31 0     3337         DLB   V1,64,0
036 32 0     3338         CSA - 1             CHECK IF V1 IS A CONSTANT,POWER OF TEN
036 33 0     3339         CLL   SYMBL
036 34 0     3340         BZA   E+
036 35 0     3341         SRT   1
036 36 0     3342         ADL   SYMBL
036 37 0     3343         BFR   *-2,11,0
036 38 0     3344         SLT   1
036 39 0     3345         CFA   XONE+1,00
036 40 0     3346   *Y    CAD   +5822570000
036 41 0     3347         BCU   GEN4          IF NOT,GENERATE SRT10,DIV V1, SLT 30
036 42 0     3348         CLL   RR0
036 43 0     3349         STP   FLTCX         OTHERWISE GENERATE EXTRACT
036 44 0     3350         BUN   FLTC1         WITH THE CONSTANT -1 OR -11 OR -111,ETC.
036 45 0     3351         STA   V1,64
036 46 0     3352         CAD   *+1
036 47 0     3353         BUN   GEN4,2800
036 48 0     3354   *E    STP   WEMX
036 49 0     3355         BUN   WEM,GENXX
036 50 0     3356         CNST  30113376911   IMPROPER ARGUMENT OF MOD FUNCTION
036 51 0     3357   *Z    STP   ACCX
036 52 0     3358         BUN   ACC3          IF IT IS MOD 2, GENERATE
036 53 0     3359         CAD   G99           CSU =1=  EXT V2
036 54 0     3360         BUN   GEN4


036 57 0     3361   GCRE  LDB   LAMDA         EITHER IF FINISHING.
036 58 0     3362         CLL   LAMDA         IF OTHERWISE APPEARED, DO NOTHING
036 59 0     3363         DBB   GENRX,1       IF NO OTHERWISE APPEARED,
036 60 0     3364         CAD   NOPZ          PUT OUT A NOP INSTRUCTION
036 61 0     3365         BUN   GENXY


036 64 0     3366   GCRF  CLL   IOTA          FINISH DECLARAING SOME ARRAY
036 65 0     3367         DLB   V1,64,0       V1 IS FIRST DIMENSION,V2 IS ARRAY NAME
036 66 0     3368         CSU - 1
036 67 0     3369         MUL   ARRI
036 68 0     3370         SLT   10
036 69 0     3371   *B    LDR   MULS
036 70 0     3372         ADL   VARB          RESERVE SPACE FOR THIS ARRAY
036 71 0     3373         STA   TEMP
036 72 0     3374   *A    CAD   VARB
036 73 0     3375         ADD   XONE+1
036 74 0     3376         STA   ABASE,04      PUT BEGINNING LOCATION IN ABASE
036 75 0     3377         SUB   ARRL
036 76 0     3378         ADA   GTAB0         COMPUTE BASE ADDRESS (MOD 10000)
036 77 0     3379         SLA   4
036 78 0     3380         DLB   V2,64,0
036 79 0     3381         STA - 0,64          MOVE LIST OF MULTIPLIERS
036 80 0     3382         STR - 0,04          TO THIS ARRAY NAME
036 81 0     3383         CAA   TEMP
036 82 0     3384         SLA   4             PUT TOTAL LENGTH OF ARRAY ON TOP
036 83 0     3385         CLL   MULS          OF MULTIPLIER LIST
036 84 0     3386         BUN   LNGTH


036 87 0     3387   GCRG  DLB   V1,64,0       MIDDLE OF ARRAY DECLARATION
036 88 0     3388         CAD - 1
036 89 0     3389         MUL   ARRL          IF GIVEN  ARRAY  A(I,J,K,L)
036 90 0     3390         STR   ARRL
036 91 0     3391         IFL   ARRL,00,1     ARRL IS SET TO ((J+1)K+1)L+1
036 92 0     3392         CAD - 1
036 93 0     3393         MUL   ARRI
036 94 0     3394         STR   ARRI
036 95 0     3395         CAD   V1            ARRI IS SET TO JKL
036 96 0     3396         LDB   B-
036 97 0     3397   LNGTH LDR   V1            ALL DIMENSIONS MUST BE
036 98 0     3398         BFR   A+,22,21      FIXED POINT CONSTANTS
036 99 0     3399         STP   WEMX
037 00 0     3400         BUN   WEM,GENRX
037 01 0     3401         CNST  30163640000   IMPROPER ARRAY DECLARATION
037 02 0     3402   *A    STP   INSX
037 03 0     3403         BUN   INS1          J,K,L GO TO MULTIPLIER STACK
037 04 0     3404         BUN   GENRX


037 07 0     3405   GCRH  STP   XSTX          MAKE V1 INTEGRAL,IN MEMORY
037 08 0     3406         BUN   XST
037 09 0     3407         CAD   LBCV1         GENERATE LBC V1
037 10 0     3408         BUN   GENXY


037 13 0     3409   GCRI  CAA   G3            GENERATE LSA 9,BUN IOPUS
037 14 0     3410         DFL   UPSLN,62,29
037 15 0     3411         BUN   A+


037 18 0     3412   GCRJ  CAD   V1
037 19 0     3413         BFA   E+,11,0
037 20 0     3414         BFA   E+,11,2       CHECK FOR VALID INPUT EXPRESSION
037 21 0     3415         BSA   E+,1
037 22 0     3416         CAA   COMMX
037 23 0     3417         BUN   A+


037 26 0     3418   GCRK  STP   CADX          BRING EXPRESSION INTO A-REGISTER
037 27 0     3419         BUN   CAD1
037 28 0     3420   *B    CAD   G10
037 29 0     3421   *A    LDR   IOPUS         GENERATE LDB *  IBB IOPUS,2
037 30 0     3422         CLL   DEX
037 31 0     3423         STR   BUNI,04
037 32 0     3424         STR   IBBI,04
037 33 0     3425         LDR   V1
037 34 0     3426         STR   LDBL0,21
037 35 0     3427         STP   INTRX
037 36 0     3428         BUN   INTRP
037 37 0     3429         BUN   GENRX
037 38 0     3430   *E    STP   WEMX
037 39 0     3431         BUN   WEM,B-        IMPROPER INPUT DECLARATION
037 40 0     3432         CNST  30170640000


037 43 0     3433   GCRM  DFL   MU,62,29      END OF SCOPE OF MONITORED LABEL
037 44 0     3434         BUN   GENRX


037 47 0     3435   GCRN  STP   FIXEX         MAKE SURE V1 IS INTEGER
037 48 0     3436         BUN   FIXER         EITHER A CONSTANT OR IN A REGISTER
037 49 0     3437         BFA   A+,11,2
037 50 0     3438         CAA   G8            IF NOT A CONSTANT, ADD *+1 NOP V2
037 51 0     3439         BUN   GEN5
037 52 0     3440   *A    STB   V1,11         IF A CONSTANT, ADD OR SUBTRACT ITS
037 53 0     3441         DLB   V1,64,0       VALUE FROM THE ASSIGNMENT OF V2,MOD 10000
037 54 0     3442         LDR - 1
037 55 0     3443         SRT   0
037 56 0     3444         SLT   14
037 57 0     3445         EXT   EX42          (-11110000)
037 58 0     3446         DLB   V2,64,00
037 59 0     3447         ADA - 0
037 60 0     3448         STA - 0,64
037 61 0     3449         STP   ACCX
037 62 0     3450         BUN   ACC4
037 63 0     3451         CAA   G9            CAD *+1, NOP V2
037 64 0     3452   *B    BUN   GEN5


037 67 0     3453   GCRO  STP   PMTRX         LAST PARAMETER TO FUNCTION IS V1
037 68 0     3454         BUN   PMTR
037 69 0     3455         CLL   DEX
037 70 0     3456         STP   REMX,FUNS
037 71 0     3457         BUN   REM,*+2
037 72 0     3458   G9    F424  0553,0,*
037 73 0     3459         STA   BUNV2,22
037 74 0     3460         DLB   V2,64,0       CHECK THAT PROPER
037 75 0     3461         LDR - 1               NUMBER OF ARGUMENTS
037 76 0     3462         STR   EXPLN           HAS APPEARED
037 77 0     3463         LDR - 0
037 78 0     3464         BFR   B+,12,88
037 79 0     3465         SLT   6
037 80 0     3466         BFA   A+,51,4
037 81 0     3467         CFR   BUNV2,22
037 82 0     3468         BCE   B+
037 83 0     3469         BFR   B+,22,0
037 84 0     3470         STP   WEMX
037 85 0     3471         BUN   WEM,*+2
037 86 0     3472         CNST  30113370800   IMPROPER ARGUMENT OF PROCEDURE
037 87 0     3473   *B    CAD   G4            GENERATE STP V2, BUN V2
037 88 0     3474         STP   INTRX
037 89 0     3475         BUN   INTRP
037 90 0     3476         STB   V2,11
037 91 0     3477         CLL   TAG
037 92 0     3478         BUN   GENX2
037 93 0     3479   *A    SLT   2
037 94 0     3480         BFR   B-,21,3
037 95 0     3481         CFR   V1,21         IF ARGUMENT TO LIBRARY FUNCTION
037 96 0     3482         BCE   B-            IS WRONG TYPE, CONVERT IT.
037 97 0     3483         DLB   TABSC+82,64,0
037 98 0     3484         BFR   *+2,21,0
037 99 0     3485         DLB   FIXGN,64,0
038 00 0     3486         STP   LINKX
038 01 0     3487         BUN   LINK1
038 02 0     3488         BUN   B-


038 05 0     3489   *E    BFA   GCRP,11,0
038 06 0     3490         STP   WEMX
038 07 0     3491         BUN   WEM,GCRP
038 08 0     3492         CNST  34661000000
038 09 0     3493   GCRP  STP   REMX,OPRND    END OF PROCEDURE OR FUNCTION DECLARATION
038 10 0     3494         BUN   REM,E-        CHECK FOR EXTRA OPERANDS
038 11 0     3495   *A    STP   REMX,FUNS
038 12 0     3496         BUN   REM2,*+2      PULL NAME OF THIS OFF FUN-STACK
038 13 0     3497   G10   F424  6273,0,*
038 14 0     3498         LDR   FNSW
038 15 0     3499         BZR   A+
038 16 0     3500         SRA   4
038 17 0     3501         STA   LDBI,4        RETURN FROM FUNCTION
038 18 0     3502         STP   VSUBX
038 19 0     3503         BUN   VSUB1
038 20 0     3504   *D    CLL   FNSW          BRING BACK OLD TEMP STORAGE CELLS
038 21 0     3505         BUN   OLDT          AND EXIT
038 22 0     3506   *A    STP   REMX,PR3      FORGET ALL PREFIXES DEFINED IN THIS
038 23 0     3507         BUN   REM,A-        PROCEDURE
038 24 0     3508         LDR   RR1
038 25 0     3509         STR   RR3           BRING IN OTHERWISE TYPE OF MAIN PROGRAM
038 26 0     3510         LDR   PR1
038 27 0     3511         STR   PR3           BRING IN PREFIXES OF MAIN PROGRAM
038 28 0     3512         LDR   CHI3
038 29 0     3513         STR   CHI           BRING IN MONITOR STATUS OF MAIN PROGRAM
038 30 0     3514         LDR   PAREF
038 31 0     3515         BFR   H+,04,00
038 32 0     3516   *C    CAD   PLOC          IF PARAMETERS OF OUTPUT TYPE HAVE
038 33 0     3517         STP   FXUPX         OCCURRED, FIX UP THE INSTRUCTION
038 34 0     3518         BUN   FXUP          TO BUN TO THIS PART OF THE PROCEDURE
038 35 0     3519         CAD   FRSTP
038 36 0     3520         SLA   4
038 37 0     3521         STA   IRSTP
038 38 0     3522   *E    LDB   PAREF
038 39 0     3523         IBB   F+,9999
038 40 0     3524         CAD - 1
038 41 0     3525         IBB   *+1,1         REMOVE LIST OF REFERENCES TO THIS
038 42 0     3526         STA   SETUP,04      PARAMETER, MAKE IT THE SETUP STACK
038 43 0     3527         SRA   4
038 44 0     3528         LDR   AVAIL
038 45 0     3529         STB   AVAIL
038 46 0     3530         STR - 0
038 47 0     3531         STA   PAREF,04
038 48 0     3532         BSA   G+,1          (THE FIRST PARAMETER MAY ALREADY BE
038 49 0     3533         EXT   BCUL2         IN REGISTER A)
038 50 0     3534         SUB   IRSTP         CAD PARAMETER
038 51 0     3535         STA   VEE,64
038 52 0     3536         STP   ASMBX
038 53 0     3537         BUN   ASMBL,X+
038 54 0     3538   *G    STP   REMX,SETUP    GENERATE ALL  STA ----,04
038 55 0     3539         BUN   REM,*+2       FROM THIS PARAMETER
038 56 0     3540         BUN   E-
038 57 0     3541         SRA   4
038 58 0     3542         STA   STAI,04
038 59 0     3543         STP   ASMBX
038 60 0     3544         BUN   ASMBL,STAI
038 61 0     3545         BUN   G-
038 62 0     3546   *F    CAD   PLOC          ASSEMBLE TO BUN TO THE
038 63 0     3547         SRA   4             BEGINNING OF THE PROCEDURE
038 64 0     3548         STA   BUNI,04
038 65 0     3549         IFL   BUNI,04,01
038 66 0     3550         STP   ASMBX
038 67 0     3551         BUN   ASMBL,BUNI
038 68 0     3552   *H    CLL   LEVEL         EXIT,WE ARE THROUGH WITH THE PROCEDURE
038 69 0     3553         BUN   D-
038 70 0     3554   VEE   F2448 11,0,0
038 71 0     3555   *W    F244  11,VEE,0
038 72 0     3556   *X    F424  0,10,W--V


038 75 0     3557   GCRQ  IFL   PRFSW,62,25   PROCESS LAST PARAMETER.  MARK IT
038 76 0     3558         STP   YSUBX         AS IN ACCUMULATOR IF ITS A CALL BY NAME
038 77 0     3559         BUN   YSUB1
038 78 0     3560         DFL   PRFSW,62,25   WE HAVE JUST FINISHED COLLECTING
038 79 0     3561         CLL   TAG           FUNCTION OR PROCEDURE PARAMETERS
038 80 0     3562         STA   V3
038 81 0     3563         IFL   V3,11,3
038 82 0     3564         STP   ASMBX         STORE LAST PARAMETER
038 83 0     3565         BUN   ASMBL,STAT3
038 84 0     3566   *C    CLL   PARSW
038 85 0     3567         LDB   FNSW
038 86 0     3568         DBB   GENRX,1       EXIT IF A FUNCTION DECLARATION
038 87 0     3569         LDR   PAREF
038 88 0     3570         BFR   D+,04,00      IF CALL BY NAME PARAMETERS HAVE
038 89 0     3571         CAD   LOCN          APPEARED, ASEMBLE BUN INSTRUCTION
038 90 0     3572         STA   PLOC          WHICH WILL GO TO THE INITIALIZATION PART
038 91 0     3573         STP   ASMBX
038 92 0     3574         BUN   ASMBL,BUNZ
038 93 0     3575   *D    IFL   DELTA,04,4
038 94 0     3576         BUN   GENRX


038 97 0     3577   GCRR  STP   XSTX          V1 IS LAST ARRAY SUBSCRIPT
038 98 0     3578         BUN   XST           MAKE SURE IT IS FIXED POINT AND
038 99 0     3579         DLB   V1,64,0       NOT IN REGISTER A
039 00 0     3580         LDR - 1             NOW COMES VERY TRICKY CODING.
039 01 0     3581         DLB   V2,64,00      IF THE SUBSCRIPT IS A CONSTANT,
039 02 0     3582         CAD   V1            SIMPLY CALCULATE THE ADDRESS
039 03 0     3583         BFA   GENDX,22,21
039 04 0     3584         IFL - 0,11,1        OTHERWISE SET INCREMENT WORD TO A 6
039 05 0     3585         STP   INSX          AND SET UP A LINK TO V1
039 06 0     3586         BUN   INS1          NOW INC WD/64=BASE ADDR. /04=AAAA
039 07 0     3587         BUN   GENX2         AAAA/67=V1    /04=ARRAY INFORMATION


039 10 0     3588   GCRS  STP   REMX,FUNS     FINISH SUBROUTINE DECLARATION.  REMOVE
039 11 0     3589         BUN   REM,OLDT      LOCATION FROM FUNS, REMOVE TEMP STORAGES.
039 12 0     3590   G11   F424  0313,0,*


039 15 0     3591   GCRT  CAD   BUNV1         GENERATE BUN V1
039 16 0     3592         BUN   GENXY


039 19 0     3593   GCRU  LDR   BNZAF
039 20 0     3594         BUN   GIF1          UNTIL SIMILAR TO IF


039 23 0     3595   GCRV  LDR   LOCN          END OF SEGMENT
039 24 0     3596         CFR   LCMAX,64
039 25 0     3597         BCL   *+2
039 26 0     3598         STR   LCMAX,64      SET LCMAX TO GREATEST LOCN
039 27 0     3599         STP   REMX,FUNS     USED IN SEGMENTS
039 28 0     3600         BUN   REM,*+2
039 29 0     3601   G12   F424  8990,0,*
039 30 0     3602         STA   LOCN,64       RESET LOCN TO BEGINNING OF SEGMENT
039 31 0     3603         LSA   8
039 32 0     3604         SRA   4             OUTPUT CONTROL WORD FOR LOADER
039 33 0     3605         BUN   GFWRF



039 37 0     3606   GCRW  IFL   LAMDA,00,1    RECORD THAT OTHERWISE HAS OCCURRED
039 38 0     3607         BUN   GENRX


039 41 0     3608   GCRX  DEFN  GENXY-1


039 44 0     3608   GCRY  CAD   V1            MAKE SURE A SUBSCRIPT IS FIXED POINT
039 45 0     3609         STP   FIXEX
039 46 0     3610         BFA   FIXER,21,0
039 47 0     3611         BUN   GENXV


039 50 0     3612   GCRZ  STP   CADX          STOP
039 51 0     3613         BUN   CAD1          THERE WILL BE AN ACCUMULATOR
039 52 0     3614   *A    CAD   HLTZ          SYMBOL PRESENT, IF THE STATEMENT
039 53 0     3615         BUN   GENXY         WAS SIMPLY STOP$



039 57 0     3616   GCROY DLB   *+2,44,0      TRACE
039 58 0     3617         STP   LIBRX
039 59 0     3618         BUN   LIBRF,DMPER
039 60 0     3619         IFL   TAG,00,1
039 61 0     3620         STP   REMX,OPRND
039 62 0     3621         BUN   REM,*+2
039 63 0     3622         BUN   GENRX         IF LABEL ONLY,EXIT
039 64 0     3623         STA   TEMP          IF LABEL(N), PUT N ON STACK
039 65 0     3624         DLB   TEMP,64,0
039 66 0     3625         CAD - 1
039 67 0     3626         SLA   6
039 68 0     3627   JCROY LDB   *
039 69 0     3628         STA - 0,44
039 70 0     3629         BUN   GENRX


039 73 0     3630   OBTN1 STP   REMX,OPRND
039 74 0     3631         BUN   REM,*+2       GET   TOP OF OPERAND STACK
039 75 0     3632         BUN   E+             AND PLACE IT IN V1
039 76 0     3633         STA   V1
039 77 0     3634         BUN   A+


039 80 0     3635   OBTN2 STP   REMX,OPRND    GET TOP OF OPERAND STACK AND PLACE IT IN
039 81 0     3636         BUN   REM,C+        V2
039 82 0     3637   *E    STP   WEMX
039 83 0     3638         BUN   WEM,GENRX
039 84 0     3639         CNST  37161000000   MISSING OPERAND
039 85 0     3640   *C    STA   V2
039 86 0     3641   *A    BFA   B+,11,0       IF AN ACCUMULATOR SYMBOL WAS
039 87 0     3642         BUN   OBTNX         REMOVED, SET SER TO ZERO
039 88 0     3643   *B    CLL   SER
039 89 0     3644   OBTNX BUN   *


039 92 0     3645   PMTR  LDR   KAPPA         SELECTIVELY BRING PARAMETER INTO A REG.
039 93 0     3646         BZR   A+            HAVE EMPTY SUBSCRIPTS APPEARED
039 94 0     3647         CLL   KAPPA
039 95 0     3648   *B    STP   CADX
039 96 0     3649         BUN   CAD1          IF SO, ASSEMBLE CAD V1 AND EXIT
039 97 0     3650         BUN   PMTRX
039 98 0     3651   *A    LDB   FUNS
039 99 0     3652         CAD - 0             IF BEFORE THE FIRST SEMICOLON,
040 00 0     3653         BSA   B-,1          ASSEMBLE CAD V1 AND EXIT
040 01 0     3654         STP   ACCX
040 02 0     3655         BUN   ACC4
040 03 0     3656         CAD   V1            OTHERWISE WE HAVE A CALL BY NAME
040 04 0     3657         BFA   PMTRX,11,0    FREE THE A-REGISTER
040 05 0     3658         BSA   C+,0
040 06 0     3659   *E    STP   WEMX
040 07 0     3660         BUN   WEM,*+2
040 08 0     3661         CNST  30111130000   IMPROPER FUNCTION ARGUMENT
040 09 0     3662         STA   V1
040 10 0     3663   *C    CAA   G5
040 11 0     3664         STP   INTRX         ASSEMBLE  CAD *+1, NOP V1
040 12 0     3665         BUN   INTRP
040 13 0     3666   PMTRX BUN   *


040 16 0     3667   ACC   DEFN  *-1
040 17 0     3667   ACC1  BUN   C+            ACC1.. PLACE V1 IN TEMP STORAGE
040 18 0     3668   ACC2  STP   GETMX         ACC2.. PLACE V2 IN TEMP STORAGE
040 19 0     3669         BUN   GETMP
040 20 0     3670         STA   V2,64
040 21 0     3671         IFL   V2,11,3
040 22 0     3672         CAD   STAT2
040 23 0     3673         BUN   ASMBY
040 24 0     3674   *C    STP   GETMX
040 25 0     3675         BUN   GETMP
040 26 0     3676         STA   V1,64
040 27 0     3677         IFL   V1,11,3
040 28 0     3678         CAD   STAT1
040 29 0     3679         BUN   ASMBY
040 30 0     3680   ACCX  DEFN  ASMBX
040 31 0     3680   ACC3  LDR   V1            ACC3.. FREE THE A REGISTER
040 32 0     3681         BFR   C-,11,0       IF V1 IS IN A, DO ACC1
040 33 0     3682         LDR   V2
040 34 0     3683         BFR   ACC2,11,0     IF V2 IS IN A, DO ACC2
040 35 0     3684   ACC4  LDB   SER           ELSE DO ACC4
040 36 0     3685         IBB   ACCX,9999     ACC4.. IF THE A-REGISTER IS IN USE
040 37 0     3686         STP   GETMX         WITH OTHER OPERANDS BESIDES THE CURRENT
040 38 0     3687         BUN   GETMP         ONE(S), STORE IT INTO TEMP
040 39 0     3688         LDB   SER
040 40 0     3689         STA - 0,64          AND MODIFY THE STACK ACCORDINGLY
040 41 0     3690         IFL - 0,11,3
040 42 0     3691         LDR - 0
040 43 0     3692         STR   V3
040 44 0     3693         CAD   STAT3
040 45 0     3694         CLL   SER
040 46 0     3695         BUN   ASMBY


040 49 0     3696   CAD2  LDB   XTWO+1        CAD V2
040 50 0     3697         BUN   CAD
040 51 0     3698   CAD1  LDB   XONE+1        CAD V1
040 52 0     3699   CAD   CAD - V
040 53 0     3700         STB   ZHE,04        BRING V(RB) INTO A REGISTER
040 54 0     3701         BFA   CADX,11,0
040 55 0     3702         STP   ACCX          IF ITS NOT THERE ALREADY, FREE
040 56 0     3703         BUN   ACC4          THE ACCUMULATOR
040 57 0     3704         LDB   ZHE
040 58 0     3705         CAD - V             COMPILE CAD OR CSU  V1 OR V2
040 59 0     3706         BSA   B+,1
040 60 0     3707         CAD - CADV1-1
040 61 0     3708   *D    STP   ASMBX
040 62 0     3709         BUN   ASMBY
040 63 0     3710   *C    LDB   ZHE
040 64 0     3711         STB - V,12
040 65 0     3712         CAD - V
040 66 0     3713   CADX  BSA   *,0
040 67 0     3714         STP   ACCX          TO REVERSE SIGN OF A-REGISTER, STORE
040 68 0     3715         BUN - ACC           IT THEN COMPILE CSU INSTRUCTION
040 69 0     3716         LDB   ZHE
040 70 0     3717   *B    CAD - CSUV1-1
040 71 0     3718         BUN   D-


040 74 0     3719   XST   CAD   V1
040 75 0     3720         STP   FIXEX         FIX V1 IF IT IS AN INTEGER
040 76 0     3721         BFA   FIXER,21,0
040 77 0     3722         STP   ACCX
040 78 0     3723         BFA   ACC1,11,0     STORE V1 IF IT IS IN REGISTER A
040 79 0     3724   XSTX  BUN   *


040 82 0     3725   FIXER CAD   V1
040 83 0     3726         BFA   A+,11,2
040 84 0     3727         STP   CADX
040 85 0     3728         BUN   CAD1          CHANGE V1 TO INTEGER FORM
040 86 0     3729         BFA   FIXEX,21,1
040 87 0     3730         DLB   FIXGN,64,00
040 88 0     3731         STP   LINKX         LINK TO FIX ROUTINE
040 89 0     3732         BUN   LINK1
040 90 0     3733         IFL   V1,21,1
040 91 0     3734         CAD   V1
040 92 0     3735   FIXEX BUN   *
040 93 0     3736   *A    BFA   FIXEX,21,1    IF V1 IS A CONSTANT,
040 94 0     3737         STP   FIXCX         CHANGE IT WITH FIXCN
040 95 0     3738         BUN   FIXCN
040 96 0     3739         STA   V1,00
040 97 0     3740         BUN   FIXEX-1


041 00 0     3741   TSTOP STP   ACCX          STORE A IF IT IS IN USE WITH
041 01 0     3742         BUN   ACC4          NON-CURRENT OPERAND(S)
041 02 0     3743         LDB   OP
041 03 0     3744         LDR - 0             IF NEXT ITEM IN OPERATION STACK
041 04 0     3745         CFR   HYPH,67       IS A MINUS, REMOVE IT AND REVERSE
041 05 0     3746         BCU   TSTOX         THE SIGN OF V1
041 06 0     3747         STP   REMX,OP
041 07 0     3748         BUN   REM,*+2
041 08 0     3749   G13   F424  3100,0,0
041 09 0     3750         CSU   V1
041 10 0     3751         STA   V2
041 11 0     3752   TSTOX BUN   *


041 14 0     3753   FLTCN STA   TEMP          CONVERT CONSTANT FROM INTEGER
041 15 0     3754         DLB   TEMP,64,00     TO FLOATING POINT FORM
041 16 0     3755         CAD - 1
041 17 0     3756   FLTCM CLL   RR0
041 18 0     3757         CLL   SYMBL
041 19 0     3758         BFA   B+,00,0
041 20 0     3759         IFL   SYMBL,22,61
041 21 0     3760   ZHE   CLR
041 22 0     3761         SRT   3
041 23 0     3762   *A    SLT   1             NORMALIZE
041 24 0     3763         DFL   SYMBL,22,1
041 25 0     3764         BFA   A-,31,00
041 26 0     3765         STA   SYMBL,08
041 27 0     3766   FLTC1 DEFN  *
041 28 0     3766   *B    STP   NMBRX         PUT INTO TABLE
041 29 0     3767         BUN   NMBR
041 30 0     3768         CAD - 0
041 31 0     3769         STA   L,23
041 32 0     3770         CAD   L
041 33 0     3771   FLTCX BUN   *


041 36 0     3772   FIXCN STA   TEMP          CONVERT FLOATING POINT CONSTANT
041 37 0     3773         DLB   TEMP,64,00     INTO INTEGER FORM
041 38 0     3774         CAD - 1
041 39 0     3775   FIXCM CLL   RR0
041 40 0     3776         IFL   RR0,21,1
041 41 0     3777         CFA   +6099999999
041 42 0     3778         BCH   E+
041 43 0     3779   S3    CLR
041 44 0     3780         SRT   8
041 45 0     3781         STA   TEMP
041 46 0     3782         CFA   *+1,02
041 47 0     3783         CLA   51
041 48 0     3784         BCL   C+
041 49 0     3785         DLB   TEMP,04,50    UNNORMALIZE (CLEVERLY)
041 50 0     3786         SLT - 0
041 51 0     3787   *C    STA   SYMBL
041 52 0     3788         BUN   B-
041 53 0     3789   *E    STP   WEMX
041 54 0     3790         BUN   WEM,FIXCM
041 55 0     3791         CNST  33436373800   CONSTANT OUT OF RANGE
041 56 0     3792   FIXCX DEFN  FLTCX


041 59 0     3792   ARTHG CLB   MONTR         ARITHMETIC SEQUENCE GENERATOR
041 60 0     3793         LDR   V2
041 61 0     3794         BFR   A+,11,0       CODE..  0  ACCUMULATOR FLOATING
041 62 0     3795         DBB   0,9996                1  ACCUMULATOR FIXED
041 63 0     3796         BFR   A+,11,2               2  (OTHER)     FLOATING
041 64 0     3797         IBB   0,9998                3  (OTHER)     FIXED
041 65 0     3798   *A    BFR   B+,21,1               4  CONSTANT    FLOATING
041 66 0     3799         DBB   0,9999                5  CONSTANT    FIXED
041 67 0     3800   *B    LDR   V1
041 68 0     3801         BFR   C+,11,0
041 69 0     3802         DBB   0,9976
041 70 0     3803         BFR   C+,11,2       CALCULATE 6 TIMES CODE(V1) PLUS CODE(V2)
041 71 0     3804         IBB   0,9988
041 72 0     3805   *C    BFR   D+,21,1
041 73 0     3806         DBB   0,9994
041 74 0     3807   *D    LDR - COMP          INDEX WITH THIS VALUE TO GET FANCY
041 75 0     3808         STR   ARTHM         COMP TABLE ENTRY, WHICH CONSISTS OF
041 76 0     3809   ARTHA LDR   ARTHM         IJ-PAIRS, LIKE AN INTERPRETIVE
041 77 0     3810   K3    CLA                 SYSTEM PROGRAM
041 78 0     3811         SLT   2
041 79 0     3812         STR   ARTHM         TAKE IJ-PAIRS FROM LEFT TO RIGHT
041 80 0     3813         STA   J,01
041 81 0     3814         BFA   ARTHC,91,3    TO ARTHC IF THIS IS THE LAST ENTRY
041 82 0     3815         SRT   1
041 83 0     3816         STA   I
041 84 0     3817         LDB   I
041 85 0     3818         BFR   J1,11,1       FLOAT OPERAND V(I)
041 86 0     3819         BFR   J2,11,2       STORE V(I) IN TEMP
041 87 0     3820         BFR   J3,11,3       FLOAT CONSTANT V(I)
041 88 0     3821         BFR   J4,11,4       BRING V(I) INTO A REGISTER
041 89 0     3822         BFR   J5,11,5       COMPUTE SUM,PRODUCT,ETC. OF CONSTANTS
041 90 0     3823         BUN   J6            CHECK FOR SPECIAL CASES IN CONSTANTS
041 91 0     3824   J1    DLB   TABSC+82,64,0
041 92 0     3825         STP   LINKX         CALL IN FLOAT SUBROUTINE
041 93 0     3826         BUN   LINK1
041 94 0     3827         LDB   I
041 95 0     3828         STB - V,21          FLOAT V(I)
041 96 0     3829         BUN   ARTHA
041 97 0     3830   J2    STP   ACCX          STORE V(I) IN TEMP
041 98 0     3831         BUN - ACC
041 99 0     3832         BUN   ARTHA
042 00 0     3833   J3    CAD - V             FLOAT THE CONSTANT V(I)
042 01 0     3834         STP   FLTCX
042 02 0     3835         BUN   FLTCN
042 03 0     3836         LDB   I
042 04 0     3837         STA - V,00
042 05 0     3838         BUN   ARTHA
042 06 0     3839   J4    STP   ACCX          FREE THE A REGISTER.
042 07 0     3840         BUN   ACC3
042 08 0     3841         LDB   I
042 09 0     3842         STP   CADX          BRING V(I) IN
042 10 0     3843         BUN   CAD
042 11 0     3844         BUN   ARTHA
042 12 0     3845   J5    DLB   V1,64,00
042 13 0     3846         LDR   V1            GET CONSTANTS V1,V2
042 14 0     3847         CAD - 1
042 15 0     3848         SLT   0
042 16 0     3849         STA   TEMP2
042 17 0     3850         DLB   V2,64,00
042 18 0     3851         LDR   V2
042 19 0     3852         CAD - 1
042 20 0     3853         SLT   0
042 21 0     3854         STA   TEMP1
042 22 0     3855         LDR   OPRTN
042 23 0     3856         CAD   I
042 24 0     3857         CLL   RR0           I SPECIFIES WHETHER FLOATING OR FIXED
042 25 0     3858         BFA   X+,01,1
042 26 0     3859         CAD   TEMP1
042 27 0     3860         CFR   PLUS,67
042 28 0     3861         BCU   A+            COMPUTE V2 OP V1
042 29 0     3862         FAD   TEMP2         FAD
042 30 0     3863         BUN   ARTHB
042 31 0     3864   *A    CFR   DOT,67
042 32 0     3865         BCU   B+
042 33 0     3866         FMU   TEMP2         FMU
042 34 0     3867         BUN   ARTHB
042 35 0     3868   *B    CFR   SOLD,67
042 36 0     3869         BCU   ARTHA
042 37 0     3870   SCNXX CLR                 CLR,FDV
042 38 0     3871         FDV   TEMP2
042 39 0     3872         BUN   ARTHB
042 40 0     3873   *X    IFL   RR0,21,1
042 41 0     3874         CAD   TEMP1
042 42 0     3875         CFR   PLUS,67
042 43 0     3876         BCU   A+
042 44 0     3877         ADD   TEMP2         ADD
042 45 0     3878         BUN   ARTHB
042 46 0     3879   *A    CFR   DOT,67
042 47 0     3880         BCU   B+
042 48 0     3881         MUL   TEMP2         MUL,SLT10
042 49 0     3882         SLT   10
042 50 0     3883         BZR   ARTHB
042 51 0     3884         BUN   V+
042 52 0     3885   *B    CFR   SOLD,67
042 53 0     3886         BCU   ARTHA
042 54 0     3887         SRT   10
042 55 0     3888         DIV   TEMP2         SRT 10,DIV
042 56 0     3889   ARTHB BOF   V+
042 57 0     3890   *A    STA   SYMBL,00      CHECK IF OUT OF RANGE
042 58 0     3891         STA   ACCUM         PUT COMPUTED CONSTANT INTO TABLE
042 59 0     3892         STP   NMBRX
042 60 0     3893         BUN   NMBR
042 61 0     3894         CAA - 0
042 62 0     3895         STA   ACCUM,00
042 63 0     3896         LDR   L             AND INTO ACCUM
042 64 0     3897         STR   ACCUM,64
042 65 0     3898         CAD   ACCUM
042 66 0     3899         BUN   ARTHX         AND EXIT
042 67 0     3900   *V    STP   WEMX
042 68 0     3901         BUN   WEM,A-
042 69 0     3902         CNST  33436373800   CONSTANT OUT OF RANGE.  USE =1=
042 70 0     3903   J6    CAD - V
042 71 0     3904         BPA   X+
042 72 0     3905         LDR   OPRTN
042 73 0     3906         BFR   X+,21,0
042 74 0     3907         LBC   I
042 75 0     3908         CSU - V3
042 76 0     3909         STA - V3
042 77 0     3910         LDB   I
042 78 0     3911         CAA - V
042 79 0     3912         STA - V
042 80 0     3913   *X    DLB - V,64,0        V(I) IS A CONSTANT.
042 81 0     3914         LDR - 1             CHECK IF IT IS A SPECIAL ONE
042 82 0     3915         BZR   A+            IS IS ZERO
042 83 0     3916         CFR   FONE+1
042 84 0     3917         BCE   D+            IS IT 1.0
042 85 0     3918   *Q    CAB
042 86 0     3919         DBB   0,9999        IS IT 10,100,1000,...,1000000000
042 87 0     3920         SLT   19
042 88 0     3921         BFA   *-2,11,0
042 89 0     3922         SLT   1
042 90 0     3923         CFR   XONE+1,00
042 91 0     3924         BCU   ARTHA
042 92 0     3925         IBB   D+,9998       IS IT 1
042 93 0     3926         CAD   V1
042 94 0     3927         EXT   V2
042 95 0     3928         BFA   ARTHA,21,0
042 96 0     3929         LDR   OPRTN
042 97 0     3930         DBB   0,9999
042 98 0     3931         STB   SHIFT,06
042 99 0     3932         BFR   Q+,62,48      CHECK IF OP IS MUL OR DIV
043 00 0     3933         LDB   I
043 01 0     3934         DBB   ARTHA,2
043 02 0     3935         BFR   T+,62,24
043 03 0     3936         BUN   ARTHA
043 04 0     3937   *Q    IFL   SHIFT,62,1    IF SO,  SLA
043 05 0     3938   *T    IFL   SHIFT,62,48     OR     SRA
043 06 0     3939         LBC   I
043 07 0     3940         STP   CADX
043 08 0     3941         DBB   CAD,9997
043 09 0     3942         STP   ASMBX
043 10 0     3943         BUN   ASMBL,SHIFT
043 11 0     3944         BUN   C+
043 12 0     3945   *A    DFL   BOF,61,9      SUPPRESS BOF *+2 IN RELATIONALS
043 13 0     3946   *A    LDR   OPRTN         IF ITS ZERO, AND WE ARE ADDING,
043 14 0     3947         BFR   C+,65,0       OR ONE AND WE ARE MULTIPLYING,
043 15 0     3948         BFR   M+,62,48      THE RESULT IS THE OTHER OPERAND
043 16 0     3949         BUN   ARTHA         IF ZERO AND MULTIPLYING, THE RESULT
043 17 0     3950   *D    LDR   OPRTN         IS ZERO.
043 18 0     3951         CFR   DOT,67
043 19 0     3952         BCU   ARTHA
043 20 0     3953   *C    LBC   I
043 21 0     3954         CAD - V3
043 22 0     3955   *M    STA   ACCUM
043 23 0     3956         BUN   ARTHX
043 24 0     3957   ARTHC STP   ACCX          FINISH OF ARITHMETICS.
043 25 0     3958         BUN   ACC4          FIRST FREE A REGISTER IF NECESSARY
043 26 0     3959         CAD   OPRTN
043 27 0     3960         SRA   4
043 28 0     3961         EXT   NN
043 29 0     3962         STA   TEMP1
043 30 0     3963         STA   TEMP2
043 31 0     3964         CAD   V2            COMPUTE OPERATION CODE
043 32 0     3965         SRS   10            PLUS SIGN OF V2
043 33 0     3966         ADL   TEMP2         PLUS TWICE SIGN OF V1
043 34 0     3967         CAD   V1
043 35 0     3968         SRS   10
043 36 0     3969         ADL   TEMP2
043 37 0     3970         ADL   TEMP2
043 38 0     3971         CAD   OPRTN
043 39 0     3972         BFA   A+,41,0       ADD,MULTIPLY, DIVIDE OPS
043 40 0     3973         BFA   B+,41,1       MAX, MIN OPS
043 41 0     3974         CAD   J             AND,OR,EQIV,IMPL OPS.
043 42 0     3975         ADL   TEMP2
043 43 0     3976         CSU   V1            CHECK FOR VALID BOOLEAN OPERANDS
043 44 0     3977         BPA   E+                                                              ?? BPA ?? BRANCH POSITIVE A?
043 45 0     3978         EXT   V2
043 46 0     3979         BMA   E+                                                              ?? BMA ?? BRANCH MINUS A?
043 47 0     3980         BFA   H+,21,1
043 48 0     3981   *E    STP   WEMX
043 49 0     3982         BUN   WEM,*+2
043 50 0     3983         CNST  30159610000   IMPROPER BOOLEAN OPERAND
043 51 0     3984   *H    LDB   TEMP2
043 52 0     3985   *K    CAD - GTAB2
043 53 0     3986         BUN   I+
043 54 0     3987   *A    CAD   J             INDEX INTO APPROPRIATE GTAB TABLE
043 55 0     3988         ADD   J
043 56 0     3989         ADL   TEMP2
043 57 0     3990         ADL   TEMP2
043 58 0     3991         LDB   TEMP2
043 59 0     3992         CAD - GTAB0
043 60 0     3993   YETH  BUN   I+,9988       (IN RELATION CASE,CHANGE FLOATING
043 61 0     3994         IBB   I+-1,GTAB0-GTAB1    TO FIXED)
043 62 0     3995   *B    CAD   J
043 63 0     3996         MUL   FUR
043 64 0     3997         DIV   TWL
043 65 0     3998         SLT   10
043 66 0     3999         ADL   TEMP2
043 67 0     4000         LDB   TEMP2
043 68 0     4001         CAD - GTAB1         THIS TABLE ENTRY CAUSES THE ASSEMBLER
043 69 0     4002   *I    STP   INTRX         TO PRODUCE ALL CODE NECESSARY FOR
043 70 0     4003         BUN   INTRP         THE BINARY OPEARTOR.
043 71 0     4004   ARTHX BUN   *


043 74 0     4005   LINK1 LDR - 1
043 75 0     4006         STR   EXPLN
043 76 0     4007   LINK  STP   LIBRX         MAKE SURE LIBRARY ROUTINE IS IN STORAGE
043 77 0     4008         BUN   LIBRF
043 78 0     4009         STB   V3
043 79 0     4010         IFL   V3,51,4
043 80 0     4011         CAD   V3
043 81 0     4012         SLA   4
043 82 0     4013   LINK2 STA   V3
043 83 0     4014         CAA   G6            COMPILE  STP, BUN INSTRUCTIONS
043 84 0     4015         STP   INTRX
043 85 0     4016         BUN   INTRP
043 86 0     4017         CLL   DEX           MARK B REGISTER UNKNOWN
043 87 0     4018   LINKX BUN   *


043 90 0     4019   VSUB  LDB   FUNS
043 91 0     4020         DLB - 0,64,00       RETURN..   COMPILE  LDB ()
043 92 0     4021         STB   LDBI,04                           BUN - 0
043 93 0     4022   VSUB1 CAD   G1


043 96 0     4023   INTRP STP   ASMBX         GENERATE SERIES OF INSTRUCTIONS
043 97 0     4024         STA   A+            FROM VOCABULARY TABLE.
043 98 0     4025         LDR   A+
043 99 0     4026   *B    CLA   *
044 00 0     4027         SLT   2
044 01 0     4028         STR   A+
044 02 0     4029         BFA   C+,02,00
044 03 0     4030         BFA   ACC1,02,32    POSSIBLY GENERATE A STORE INTO
044 04 0     4031         BFA   ACC2,02,33    TEMP STORAGE
044 05 0     4032         STA   B-,04
044 06 0     4033         LDB   B-
044 07 0     4034         CAD - VOCAB-1
044 08 0     4035         BUN   ASMBY
044 09 0     4036   *A    HLT   *
044 10 0     4037   *C    BSA   INTRX,0       AFTER THIS IS DONE, AND IF THE
044 11 0     4038         LDR   V1            RESULT IS IN THE ACCUMULATOR,
044 12 0     4039         STR   ACTBL+4,21
044 13 0     4040         STR   ACTBL+5,21
044 14 0     4041         SRS   10
044 15 0     4042         STA   B-,04         SET ACCUM TO THE CURRENT RESULT
044 16 0     4043         LDB   B-
044 17 0     4044         CAD - ACTBL-1
044 18 0     4045         STA   ACCUM
044 19 0     4046   INTRX BUN   *
044 20 0     4047   ACTBL CNST  00100000000   1 FIXED - TRUE SIGN
044 21 0     4048         CNST  00000000000   2 FLOATING - TRUE SIGN
044 22 0     4049         CNST  10100000000   3 FIXED - OPPOSITE SIGN
044 23 0     4050         CNST  10000000000   4 FLOATING - OPPOSITE SIGN
044 24 0     4051         CNST  00000000000   5 TYPE OF V1 - TRUE SIGN
044 25 0     4052         CNST  10000000000   6 TYPE OF V1 - REVERSED SIGN
044 26 0     4053   CONVX DEFN  INTRX
044 27 0     4053   VSUBX DEFN  INTRX


044 30 0     4053   LIBRF CAD - 0             PUT LIBRARY SUBROUTINE INTO TARGET
044 31 0     4054   LIBRX BFA   LIBRX,11,4    PROGRAM IF IT HASNT BEEN PUT THERE
044 32 0     4055         SRA   4             ALREADY.
044 33 0     4056         EXT   EX0
044 34 0     4057         SUB   VARB
044 35 0     4058         STA   VARB,04
044 36 0     4059         SLT   4
044 37 0     4060         STA - 0,64
044 38 0     4061         IFL - 0,64,1
044 39 0     4062         IFL - 0,11,1
044 40 0     4063         BUN   LIBRF


044 43 0     4064   FXUP  LDR   LOCN          COMPILE TO SET A PREVIOUS FORWARD
044 44 0     4065         STA   DESCR
044 45 0     4066         SRT   4
044 46 0     4067         STR   DESCR,04
044 47 0     4068         STA   WRTF,04
044 48 0     4069         BSA   *+2,7
044 49 0     4070         BUN   *+2
044 50 0     4071         IFL   DESCR,00,1    IF SIGN IS SEVEN, WE MEAN THE
044 51 0     4072         BCS   *+2,2
044 52 0     4073         BUN   *+4
044 53 0     4074         BSA   *+3,8
044 54 0     4075         STP 4 9898,0208
044 55 0     4076         BUN 4 9898,WRTF
044 56 0     4077         LDR   DESCR         PRESENT LOCATION PLUS 1
044 57 0     4078         LDB   LRTF          REFERENCE TO THE PRESENT LOCATION
044 58 0     4079         CAD   WRTF
044 59 0     4080         CFA   PREV,04
044 60 0     4081         BCH   A+            IF WE CAN FIX UP THE INSTRUCTION WHILE
044 61 0     4082         CAD - BUF+1         IT SITS IN THE OUTPUT BUFFER, WE WILL
044 62 0     4083         BFA   A+,04,0       DO IT DIRECTLY
044 63 0     4084         CFA   WRTF,04
044 64 0     4085         BCH   A+
044 65 0     4086         SUB   WRTF
044 66 0     4087         SLA   6
044 67 0     4088         STA   *+1,44
044 68 0     4089         DBB   *+1,0
044 69 0     4090         STR - BUF+2,04
044 70 0     4091         BUN   FXUPX
044 71 0     4092   *A    DLB   CNTRF,04,1
044 72 0     4093         STR - BUF+3
044 73 0     4094         BUN   WRIT6
044 74 0     4095   FXUPX DEFN  WRITX
044 75 0     4095   PREV  DEFN  BUF+99



044 79 0     4095   XZERO F244  21,0,XONE     THE FIRST FEW CONSTANTS
044 80 0     4096         CNST  0000000000
044 81 0     4097   FZERO F244  20,0,FONE
044 82 0     4098         CNST  0000000000
044 83 0     4099   XONE  F244  21,0,XTWO
044 84 0     4100         CNST  0000000001
044 85 0     4101   FONE  F244  20,0,FTWO
044 86 0     4102         CNST  5110000000
044 87 0     4103   XTWO  F244  21,0,0
044 88 0     4104         CNST  0000000002
044 89 0     4105   FTWO  F244  20,0,0
044 90 0     4106         CNST  5120000000
044 91 0     4107   LALE  F244  30,100,20
044 92 0     4108   FCTIN F244  16,FUNGN,0


044 95 0     4109   LOC   DEFN  *
044 96 0     4109         LOCN  *+7
044 97 0     4116   SCRTB F244  08,REAL,0     SCRAMBLE TABLE FOR IDENTIFIERS
044 98 0     4117         HLT   0
044 99 0     4118         HLT   0             THIS TABLE IS INITIALIZED TO
045 00 0     4119         HLT   0             THE RESERVED WORDS
045 01 0     4120         F244  04,GOGN,0
045 02 0     4121         HLT   0
045 03 0     4122         HLT   0
045 04 0     4123         F244  12,OUTGN,0
045 05 0     4124         HLT   0
045 06 0     4125         HLT   0
045 07 0     4126         HLT   0
045 08 0     4127         HLT   0
045 09 0     4128         HLT   0
045 10 0     4129         HLT   0
045 11 0     4130         HLT   0
045 12 0     4131         F244  08,IMPGN,TABSC+67
045 13 0     4132         F244  04,ORGN,0
045 14 0     4133         HLT   0
045 15 0     4134         HLT   0
045 16 0     4135         F244  08,EQIGN,0
045 17 0     4136         F244  04,TOGN,0
045 18 0     4137         F244  08,DUMPE,0
045 19 0     4138         HLT   0
045 20 0     4139         HLT   0
045 21 0     4140         HLT   0
045 22 0     4141         HLT   0
045 23 0     4142         HLT   0
045 24 0     4143         HLT   0
045 25 0     4144         HLT   0
045 26 0     4145         HLT   0
045 27 0     4146         HLT   0
045 28 0     4147         HLT   0
045 29 0     4148         HLT   0
045 30 0     4149         HLT   0
045 31 0     4150         HLT   0
045 32 0     4151         HLT   0
045 33 0     4152         HLT   0
045 34 0     4153         HLT   0
045 35 0     4154         HLT   0
045 36 0     4155         HLT   0
045 37 0     4156         F244  10,BEGGN,TABSC+92
045 38 0     4157         F244  06,ANDGN,0
045 39 0     4158         HLT   0
045 40 0     4159         HLT   0
045 41 0     4160         HLT   0
045 42 0     4161         F244  06,ENDGN,0
045 43 0     4162         F244  06,ABSGN,0
045 44 0     4163         HLT   0
045 45 0     4164         HLT   0
045 46 0     4165         HLT   0
045 47 0     4166         HLT   0
045 48 0     4167         F244  06,GEQGN,0
045 49 0     4168         F2440 12,EITGN,0
045 50 0     4169         F244  10,MEMRY,0
045 51 0     4170         F244  14,BOOGN,TABSC+34
045 52 0     4171         F244  06,MODGN,GSEG
045 53 0     4172         HLT   0
045 54 0     4173         F244  06,EQLGN,TABSC+37
045 55 0     4174         F244  12,FORMG,0
045 56 0     4175         F244  06,MINGN,TABSC+42
045 57 0     4176         HLT   0
045 58 0     4177         F244  16,FLOGN,TABSC+44
045 59 0     4178         F244  06,FORGN,TABSC+45
045 60 0     4179         F244  06,MAXGN,TABSC+46
045 61 0     4180         HLT   0
045 62 0     4181         HLT   0
045 63 0     4182         HLT   0
045 64 0     4183         HLT   0
045 65 0     4184         HLT   0
045 66 0     4185         F244  10,ENTGN,0
045 67 0     4186         F244  06,GTRGN,GNARR
045 68 0     4187         HLT   0
045 69 0     4188         HLT   0
045 70 0     4189         F244  18,OTHGN,FCTIN
045 71 0     4190         HLT   0
045 72 0     4191         F244  06,NOTGN,0
045 73 0     4192         F244  18,STAX,0
045 74 0     4193         HLT   0
045 75 0     4194         F244  06,LSSGN,0
045 76 0     4195         F244  14,MONGN,0
045 77 0     4196         F244  14,OVEGN,0
045 78 0     4197         F244  16,EXTGN,0
045 79 0     4198         HLT   0
045 80 0     4199         HLT   0
045 81 0     4200         HLT   0
045 82 0     4201         F244  12,SWIGN,TABSC+54
045 83 0     4202         F244  10,UNTGN,0
045 84 0     4203         HLT   0
045 85 0     4204         HLT   0
045 86 0     4205         HLT   0
045 87 0     4206         F244  10,INPGN,0
045 88 0     4207         HLT   0
045 89 0     4208         F244  12,RETGN,0
045 90 0     4209         HLT   0
045 91 0     4210         HLT   0
045 92 0     4211         F244  04,IFGN,0
045 93 0     4212         HLT   0
045 94 0     4213         HLT   0
045 95 0     4214         HLT   0
045 96 0     4215         HLT   0


045 99 0     4216   SSC   HLT   SCNT
046 00 0     4217   LOCN  F244  0,0200,0
046 01 0     4218   SYS   DEFN  *
046 02 0     4218   EXPF  F244  31,100,20     SOME LIBRARY ROUTINES
046 03 0     4219         F244  30,100,30
046 04 0     4220         F244  30,100,40     THE 64-FIELDS OF THESE CODES
046 05 0     4221         F244  30,100,50     ARE FIXED UP TO THE NUMBER
046 06 0     4222   FIX   F244  31,100,60     OF LOCATIONS USED BY THE ROUTINES,
046 07 0     4223         CNST  $FIX$         THE THE LIBRARY PROCESSOR.
046 08 0     4224   FLOAT F244  30,100,71
046 09 0     4225         CNST  $FLOAT$
046 10 0     4226   MONTR F244  30,100,80
046 11 0     4227   MAMAX HLT   MSIZE
046 12 0     4228   MNTRE F244  40,MONTR,0
046 13 0     4229   ERROR F244  30,100,90
046 14 0     4230   DMPER F244  30,100,100
046 15 0     4231   DUMPR F244  40,DMPER,0
046 16 0     4232   RITE  F244  30,10,0
046 17 0     4233   REED  F244  30,10,0
046 18 0     4234   SCNT  DEFN  *             THE BEGINNING OF ASSOCIATIVE MEMORY

046 20 0     4234         LOCN  4500
046 21 0     4500   STACK CRF 4 FR1+28,21,RLO INITIALIZATION OF THE PROGRAM
046 22 0     4501         MRW 4 OT
046 23 0     4502         CLL   BUF
046 24 0     4503         LDB   WRIT4         CLEAR OUTPUT BUFFER
046 25 0     4504         RTF   BUF,99
046 26 0     4505         CRF 4 FR2+28,51     LOAD FORMAT BANDS
046 27 0     4506         CWF 4 FR6+28,32      FORWARD REFERENCES
046 28 0     4507         CWF 4 FR3+28,12      OUTPUT INSTRUCTIONS
046 29 0     4508         CWF 4 FR4+28,42      ERROR MESSAGES
046 30 0     4509         CWF 4 FR8+28,22     ALGOL STATEMENTS
046 31 0     4510         CWF 4 FR7+28,52      FIXUPS
046 32 0     4511         MPF 4 OT,3
046 33 0     4512         BCS   HDNG+2,4
046 34 0     4513   *H    BUN   HDNG          BUN/HPI SWITCH
046 35 0     4514         SPO   RDY,8
046 36 0     4515         F424  8421,0,1248
046 37 0     4516         BUN   H-
046 38 0     4517   HDNG  STP 4 9898,1632
046 39 0     4518         BUN 4 9898,IMAGE
046 40 0     4519         STP 4 9999
046 41 0     4520         BUN 4 9999,IMAGE
046 42 0     4521         BUN   SCN2          PROGRAM STARTS AT SCAN2


046 45 0     4522         CNST  20002000000
046 46 0     4523   HPV   CNST  0,0,0
046 47 0     4526         CNST  $BAC-220 ON LINE HSP VERSION$
046 48 0     4532         CNST  $  2/1/62$
046 49 0     4534         CNST  0,0,0,0,0
046 50 0     4539   PTV   CNST  21615000000,20000000000,20000000000
046 51 0     4542         CNST  $BAC-220 PAPER TAPE VERSION $
046 52 0     4548         CNST  $  2/1/62$
046 53 0     4550   RDY   CNST  21600000000
046 54 0     4551         CNST  $PLEASE READY HIGH-SPEED PRINTER$


046 57 0     4558   FR1   FBGR  INPUT,T2Z1B4A,15(T5A)
046 58 0     4587   FR2   FBGR  INPUT,16(P5A),P10Z
046 59 0     4616   FR3   FBGR  PRINT,49B,TZZZZZZNNNN,BBB,SBNNNNBNNBNNNN,BT5A,44B
046 60 0     4645   FR6   FBGR  PRINT,49B,TZZZZZZNNNN,BBB,SBNNNNBNNBZZZZ,5BT5A,44B
046 61 0     4674   FR7   FBGR  PRINT,49B,TZZZZZZNNNN,BBB,T6Z10BNNNN,50B
046 62 0     4703   FR4   FBGR  PRINT,7(T5A),85B
046 63 0     4732   FR8   FBGR  PRINT,TZZNNNNZZZZ,4B,16(T5A),32B





046 69 0     4761         LOCN  LOC
046 70 0     4109         FINI  1
             4109               +0371720000
             4110               +6099999999
             4111               +5822570000
             4112               +9999999999
             4113               +6034037172
             4114               +4959035600
             4115               +4959045600
